{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": 0, "passes": 9}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": 0, "passes": 4}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": 0, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": 0, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": 0, "passes": 7}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": 0, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": 0, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": 0, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": 0, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": 0, "passes": 4}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": 0, "passes": 8}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": 0, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": 0, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": 0, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": 0, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": 0, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": 0, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": 0, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": 0, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": 0, "passes": 3}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": 0, "passes": 7}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": 0, "passes": 6}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": 0, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": 0, "passes": 3}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": 0, "passes": 8}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": 0, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": 0, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": 0, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": 0, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": 0, "passes": 8}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": 0, "passes": 4}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": 0, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": 0, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": 0, "passes": 7}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": 0, "passes": 4}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": 0, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.", "pass@10": 0, "passes": 8}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": 0, "passes": 1}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": 0, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": 0, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": 0, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": 0, "passes": 8}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": 0, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": 0, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": 0, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array.", "pass@10": 0, "passes": 3}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": 0, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": 0, "passes": 10}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": 0, "passes": 4}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": 0, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": 0, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": 0, "passes": 7}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices.", "pass@10": 0, "passes": 2}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": 0, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": 0, "passes": 10}
{"task_id": 223, "prompt": "Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)", "pass@10": 0, "passes": 1}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": 0, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 229, "prompt": "Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.", "pass@10": 0, "passes": 3}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": 0, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": 0, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": 0, "passes": 6}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": 0, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": 0, "passes": 10}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": 0, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": 0, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": 0, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": 0, "passes": 6}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": 0, "passes": 2}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": 0, "passes": 6}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": 0, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": 0, "passes": 2}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": 0, "passes": 2}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": 0, "passes": 2}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": 0, "passes": 3}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": 0, "passes": 10}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": 0, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": 0, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": 0, "passes": 10}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": 0, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": 0, "passes": 10}
{"task_id": 273, "prompt": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.", "pass@10": 0, "passes": 1}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": 0, "passes": 5}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": 0, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": 0, "passes": 7}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number.", "pass@10": 0, "passes": 1}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": 0, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": 0, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": 0, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": 0, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": 0, "passes": 9}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": 0, "passes": 2}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": 0, "passes": 10}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": 0, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": 0, "passes": 9}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": 0, "passes": 9}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": 0, "passes": 9}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": 0, "passes": 8}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": 0, "passes": 10}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": 0, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": 0, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": 0, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": 0, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": 0, "passes": 10}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 398, "prompt": "Write a function to compute the sum of digits of each number of a given list.", "pass@10": 0, "passes": 7}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": 0, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd.", "pass@10": 0, "passes": 8}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": 0, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": 0, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": 0, "passes": 10}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": 0, "passes": 8}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": 0, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": 0, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": 0, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": 0, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": 0, "passes": 10}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium.", "pass@10": 0, "passes": 9}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number.", "pass@10": 0, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": 0, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ration of positive numbers in an array of integers.", "pass@10": 0, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": 0, "passes": 2}
{"task_id": 446, "prompt": "Write a python function to count the occurence of all elements of list in a tuple.", "pass@10": 0, "passes": 1}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": 0, "passes": 5}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": 0, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": 0, "passes": 9}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": 0, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": 0, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": 0, "passes": 1}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": 0, "passes": 8}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": 0, "passes": 7}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": 0, "passes": 4}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": 0, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": 0, "passes": 5}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": 0, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": 0, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": 0, "passes": 7}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": 0, "passes": 8}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": 0, "passes": 10}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list.", "pass@10": 0, "passes": 6}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": 0, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": 0, "passes": 10}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": 0, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": 0, "passes": 1}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": 0, "passes": 3}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": 0, "passes": 1}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": 0, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list.", "pass@10": 0, "passes": 10}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": 0, "passes": 8}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": 0, "passes": 7}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position.", "pass@10": 0, "passes": 3}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple.", "pass@10": 0, "passes": 9}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": 0, "passes": 6}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.", "pass@10": 0, "passes": 7}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": 0, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": 0, "passes": 6}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": 0, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": 0, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": 0, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": 0, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": 0, "passes": 9}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": 0, "passes": 9}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": 0, "passes": 9}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": 0, "passes": 9}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": 0, "passes": 3}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": 0, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": 0, "passes": 9}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": 0, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": 0, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": 0, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": 0, "passes": 9}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": 0, "passes": 3}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": 0, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": 0, "passes": 10}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list.", "pass@10": 0, "passes": 6}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": 0, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": 0, "passes": 6}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": 0, "passes": 7}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": 0, "passes": 6}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,", "pass@10": 0, "passes": 8}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": 0, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.", "pass@10": 0, "passes": 1}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": 0, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": 0, "passes": 6}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": 0, "passes": 7}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": 0, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": 0, "passes": 7}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": 0, "passes": 3}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": 0, "passes": 1}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": 0, "passes": 1}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": 0, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": 0, "passes": 5}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": 0, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.", "pass@10": 0, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": 0, "passes": 10}
{"task_id": 802, "prompt": "Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/", "pass@10": 0, "passes": 1}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": 0, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": 0, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": 0, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": 0, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": 0, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": 0, "passes": 8}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": 0, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": 0, "passes": 9}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": 0, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": 0, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": 0, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": 0, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": 0, "passes": 8}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 576, "prompt": "Write a python function to check whether a list is sublist of another or not.", "pass@10": 0, "passes": 1}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": 0, "passes": 5}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": 0, "passes": 10}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": 0, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": 0, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": 0, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": 0, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": 0, "passes": 10}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order. You should ensure that your solution is optimized for performance when working with large datasets.", "pass@10": false, "passes": 0}
{"task_id": 8, "prompt": "Create a function that calculates the square of each element in a list.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order. The matrix should be sorted according to the sum of its rows.", "pass@10": true, "passes": 8}
{"task_id": 14, "prompt": "Write a python function to calculate the volume of a triangular prism. This should involve finding the specific measurements needed. The function should obtain the base area and the height.", "pass@10": true, "passes": 5}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Please ensure that the input is a positive number.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to determine if a specified array of integers has any repeated elements.", "pass@10": false, "passes": 0}
{"task_id": 20, "prompt": "Create a function to determine whether the provided number is woodball or not.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not. Ensure your implementation handles zero and edge cases appropriately for robustness.", "pass@10": true, "passes": 9}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": true, "passes": 8}
{"task_id": 63, "prompt": "Create a function to identify the greatest disparity between accessible pairs in the given list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. Ensure that your solution handles both integer and string data types.", "pass@10": true, "passes": 8}
{"task_id": 65, "prompt": "Write a function to flatten a list. Your function should also sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers. Make sure to consider edge cases where the set might be empty or contain a single element.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. Ensure your solution efficiently handles both increasing and decreasing sequences.", "pass@10": true, "passes": 8}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Sorting a list of elements usually involves rearranging them in a certain order. This order can be ascending or descending based on the criteria chosen.", "pass@10": true, "passes": 9}
{"task_id": 79, "prompt": "Create a python function to determine if the word's length is odd or not.", "pass@10": true, "passes": 5}
{"task_id": 84, "prompt": "Write a function to identify the nth numeral in the Newman-Conway series.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Create a function that returns a dictionary indicating the count of each element in a list.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": true, "passes": 7}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word. Consider edge cases where the string may be empty or contain multiple spaces between words.", "pass@10": true, "passes": 8}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Ensure that your solution handles edge cases where the list may contain special characters or be empty.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Create a function to compute the result of 'a' raised to the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. Ensure your solution handles edge cases, such as an empty list or multiple tuples having the same smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists. You are given a list that contains multiple lists. Your task is to identify the smallest list and then determine its length.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Create a Python function that determines the count of divisors for a specified integer.", "pass@10": true, "passes": 7}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. Make sure to maintain the original order of tuple elements during the append operation.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not. Ensure that various edge cases such as negative numbers, positive numbers, and zero are considered.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Develop a function to determine if every dictionary within a list is devoid of elements or not.", "pass@10": false, "passes": 0}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number. Make sure to consider edge cases such as very small or very large numbers in your implementation.", "pass@10": true, "passes": 1}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string. The function should efficiently calculate this difference. It should be able to handle large input sizes efficiently.", "pass@10": true, "passes": 1}
{"task_id": 128, "prompt": "Create a function to identify words in a provided list that exceed n characters in length.", "pass@10": true, "passes": 8}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. A magic square is a square matrix in which the sum of every row, column, and both main diagonals is the same.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Create a function that determines the element that appears most frequently in a provided list.", "pass@10": true, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": true, "passes": 6}
{"task_id": 132, "prompt": "Write a function. The purpose of the function is to convert a tuple to a string.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. The function should be able to handle large values of n efficiently. Consider optimizing the algorithm for faster execution.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Ensure your function can handle an empty list and a list with only one element efficiently.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists. Ensure the function handles lists of different lengths appropriately.", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array.", "pass@10": true, "passes": 3}
{"task_id": 161, "prompt": "Write a function to remove all elements. These elements should be removed from a given list if they are present in another list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Develop a function to determine the total of (n - 2*i) from i=0 to n // 2, for example n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Create a function to check whether two integers have divisors that add up to the same value.", "pass@10": false, "passes": 0}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet. This comparison should be case insensitive.", "pass@10": true, "passes": 9}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": true, "passes": 9}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 4}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list. Ensure your solution efficiently handles a list of varying lengths and element types.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. Ensure your solution efficiently handles edge cases where the indices are out of the list's bounds.", "pass@10": true, "passes": 3}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Ensure your solution accounts for non-negative side lengths.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string. You need to identify every instance where 'std' appears within the input string. Ensure that the count accurately reflects the total occurrences by checking the input thoroughly.", "pass@10": true, "passes": 10}
{"task_id": 223, "prompt": "Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.) Ensure that your solution efficiently handles large arrays.", "pass@10": false, "passes": 0}
{"task_id": 224, "prompt": "Write a python function to determine how many set bits are present in a given number. A set bit is a binary digit that has the value 1.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters from a string. These characters should have odd index values of a given string.", "pass@10": true, "passes": 6}
{"task_id": 227, "prompt": "Construct a procedure to identify the smallest among three values.", "pass@10": true, "passes": 10}
{"task_id": 229, "prompt": "Write a function that receives an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements show up before positive ones, and where the relative order among negative and positive elements is preserved.", "pass@10": false, "passes": 0}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items. The items are chosen from the list provided as input.", "pass@10": true, "passes": 9}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 7}
{"task_id": 239, "prompt": "Compose a function which accepts positive integers m and n to determine how many possible sequences of length n exist, where each element is a positive integer and is at least twice as large as the preceding element but not greater than m.", "pass@10": false, "passes": 0}
{"task_id": 240, "prompt": "Create a function that accepts two lists as arguments and swaps out the final element of the first list with the contents of the second list.", "pass@10": true, "passes": 5}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method. The Babylonian method is a well-known iterative algorithm. It can be used for finding the square roots of numbers.", "pass@10": true, "passes": 9}
{"task_id": 247, "prompt": "Create a function that determines the length of the longest subsequence in the given string that reads the same forwards and backwards.", "pass@10": true, "passes": 5}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element. The function should be able to count how many times the element occurs in the tuple.", "pass@10": true, "passes": 8}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list. Ensure that the function efficiently handles lists containing a large number of elements.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number. This means the number should be zero or greater. The function should then return the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 4}
{"task_id": 257, "prompt": "Write a function that takes in two numbers. The function should be able to accept any two numerical inputs. The function returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 9}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. The nth newman\u2013shanks\u2013williams prime number is the prime number at position n when following the sequence defined by these primes. This position n is given as an input parameter to the function which needs to be implemented.", "pass@10": true, "passes": 1}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": true, "passes": 7}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": false, "passes": 0}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length. The lateral surface area is calculated by multiplying the perimeter of the base by the height of the cube.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function. The purpose of the function is to find the ascii value of a character.", "pass@10": true, "passes": 10}
{"task_id": 271, "prompt": "Write a python function that receives an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": true, "passes": 9}
{"task_id": 273, "prompt": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index. Ensure that both tuples are of the same length to avoid index errors.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n, filtering the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. Ensure the function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 6}
{"task_id": 281, "prompt": "Create a Python function to determine whether the items in a specified list are unique.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise. Ensure that both lists are of the same length before proceeding with the subtraction.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to determine the number of ways to color the fence so that no more than 2 neighboring posts share the same color for the specified fence with n posts and k colors.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": true, "passes": 6}
{"task_id": 294, "prompt": "Create a function that locates the highest value in a provided heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to calculate the number of inversions in an array.", "pass@10": true, "passes": 9}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is the same as sum of last n bits.", "pass@10": true, "passes": 3}
{"task_id": 308, "prompt": "Write a function to identify the specified count of largest products from two given lists, selecting one factor from each list.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to assign the leftmost bit that is not yet set.", "pass@10": true, "passes": 2}
{"task_id": 389, "prompt": "Create a function that calculates the n'th lucas number.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list into a nested dictionary. You will need to iterate through each list in order to properly achieve this. The resulting nested dictionary should reflect the structure of the input lists.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible. You need to do this by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 6}
{"task_id": 393, "prompt": "Write a function to find the longest list from a collection of lists. The list you need to find should be the one that has the greatest number of elements. The function should return this list with maximum length.", "pass@10": true, "passes": 5}
{"task_id": 397, "prompt": "Create a function that calculates the median of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 398, "prompt": "Write a function to compute the sum of digits of each number of a given list. Ensure that the function handles negative numbers by considering the digits of their absolute values.", "pass@10": false, "passes": 0}
{"task_id": 399, "prompt": "Write a function to perform the mathematical operation of bitwise xor. The operation should be applied across the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. Ensure that both tuples have the same structure and lengths before proceeding with the index wise addition.", "pass@10": true, "passes": 4}
{"task_id": 404, "prompt": "Create a Python function that determines the lesser of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd. Make sure to test the function with various input values to ensure its accuracy.", "pass@10": true, "passes": 9}
{"task_id": 409, "prompt": "Create a function that identifies the smallest product from the pairs of tuples provided in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Assume the list may contain elements of different data types, but your function should only consider numerical values when determining the minimum.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to obtain the nth element from a specified list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": true, "passes": 10}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers. After rounding each number, you should calculate the total sum of the rounded numbers. Then print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 7}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter. Ensure that the delimiter is inserted between every element of the tuple without any trailing delimiter at the end.", "pass@10": true, "passes": 6}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Consider edge cases such as n being zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": true, "passes": 7}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort. Ensure your implementation efficiently handles large arrays with varying gaps and decreasing sequences.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples. The function should take from the given two tuples and process them.", "pass@10": true, "passes": 4}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium. The function should handle different sets of trapezium dimensions and return accurate results.", "pass@10": true, "passes": 2}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Consider each integer as a string representation, and concatenate them without any separator. Then convert the resulting string back into an integer.", "pass@10": true, "passes": 7}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ratio of positive numbers in an array of integers. Ensure your solution efficiently handles large input sizes.", "pass@10": true, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples. Ensure that the function handles tuples of unequal length by multiplying until the length of the shorter tuple and ignoring any excess elements from the longer tuple.", "pass@10": true, "passes": 6}
{"task_id": 446, "prompt": "Write a python function to count the occurence of all elements of list. The elements should be counted in a tuple.", "pass@10": false, "passes": 0}
{"task_id": 447, "prompt": "Write a function to find cubes of each element in a given list. A cube is the result of multiplying a number by itself twice. Your function should return a new list containing the cubes of the original elements.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Create a function that eliminates every whitespace in the specified string.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Ensure that your function efficiently handles lists of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Assume that the function receives the length and width of the rectangle as arguments.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings. A substring consists of uppercase letters within a given string.", "pass@10": true, "passes": 5}
{"task_id": 464, "prompt": "Write a function to check if all values in a given dictionary are identical. The function should perform this check by comparing each value with others to ensure uniformity.", "pass@10": true, "passes": 9}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Ensure that your function handles tuples of varying lengths efficiently.", "pass@10": true, "passes": 9}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not. Ensure your implementation handles both positive and negative integers efficiently.", "pass@10": true, "passes": 9}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 1}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Ensure the function handles both positive and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": true, "passes": 2}
{"task_id": 610, "prompt": "Write a python function which accepts a list and returns a list containing the same elements, but the k'th element removed.", "pass@10": true, "passes": 9}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list.", "pass@10": true, "passes": 3}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Write a function that moves all the numbers to the end of the provided string.", "pass@10": true, "passes": 7}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase. Ensure that your function handles special characters and numbers appropriately while converting the alphabetical characters to uppercase.", "pass@10": true, "passes": 4}
{"task_id": 625, "prompt": "Write a python function to swap the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to determine the smallest absent number from a sorted list of natural numbers.", "pass@10": false, "passes": 0}
{"task_id": 633, "prompt": "Create a Python function to calculate the sum of the bitwise exclusive OR for every pair of integers in the specified list.", "pass@10": true, "passes": 10}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 5}
{"task_id": 637, "prompt": "Write a function to check this condition. You need to determine if the given amount results in neither a profit nor a loss.", "pass@10": true, "passes": 6}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number. The sequence of nonagonal numbers begins with 1, 9, 24, 46, 75, and continues such that each number represents a polygon with nine sides and follows a specific formula for calculation.", "pass@10": true, "passes": 1}
{"task_id": 644, "prompt": "Write a python function to reverse an array up to a given position. The array should be reversed only up to the specified index. Elements beyond this index should remain unchanged.", "pass@10": true, "passes": 6}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Make sure the function handles different data types gracefully.", "pass@10": true, "passes": 3}
{"task_id": 721, "prompt": "Given a square matrix of size N*N provided as a list of lists, where each cell is associated with a specific cost. A path is defined as a particular sequence of cells that starts from the top-left cell, only moving right or down, and ends on the bottom-right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 4}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length, and you need to write a function to count indices where the lists have the same values.", "pass@10": true, "passes": 10}
{"task_id": 724, "prompt": "Create a function that accepts base and power as inputs and compute the sum of every digit of the base raised to the given power.", "pass@10": true, "passes": 6}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string. Ensure the function handles cases with nested or multiple pairs of quotation marks accurately.", "pass@10": true, "passes": 1}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list. Ensure the function maintains the original order of elements after removal.", "pass@10": true, "passes": 6}
{"task_id": 732, "prompt": "Write a function. The function should replace all occurrences of spaces, commas, or dots. It should replace these with a colon.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 8}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/ Consider edge cases where the number might be very small or large, and determine how they should be handled with respect to bit manipulation.", "pass@10": true, "passes": 6}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php Ensure your solution efficiently handles large datasets.", "pass@10": true, "passes": 8}
{"task_id": 739, "prompt": "Write a python function to determine the position of the least triangular number containing n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 4}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Ensure to handle tuples with an odd number of elements appropriately. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not. Ensure your implementation efficiently handles both uppercase and lowercase letters.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to determine the numbers within a specified range from startnum to endnum where each number is divisible by every digit it includes. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ This involves taking each string that represents a number and interpreting it as an integer or floating point number. Make sure to maintain the original order of elements that have equal numeric value.", "pass@10": true, "passes": 4}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": true, "passes": 9}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Read this article for reference: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 7}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Consider implementing an efficient solution that optimizes for both time and space complexity.", "pass@10": true, "passes": 9}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You are provided with a list of tuples. In this task, you are to find the minimum k records from the list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 10}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list.", "pass@10": true, "passes": 1}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurrences in the original list. Ensure your function can handle nested lists and lists with varying data types.", "pass@10": false, "passes": 0}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": true, "passes": 2}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12. Assume that the year is not a leap year.", "pass@10": true, "passes": 7}
{"task_id": 764, "prompt": "Create a Python function that calculates the count of numerical digits within a specified string.", "pass@10": true, "passes": 9}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Ensure the function handles empty lists and lists with a single element gracefully.", "pass@10": true, "passes": 10}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The function gets as input a list of numbers and the sum. Ensure that the solution considers each pair as unique, regarding different indices in the list.", "pass@10": true, "passes": 5}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. It should return the position of each occurrence found in the string, along with the count. Return None if there is no match.", "pass@10": false, "passes": 0}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. You may need to consider special cases such as when the number is zero or negative. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays by referring to this link: https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 783, "prompt": "Create a function that transforms RGB color into HSV color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": true, "passes": 1}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order. Ensure that the function handles edge cases where the list is empty or the value is out of the typical range.", "pass@10": true, "passes": 1}
{"task_id": 788, "prompt": "Write a function to create a new tuple. This tuple should be constructed from the given string and list.", "pass@10": true, "passes": 1}
{"task_id": 791, "prompt": "Create a function to eliminate tuples from the provided tuple.", "pass@10": true, "passes": 9}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure that your function efficiently handles nested lists of varying depths.", "pass@10": true, "passes": 9}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. You need to determine where the element appears for the final time. This should be done in such a way that you correctly identify the last occurrence.", "pass@10": true, "passes": 6}
{"task_id": 796, "prompt": "Write function to find the sum of all items. The items are located in the given dictionary.", "pass@10": true, "passes": 7}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit. It is composed of 32 individual binary digits. These bits make up the binary representation of the number.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to eliminate all whitespaces that are present in a string. These whitespaces can include spaces, tabs, and new line characters.", "pass@10": true, "passes": 10}
{"task_id": 802, "prompt": "Write a python function to count the number of rotations required to generate a sorted array. You can refer to the following link for more information: https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/", "pass@10": true, "passes": 2}
{"task_id": 805, "prompt": "Write a function that returns the sublist within a list of lists where the sum of its elements is greatest.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Compose a Python function that determines the number of pairs with an odd XOR result.", "pass@10": true, "passes": 7}
{"task_id": 557, "prompt": "Create a function that changes the casing of each character in a text string.", "pass@10": true, "passes": 7}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. Make sure to account for both positive and negative numbers in the list.", "pass@10": true, "passes": 5}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": true, "passes": 6}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries. Ensure your function handles invalid or edge input cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": true, "passes": 4}
{"task_id": 576, "prompt": "Draft a Python function to determine if one list is a subset of another list.", "pass@10": false, "passes": 0}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number. Ensure your solution efficiently handles large inputs to avoid excessive computation time.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Create a function to identify the n highest-priced items in a specified dataset.", "pass@10": true, "passes": 7}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple. Ensure your function handles empty lists and returns an empty tuple in such cases.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list. Ensure that the function handles empty lists appropriately by returning None or a suitable message.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. Ensure that the function handles edge cases where the given numbers might be negative or zero.", "pass@10": true, "passes": 7}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Ensure that the list has at least two elements to perform the interchange.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number. The sequence of nonagonal numbers begins with 1, 9, 24, 46, 75, and continues, where each number represents a polygon with nine sides and follows a specific formula for calculation.", "pass@10": true, "passes": 4}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium. The function should handle different sets of trapezium dimensions and return accurate results. Ensure your solution takes into account scenarios with edge lengths forming non-standard trapezium shapes.", "pass@10": true, "passes": 2}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number. Make sure to consider edge cases such as very small or very large numbers in your implementation. Test the function with a variety of inputs to ensure accuracy and efficiency.", "pass@10": true, "passes": 2}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ This involves taking each string that represents a number and interpreting it as an integer or floating point number. Make sure to maintain the original order of elements that have equal numeric value. Consider using the sorting stability properties of Python's built-in sort functionality to help achieve this.", "pass@10": true, "passes": 5}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Make sure the function handles different data types gracefully. Ensure that the function maintains the integrity and order of the original tuple elements.", "pass@10": true, "passes": 2}
{"task_id": 783, "prompt": "Create a function that transforms RGB color into HSV color. The RGB color model is widely used in various electronic displays such as televisions and computers. It stands for Red, Green, and Blue and is an additive color model where different intensities of these three colors are combined to reproduce a broad array of colors. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": true, "passes": 6}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples. You need to ensure that all elements are correctly extracted as you perform this task. Make sure to handle the tuples with precision and care. The function should take from the given two tuples and process them.", "pass@10": true, "passes": 4}
{"task_id": 14, "prompt": "Write a python function to calculate the volume of a triangular prism. This should involve finding the specific measurements needed. The function should obtain the base area first. After that, it should obtain the height.", "pass@10": true, "passes": 6}
{"task_id": 240, "prompt": "Create a function that accepts two lists as arguments. This function should swap out the final element of the first list with the contents of the second list.", "pass@10": true, "passes": 9}
{"task_id": 226, "prompt": "Write a python function to remove the characters that have odd index values of a given string. Create a function named `remove_odd_index_chars` that takes one argument: the input string. The function should iterate over the string and construct a new string with characters at even indices only.", "pass@10": false, "passes": 0}
{"task_id": 393, "prompt": "Write a function to find the longest list from a collection of lists; it should be the one that has the greatest number of elements. The function should return this list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings. A substring is any sequence of uppercase letters. These uppercase letters form a group within a given string.", "pass@10": true, "passes": 4}
{"task_id": 247, "prompt": "Create a function that determines the length of the longest subsequence in the given string. The subsequence should read the same forwards and backwards.", "pass@10": true, "passes": 3}
{"task_id": 300, "prompt": "Write a function to determine the number of binary sequences of length 2n such that the sum of the initial n bits is equivalent to the sum of the final n bits.", "pass@10": true, "passes": 1}
{"task_id": 311, "prompt": "Write a python function to assign the leftmost bit that is not yet set. Make sure to handle edge cases where all bits might already be set.", "pass@10": true, "passes": 1}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not. Ensure that your solution efficiently handles both small and large lists of numbers.", "pass@10": true, "passes": 4}
{"task_id": 608, "prompt": "Write a python method to compute the nth bell number.", "pass@10": false, "passes": 0}
{"task_id": 739, "prompt": "Write a python function to determine the position of the least triangular number containing n digits. A triangular number is a number that can be represented as a triangle with dots. The position of the triangular number refers to its index in the sequence of triangular numbers. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 5}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list. In a list, there are many numbers that can vary in size. Your task is to identify the number that is larger than only one other number in the list.", "pass@10": true, "passes": 1}
{"task_id": 556, "prompt": "Create a Python function that calculates the number of pairs resulting in an odd XOR.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. Ensure that the function is capable of managing edge cases effectively. Sometimes the given numbers might be negative or zero.", "pass@10": true, "passes": 6}
{"task_id": 557, "prompt": "Create a function that changes the casing of each character in a text string.", "pass@10": true, "passes": 7}
{"task_id": 167, "prompt": "Write a python function to determine the least power of 2 that is greater than or equal to n.", "pass@10": true, "passes": 9}
{"task_id": 128, "prompt": "Create a function to identify words in a provided list. The function should determine which words exceed n characters in length.", "pass@10": true, "passes": 5}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 4}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/ Think about special scenarios where the number might be extremely large or exceedingly small, and decide how they should be dealt with in terms of bit manipulation.", "pass@10": true, "passes": 4}
{"task_id": 796, "prompt": "Write function to find the sum of all items located in the given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays by referring to this link: https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 7}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Read this article. The reference article is available at: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 6}
{"task_id": 585, "prompt": "Develop a function to determine the n items with the highest prices in a given dataset.", "pass@10": true, "passes": 3}
{"task_id": 392, "prompt": "Write a function to determine the greatest sum achievable. You need to do this by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 4}
{"task_id": 724, "prompt": "Create a function that accepts base and power as inputs and compute the sum of every digit of the base raised to the given power. Ensure your implementation handles large numbers efficiently.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Create a Python function that eliminates repeated numbers from a specified number of lists.", "pass@10": false, "passes": 0}
{"task_id": 786, "prompt": "Write a function to locate the appropriate place for insertion of a given value in sorted order. Ensure that the function handles edge cases where the list is empty or the value is out of the typical range.", "pass@10": false, "passes": 0}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word. Consider edge cases where the string may be empty or contain multiple spaces between words. Ensure your function handles these cases gracefully by stripping excess whitespace from the input string before processing.", "pass@10": true, "passes": 6}
{"task_id": 721, "prompt": "Given a square matrix of size N*N provided as a list of lists, where each cell is associated with a specific cost. We want to find a path with the maximum average over all existing paths, defined as a particular sequence of cells that starts from the top-left cell, only moving right or down, and ends on the bottom-right cell. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 5}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order. You need to sort the matrix based on the sum of its rows. Make sure that the matrix is arranged in such a way that the rows with smaller sums appear before rows with larger sums.", "pass@10": true, "passes": 4}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. Ensure that your solution can handle both integer data types. Additionally, it should manage string data types.", "pass@10": true, "passes": 9}
{"task_id": 250, "prompt": "Write a python function that accepts a tuple and an element. The function should be able to count how many times the element occurs in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. Ensure your solution efficiently handles both increasing and decreasing sequences. Consider edge cases where the array is empty or contains only one element.", "pass@10": true, "passes": 5}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number, which means the number should be zero or greater. The function should then return the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 8}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Ensure that your function handles tuples of varying lengths efficiently. Consider edge cases such as empty tuples or tuples with only one element.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string. Ensure your solution efficiently handles large input sizes using an optimized algorithm.", "pass@10": true, "passes": 10}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that can be found in the given tuple list. All the values are located within a list composed of tuples.", "pass@10": false, "passes": 0}
{"task_id": 619, "prompt": "Create a function that shifts all numerical values to the conclusion of the given string.", "pass@10": true, "passes": 9}
{"task_id": 565, "prompt": "Write a python function. The function should be able to split a string into its individual characters.", "pass@10": true, "passes": 5}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. The nth newman\u2013shanks\u2013williams prime number is the prime number at position n in the sequence. This sequence is specifically defined by the newman\u2013shanks\u2013williams primes. This position n is given as an input parameter to the function which needs to be implemented.", "pass@10": true, "passes": 4}
{"task_id": 766, "prompt": "Create a function that returns a list of each pair of adjacent elements in a provided list. Ensure the function handles empty lists and lists with a single element gracefully.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Create a Python function that calculates the count of numerical digits within a specified string.", "pass@10": true, "passes": 5}
{"task_id": 170, "prompt": "Write a function to calculate the total of numbers in a list within a range specified by two indices. Ensure your solution efficiently handles edge cases where the indices are out of the list's bounds.", "pass@10": true, "passes": 6}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure that your function efficiently handles nested lists. These nested lists can have varying depths.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method. The Babylonian method is a well-known iterative algorithm. This algorithm is well-documented and has been used historically. It can be used for finding the square roots of numbers.", "pass@10": true, "passes": 7}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": true, "passes": 9}
{"task_id": 129, "prompt": "Create a function to determine if the matrix qualifies as a magic square.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet, making the comparison case insensitive.", "pass@10": true, "passes": 9}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase, ensuring that your function handles special characters and numbers appropriately while converting the alphabetical characters to uppercase.", "pass@10": true, "passes": 6}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list. Ensure that the function handles empty lists appropriately. It should do this by returning None or a suitable message.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Sorting a list of elements usually involves rearranging them in a certain order, which can be ascending or descending based on the criteria chosen.", "pass@10": true, "passes": 9}
{"task_id": 278, "prompt": "Write a function to find the count of elements that appear before the specified tuple element in the provided tuple.", "pass@10": true, "passes": 7}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise. Ensure that both lists are of the same length before proceeding with the subtraction. If the lists differ in length, return an appropriate error message before any operation.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Ensure your solution efficiently handles large datasets.", "pass@10": true, "passes": 8}
{"task_id": 745, "prompt": "Write a function to determine the numbers within a specified range from startnum to endnum where each number is divisible by every digit it includes.", "pass@10": true, "passes": 9}
{"task_id": 63, "prompt": "Create a function to figure out the largest variation between available pairs in the given list of tuples.", "pass@10": true, "passes": 8}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Consider edge cases where n is 0 or k is 0 to ensure the function handles these scenarios gracefully.", "pass@10": true, "passes": 8}
{"task_id": 296, "prompt": "Develop a Python function to determine how many inversions are present in an array.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of elements in the given tuples. You need to multiply corresponding elements of the tuples together.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements. You will remove these elements from a given list. Do so if they are present in another list.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to eliminate all whitespaces that are present in a string. These whitespaces can include spaces, tabs, and new line characters. Ensure your solution handles strings with different types of whitespace characters effectively.", "pass@10": true, "passes": 8}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items. The items are chosen from the list provided as input. Ensure that the returned list maintains the order of the original list for items with the same value.", "pass@10": true, "passes": 3}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You are provided with a list of tuples, and in this task, you are to find the minimum k records from the list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. The nth octagonal number is a figurate number that can be represented as an octagon. It can be calculated using the formula: 3n(n-1)+n.", "pass@10": true, "passes": 5}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Assume the list may contain elements of different data types. However, your function should only consider numerical values when determining the minimum.", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference. You need to find the maximum difference between any two elements in a given array.", "pass@10": true, "passes": 9}
{"task_id": 93, "prompt": "Create a function to compute the result of 'a' raised to the exponent 'b'. Ensure that your solution handles both positive and negative exponents correctly.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Construct a procedure to identify values. Find the smallest among three values.", "pass@10": true, "passes": 8}
{"task_id": 141, "prompt": "Write a function to sort a list of elements, ensuring your function can handle an empty list and a list with only one element efficiently.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of the first n natural numbers. The task is to create a function that calculates cubes of all integers starting from 1 up to n. Then, find their average.", "pass@10": true, "passes": 1}
{"task_id": 391, "prompt": "Write a function to convert more than one list into a nested dictionary. You will need to iterate through each list to reflect the structure of the input lists in the resulting nested dictionary.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers. Make sure to consider edge cases where the set might be empty or contain a single element. For this problem, you can assume that the Bell numbers are given or can be precomputed.", "pass@10": true, "passes": 10}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list, ensuring that the function efficiently handles lists containing a large number of elements.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Develop a function to determine the total of (n - 2*i) from i=0 to n // 2, for example n + (n-2) + (n-4) until n-x =< 0.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to determine the nth number in the newman conway sequence.", "pass@10": true, "passes": 2}
{"task_id": 625, "prompt": "Create a Python function that exchanges the initial and final elements of a specified list.", "pass@10": true, "passes": 10}
{"task_id": 447, "prompt": "Write a function to find cubes of each element in a given list. A cube is the result of multiplying a number by itself twice, and your function should return a new list containing the cubes of the original elements.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Design a Python function to identify a pair yielding the maximum product from an array of integers.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Create a function that removes all spaces in the given string.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Write a function to flatten a specified nested list format.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Develop a function to retrieve the nth item from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to check if the parity of a given number is odd. Make sure to test the function with various input values to ensure its accuracy.", "pass@10": true, "passes": 7}
{"task_id": 788, "prompt": "Write a function to create a new tuple. This tuple should be constructed from the given string and list. Ensure that the tuple maintains the order of elements as they appear in the inputs.", "pass@10": false, "passes": 0}
{"task_id": 404, "prompt": "Create a Python function that determines the lesser of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that accepts as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th component of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number. Ensure that your solution efficiently handles very large numbers as input.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to determine the surface area of a cube with a specified dimension.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. You need to determine where the element appears for the final time. This should be done in such a way that you correctly identify the last occurrence. Ensure that your solution handles both distinct and repeated elements efficiently.", "pass@10": true, "passes": 8}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. You may need to consider special cases such as when the number is zero or negative. Ensure your function handles large input values efficiently. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 8}
{"task_id": 479, "prompt": "Write a python function to discover the initial digit of a specified number. Ensure the function handles both positive and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 802, "prompt": "Write a python function to count the number of rotations required to generate a sorted array. Refer to this link for more information: https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/", "pass@10": true, "passes": 1}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not. Make sure that your function works promptly for various inputs. Ensure your implementation efficiently handles both uppercase and lowercase letters.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Ensure to appropriately handle cases where the tuple consists of an odd number of elements. It is important that any odd element is dealt with correctly. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 9}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Make sure your solution handles cases where the side lengths are non-negative. It is important that you consider all possible valid side lengths.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Create a function that locates the highest value in a provided heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple. A list in Python is a collection of ordered items. A tuple, on the other hand, is a collection of ordered, immutable items.", "pass@10": true, "passes": 10}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length, and you need to write a function to count indices where the lists have the same values.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ratio of positive numbers in an array of integers. Ensure your solution efficiently handles large input sizes. Consider edge cases where the array may be empty or contain no positive numbers at all.", "pass@10": false, "passes": 0}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Create a function to add the specified list to the provided tuples. Ensure that the original sequence of elements in the tuples is preserved during the append process.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array. The reversal should be effective up to a given position.", "pass@10": true, "passes": 5}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not, ensuring your implementation handles both positive and negative integers efficiently.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to identify the specified count of largest products from two given lists, selecting one factor from each list. Ensure that your solution efficiently handles large lists to meet performance expectations.", "pass@10": true, "passes": 7}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string. You need to identify every instance where 'std' appears. These instances need to be located within the input string. Ensure that the count accurately reflects the total occurrences by checking the input thoroughly.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function. The purpose of the function is to convert a tuple to a string. Ensure that the resulting string represents the tuple elements in the order they appear, separated by commas.", "pass@10": true, "passes": 4}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Ensure that the function accounts for lists of different lengths by handling exceptions appropriately.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure that the function handles non-integer input values gracefully.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the inner list from a list of lists where the sum of its elements is the largest.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Create a function that identifies the smallest product from the pairs of tuples provided in a specified list. Ensure that your function handles cases with both positive and negative integers effectively.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string. You should do this for all of the string values that are present in a given list.", "pass@10": true, "passes": 9}
{"task_id": 125, "prompt": "Write a function to discover the largest disparity between the count of 0s and the count of 1s in any sub-string of the provided binary string.", "pass@10": false, "passes": 0}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort. Ensure your implementation efficiently handles large arrays with varying gaps and decreasing sequences. Consider edge cases such as empty arrays or arrays with a single element to ensure robust functionality.", "pass@10": true, "passes": 8}
{"task_id": 281, "prompt": "Create a Python function to determine whether the items in a specified list are unique. You need to check all the elements in the list. Ensure that there are no duplicate elements present.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Create a function that determines the element that appears most frequently in a provided list. Make sure to handle cases where multiple elements have the same frequency by returning the first among them.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Create a function that calculates the n'th lucas number. The function should be capable of determining values in the Lucas sequence. This sequence is similar to the Fibonacci sequence in its pattern of numbers.", "pass@10": true, "passes": 8}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists. You are given a list that contains multiple lists. Your task is to identify the smallest list and then determine its length. Ensure your solution efficiently handles lists of varying lengths and sizes.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list, ensuring your solution efficiently handles a list of varying lengths and element types.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. The function should be able to efficiently handle large values of n. This means it should be able to process these numbers quickly without unnecessary delays. Consider optimizing the algorithm for faster execution.", "pass@10": true, "passes": 10}
{"task_id": 732, "prompt": "Write a function. The function should replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n, filtering the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length. The lateral surface area is calculated by multiplying the perimeter of the base by the height of the cube. The perimeter of the base is the sum of all its sides. To find the lateral surface area, you will need to multiply this sum by the height of the cube.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Create a function that calculates the square of each element in a list. Ensure your solution handles empty lists gracefully without causing errors.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Create a function to eliminate tuples from the provided tuple. A tuple can contain multiple elements, and some of these elements might also be tuples themselves. The function should remove all the nested tuples within the main tuple while maintaining the original order.", "pass@10": true, "passes": 9}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. Refer to this link for more information on Jacobsthal numbers: https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Consider implementing an efficient solution. Ensure that it optimizes for both time and space complexity.", "pass@10": true, "passes": 10}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples. Ensure that the function handles division by zero gracefully by returning `None` for any tuple element pair where the denominator is zero.", "pass@10": true, "passes": 9}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers. The quotient should be rounded down to the nearest integer.", "pass@10": true, "passes": 9}
{"task_id": 88, "prompt": "Create a function to determine how often each element appears in a list, and return the results in a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 610, "prompt": "Write a python function which accepts a list. The function should return a modified version of that list. The list should contain the same elements, but the k'th element removed.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function. The purpose of the function is to find the ascii value of a character. The ascii value is a numerical representation for characters in computers. It is widely used in encoding.", "pass@10": true, "passes": 10}
{"task_id": 583, "prompt": "Write a function which returns the nth catalan number. Catalan numbers form a sequence of natural numbers. They significantly appear in various counting problems, often involving recursively defined objects.", "pass@10": true, "passes": 8}
{"task_id": 20, "prompt": "Create a function to determine whether the provided number is woodball or not. Ensure your solution runs efficiently even for large inputs.", "pass@10": true, "passes": 3}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Ensure that the list has at least two elements to perform the interchange. Consider edge cases where the list contains complex data types like objects or nested lists.", "pass@10": true, "passes": 7}
{"task_id": 79, "prompt": "Create a python function. Your task is to determine if the word's length is odd or not.", "pass@10": true, "passes": 4}
{"task_id": 89, "prompt": "Write a function to determine the nearest smaller value than n.", "pass@10": true, "passes": 8}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure that the function handles both positive and negative integers appropriately.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that tallies the count of integer pairs in a list that xor to an even number.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values in a given dictionary are identical. The function should perform this check by comparing each value with others to ensure uniformity. You should ensure that the function accounts for empty dictionaries, returning a result that logically follows the scenario.", "pass@10": false, "passes": 0}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array. Ensure your solution is optimized for performance, especially with regard to time complexity.", "pass@10": true, "passes": 3}
{"task_id": 2, "prompt": "Write a function to identify the common elements from the provided two lists.", "pass@10": true, "passes": 7}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not. Consider edge cases such as when one or both numbers are negative or zero.", "pass@10": true, "passes": 9}
{"task_id": 11, "prompt": "Write a python function to remove the first and last occurrence of a given character from the string. You need to write a function that accepts two inputs. The function should take a string and a character as parameters.", "pass@10": true, "passes": 3}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Make sure the function handles corner cases such as empty strings or strings with non-numeric characters gracefully.", "pass@10": true, "passes": 3}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Make sure to consider edge cases such as an empty list or a list with all identical elements.", "pass@10": true, "passes": 9}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be expressed as the difference between two perfect squares. You need to determine if there are two integers whose squares, when subtracted, equal the given number.", "pass@10": false, "passes": 0}
{"task_id": 86, "prompt": "Create a function to identify the centered hexagonal number for the nth position.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Create a function that determines how often each item appears in a flattened list of lists, and returns the results in a dictionary format.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer. The function should return the result as an integer.", "pass@10": true, "passes": 8}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Consider edge cases where tuples might have zero or negative numbers, impacting the product.", "pass@10": true, "passes": 9}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string. Ensure that the function handles multiple consecutive spaces correctly.", "pass@10": true, "passes": 6}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube. You will be given the length of one side of the cube as input. Use this side length to calculate the volume.", "pass@10": true, "passes": 10}
{"task_id": 252, "prompt": "Construct a Python function to change complex numbers into polar coordinates.", "pass@10": false, "passes": 0}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Ensure that the original order of elements within the sublists is maintained.", "pass@10": true, "passes": 9}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Ensure that your implementation efficiently calculates the result for large values of n.", "pass@10": true, "passes": 7}
{"task_id": 270, "prompt": "Write a python function to calculate the sum of even numbers located at even indices in a list.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": true, "passes": 8}
{"task_id": 279, "prompt": "Create a function to calculate the nth number in the decagonal sequence.", "pass@10": true, "passes": 2}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. Each tuple contains values that need to be considered for the calculation. Your task is to identify the highest possible sum based on the values within these tuples.", "pass@10": true, "passes": 10}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 7}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 9}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 9}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. You need to determine if each element in the tuple is unique. Ensure that none of the elements are repeated in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple. Consider edge cases such as tuples with empty strings.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Create a function that removes numbers that are not odd.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Create a Python function to determine the final digit of a specified integer.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers. Ensure that your implementation is both efficient and optimized for large inputs.", "pass@10": true, "passes": 4}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Each month of the year has a certain number of days. Some months contain 31 days.", "pass@10": true, "passes": 9}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array. You need to identify the subarray which has the largest product. The function should return this maximum product as the result.", "pass@10": true, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items. The function should remove entries that have no value associated with them. The function will operate on a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Ensure that the function handles all types of characters, including special characters and numbers, correctly.", "pass@10": false, "passes": 0}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure that leading or trailing spaces are preserved in the output string.", "pass@10": true, "passes": 3}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length. The function then performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string. Ensure your function handles edge cases, such as when the string is empty or contains only whitespace characters.", "pass@10": true, "passes": 4}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list. The function needs to take a list as its parameter. It should then perform the necessary operations to move zeroes to the end.", "pass@10": true, "passes": 7}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. Consider edge cases such as punctuation and multiple spaces.", "pass@10": false, "passes": 0}
{"task_id": 798, "prompt": "Create a Python function that calculates the total of a list.", "pass@10": true, "passes": 9}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Remember to consider cases with nested lists for a comprehensive solution.", "pass@10": true, "passes": 4}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": true, "passes": 8}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the numbers that are unique in a given list. This means that each number should appear exactly once in the list.", "pass@10": true, "passes": 7}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. The factorial of a number is the product of all positive integers less than or equal to that number. It is often denoted using the symbol 'n!'.", "pass@10": true, "passes": 8}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers. Ensure that your function handles input validation for non-positive integers effectively.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Remember to handle cases where the input might not be a valid number.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Develop a Python function to calculate the average of cubes of the first n natural numbers. Take into account cases where n is zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number. The sequence of nonagonal numbers begins with 1, 9, 24, 46, 75, and continues, where each number represents a polygon with nine sides and follows a specific formula for calculation. Your implementation should efficiently compute the nth number without recalculating preceding numbers unnecessarily.", "pass@10": true, "passes": 2}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. You should ensure that your solution handles negative numbers and decimal values correctly. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 7}
{"task_id": 123, "prompt": "Create a function that totals all amicable numbers within the range from 1 to a defined number. Make sure to consider edge cases such as very small or very large numbers in your implementation. Test the function with a variety of inputs to ensure accuracy and efficiency.", "pass@10": true, "passes": 1}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium. The function should handle different sets of trapezium dimensions and return accurate results. Ensure that the function is optimized for performance when dealing with large datasets.", "pass@10": false, "passes": 0}
{"task_id": 247, "prompt": "Create a function that determines the length of the longest subsequence in the given string. The subsequence should read the same forwards and backwards. Consider edge cases such as an empty string or a string with all identical characters.", "pass@10": true, "passes": 7}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Ensure that your function is equipped to handle corner cases. These include empty strings or strings that contain non-numeric characters, which should be gracefully managed.", "pass@10": true, "passes": 7}
{"task_id": 764, "prompt": "Create a Python function that calculates the count of numerical digits within a specified string. Ensure the function handles both positive and negative scenarios efficiently.", "pass@10": true, "passes": 9}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples. You need to ensure that all elements are correctly extracted as you perform this task. Make sure to handle the tuples with accuracy and attention. The function should take from the given two tuples and process them.", "pass@10": true, "passes": 4}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Make sure the function handles different data types gracefully. Ensure that the function maintains the integrity and order of the original tuple elements. Consider edge cases where the tuple or dictionary might be empty or contain nested structures.", "pass@10": true, "passes": 7}
{"task_id": 783, "prompt": "Create a function that transforms RGB color into HSV color. The RGB color model is widely used in various electronic displays. Some examples include televisions and computers. It stands for Red, Green, and Blue and is an additive color model where different intensities of these three colors are combined to reproduce a broad array of colors. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": false, "passes": 0}
{"task_id": 14, "prompt": "Write a python function to calculate the volume of a triangular prism. This should include determining the specific measurements required. The function should obtain the base area first. After that, it should obtain the height.", "pass@10": true, "passes": 6}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string, ensuring that the resulting string represents the tuple elements in the order they appear, separated by commas.", "pass@10": true, "passes": 9}
{"task_id": 311, "prompt": "Write a python function to assign the leftmost bit that is not yet set, ensuring edge cases where all bits might already be set are properly handled.", "pass@10": false, "passes": 0}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Remember to consider cases with nested lists for a comprehensive solution. Ensure your solution efficiently handles deeply nested structures.", "pass@10": false, "passes": 0}
{"task_id": 240, "prompt": "Create a function that accepts two lists as arguments. This function is designed to take the two lists and perform an operation on them. It should swap out the final element of the first list with the contents of the second list.", "pass@10": true, "passes": 6}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. Make sure your solution efficiently processes both ascending and descending sequences. Consider edge cases where the array is empty or contains only one element.", "pass@10": true, "passes": 8}
{"task_id": 393, "prompt": "Write a function to find the longest list from a collection of lists by identifying the one that has the greatest number of elements. The function should return this list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to invert the bits of the number except for the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers, ensuring that the function is capable of managing edge cases effectively. Sometimes the given numbers might be negative or zero.", "pass@10": true, "passes": 9}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings. A substring is any sequence of uppercase letters. These uppercase letters form a group. This group exists within a given string.", "pass@10": true, "passes": 4}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a specified number in a sorted array. Ensure your solution is optimized for performance, especially with regard to time complexity.", "pass@10": true, "passes": 8}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Consult this article. The reference article is available at: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 9}
{"task_id": 557, "prompt": "Create a function that changes the casing of each character in a text string.", "pass@10": true, "passes": 7}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list. In a list, there are many numbers. These numbers can vary in size. Your task is to identify the number that is larger than only one other number in the list.", "pass@10": false, "passes": 0}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not. Consider edge cases where the list may be empty or have non-numeric elements.", "pass@10": false, "passes": 0}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method. The Babylonian method is a well-known iterative algorithm. This algorithm is well-documented and has been used historically. It can be used for finding the square roots of numbers. Ensure that your implementation accurately follows the iterative process to achieve the correct result.", "pass@10": true, "passes": 5}
{"task_id": 167, "prompt": "Write a python function to determine the least power of 2 that is greater than or equal to n. You need to find the smallest power of 2. This power of 2 should be greater than or equal to the value of n.", "pass@10": true, "passes": 6}
{"task_id": 291, "prompt": "Write a function to determine the number of ways to color the fence. Ensure that no more than 2 neighboring posts share the same color for the specified fence with n posts and k colors.", "pass@10": true, "passes": 8}
{"task_id": 739, "prompt": "Write a python function to determine the position of the least triangular number containing n digits. A triangular number is a number that can be represented as a triangle with dots. The position of the triangular number refers to its index in the sequence of triangular numbers. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ You may assume that n is a positive integer.", "pass@10": false, "passes": 0}
{"task_id": 392, "prompt": "Write a function to determine the greatest sum achievable. You need to do this by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Make sure to optimize the function to handle large inputs efficiently.", "pass@10": true, "passes": 3}
{"task_id": 475, "prompt": "Write a function to sort a dictionary. The sorting should be done by value.", "pass@10": false, "passes": 0}
{"task_id": 796, "prompt": "Write a function to find the sum of all items located in the given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays by referring to this link: https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 11, "prompt": "Write a python function to remove the first and last occurrence of a given character from the string. You need to write a function that accepts two inputs. The function should take a string and a character as parameters. Ensure the resulting string retains its original sequence except for the removal of the specified character instances.", "pass@10": true, "passes": 9}
{"task_id": 308, "prompt": "Write a function to identify the specified count of largest products from two given lists, selecting one factor from each list. Make sure your solution is optimized for performance when dealing with large lists. It should handle extensive data sets in a way that meets performance expectations effectively.", "pass@10": true, "passes": 8}
{"task_id": 724, "prompt": "Create a function that accepts base and power as inputs. The function should compute the sum of every digit of the base raised to the given power. Ensure your implementation handles large numbers efficiently.", "pass@10": true, "passes": 7}
{"task_id": 800, "prompt": "Write a function to remove each and every whitespace present in a string. Your task is to ensure that all space characters are eliminated from the given string.", "pass@10": true, "passes": 8}
{"task_id": 635, "prompt": "Write a function to sort the given list. Ensure that your solution accounts for various types of input data, such as integers, floats, and strings.", "pass@10": true, "passes": 7}
{"task_id": 721, "prompt": "Given a square matrix of size N*N provided as a list of lists, where every cell has an associated cost. We want to find a path with the maximum average over all existing paths, defined as a particular sequence of cells that starts from the top-left cell, only moving right or down, and ends on the bottom-right cell. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 6}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Ensure that the list has at least two elements to perform the interchange, considering edge cases where the list contains complex data types like objects or nested lists.", "pass@10": true, "passes": 6}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. Ensure that your solution can handle both integer and string data types.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Create a function that shifts all numerical values to the conclusion of the given string. Ensure the function maintains the order of non-numeric characters and numeric values as they appear in the input.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element that the function should be able to count how many times the element occurs in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort. Ensure your implementation efficiently handles large arrays with varying gaps and decreasing sequences, and consider edge cases such as empty arrays or arrays with a single element to ensure robust functionality.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Create a function to figure out the largest variation between available pairs. Identify the variation between pairs in the given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string, ensuring your solution efficiently handles large input sizes using an optimized algorithm.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to check if the parity of a given number is odd, and test the function with various input values to ensure its accuracy.", "pass@10": false, "passes": 0}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number, meaning the number must be zero or higher. The function should then return the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 8}
{"task_id": 389, "prompt": "Create a function that calculates the n'th lucas number. The function must be able to compute values found in the Lucas sequence. This sequence is similar to the Fibonacci sequence in its pattern of numbers.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. Make sure to account for both positive and negative numbers in the list. Ensure that your solution efficiently handles edge cases such as lists with all negative numbers or single-element lists.", "pass@10": true, "passes": 1}
{"task_id": 170, "prompt": "Create a function that computes the sum of elements in an array between two given indices. Make sure your answer appropriately addresses situations where the indices exceed the list's limits.", "pass@10": true, "passes": 6}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. The nth newman\u2013shanks\u2013williams prime number refers to the prime number located at position n in the sequence. This sequence is specifically defined by the newman\u2013shanks\u2013williams primes. This position n is given as an input parameter to the function which needs to be implemented.", "pass@10": true, "passes": 3}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list. Ensure that the function handles scenarios where the tuple is empty efficiently.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Create a function that returns a list of each pair of adjacent elements in a provided list. Make sure that the function is robust enough to handle empty lists effectively. Also, ensure that it can deal with lists containing a single element gracefully.", "pass@10": true, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Ensure your function handles tuples of varying lengths gracefully.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. A magic square is a square matrix in which the sum of every row, column, and both main diagonals is the same. Ensure the function handles both positive and negative numbers correctly in the matrix.", "pass@10": true, "passes": 3}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically, ensuring that your solution handles negative numbers and decimal values correctly. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 8}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter. Ensure that the delimiter is inserted between every element of the tuple without any trailing delimiter at the end. Consider edge cases like empty tuples or tuples with a single element.", "pass@10": true, "passes": 9}
{"task_id": 278, "prompt": "Write a function to determine how many elements appear before the tuple element within the provided tuple. Ensure the function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values, ensuring that your function efficiently handles lists of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet, making the comparison case insensitive. Pay special attention to edge cases where the string may be empty or of minimal length.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples. Ensure that the function handles tuples of unequal length by multiplying until the length of the shorter tuple and ignoring any excess elements from the longer tuple. Consider implementing additional error checks for tuple data types or empty tuple inputs to enhance the robustness of the function.", "pass@10": true, "passes": 6}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Sorting a list of elements usually involves rearranging them in a certain order, which can be ascending or descending based on the criteria chosen. Make sure to handle edge cases, such as empty lists or lists with one element, appropriately.", "pass@10": true, "passes": 8}
{"task_id": 624, "prompt": "Create a Python function to transform a provided string to uppercase, making sure that your function processes special characters and numbers correctly while changing the alphabetical characters to uppercase.", "pass@10": true, "passes": 6}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Ensure to appropriately handle scenarios where the tuple consists of an odd number of elements. It is important that any odd element is dealt with correctly. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array. Make sure to handle edge cases, such as arrays with fewer than two elements, gracefully.", "pass@10": true, "passes": 1}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You are provided with a list of tuples, and your task is to find the minimum k records from the list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. It is important that your solution is efficient. Efficient handling of large datasets must be ensured.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Create a Python function that exchanges the initial and final elements of a specified list. Ensure that the function handles lists with fewer than two elements gracefully.", "pass@10": true, "passes": 10}
{"task_id": 802, "prompt": "Write a python function to calculate how many rotations are needed to produce a sorted array. Refer to this link for more information: https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/", "pass@10": true, "passes": 3}
{"task_id": 781, "prompt": "Write a python function to verify if the number of divisors is even. You may need to consider special cases such as when the number is zero or negative. Ensure your function handles large input values efficiently. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 7}
{"task_id": 451, "prompt": "Create a function that removes all spaces in the given string. Ensure that the function handles and returns even empty strings correctly.", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "Develop a Python function to determine how many inversions are present in an array. You need to count the number of inversions. An inversion is defined as a pair of indices (i, j) such that i < j and array[i] > array[j].", "pass@10": true, "passes": 8}
{"task_id": 297, "prompt": "Write a function to flatten a specified list that is nested. The goal is to transform this nested list structure into a single, one-dimensional list.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Consider edge cases where the list might contain nested lists or non-comparable types.", "pass@10": true, "passes": 5}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list. Ensure that the function handles empty lists and returns an empty list when the first list is empty.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Create a function that finds the maximum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements, ensuring your function can handle an empty list and a list with only one element efficiently. Make sure to also consider edge cases such as lists that are already sorted or contain duplicate elements.", "pass@10": true, "passes": 10}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number. Ensure your solution can handle large inputs efficiently. This is important to avoid excessive computation time.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists that contain a particular element. A sublist is a contiguous slice of the list, meaning it is a sequence of elements that are next to each other in the original list. The function should take two arguments: the list of elements and the element to search for. The goal is to determine how many sublists include the specified element.", "pass@10": true, "passes": 8}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The function gets as input a list of numbers and the sum. Ensure that the solution considers each pair as unique, regarding different indices in the list. Pay special attention to handle edge cases such as an empty list or a list with fewer than two elements.", "pass@10": true, "passes": 5}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the numbers in a given list that appear only once. This means that each number should appear exactly once in the list.", "pass@10": true, "passes": 3}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": true, "passes": 9}
{"task_id": 441, "prompt": "Create a function to calculate the surface area of a cube given a specified dimension.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. You need to determine where the element appears for the final time. This should be done in such a way that you correctly identify the last occurrence. Ensure that your solution handles both distinct and repeated elements efficiently. Consider using binary search to achieve an optimal solution.", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not. Make sure that your function works promptly for various inputs. You need to verify that your function can handle both uppercase and lowercase letters. It's crucial that your implementation is efficient in dealing with different cases of letters.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Develop a function to determine the total of (n - 2*i) from i=0 to n // 2, condensing n + (n-2) + (n-4) until n-x =< 0 into one expression.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array up to a given position. The array should be reversed only up to the specified index, while elements beyond this index should remain unchanged.", "pass@10": true, "passes": 5}
{"task_id": 224, "prompt": "Write a python function to determine how many set bits are present in a given number. A set bit is a binary digit that has the value 1. Ensure the function handles edge cases like negative numbers appropriately.", "pass@10": true, "passes": 6}
{"task_id": 253, "prompt": "Design a Python function that returns the count of integer elements in a provided list, making sure that the function effectively manages lists with a large number of items.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that accepts as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th component of the tuple is equal to t_i * t_{i+1}. Ensure that your function can handle edge cases gracefully, such as tuples with fewer than two elements.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Create a Python function that determines the count of divisors for a specified integer. Ensure that the function handles both positive and negative integers appropriately.", "pass@10": true, "passes": 6}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Ensure that the function accounts for lists of different lengths by handling exceptions appropriately. Make sure to account for division by zero and provide a suitable error message or handling mechanism.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n. The closest number should be less than the given number n. Make sure to return this closest number as the output.", "pass@10": true, "passes": 7}
{"task_id": 413, "prompt": "Develop a function to retrieve the nth item from a list. The list is composed of tuples.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Design a Python function to detect a pair that results in the greatest product from a list of integers.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to discover the initial digit of a specified number. Ensure the function handles both positive and negative numbers. It's important to consider edge cases such as zero and very small floating-point numbers in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number. Ensure the function handles both integer and floating-point inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements. Ensure that your solution handles nested lists of arbitrary depth.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to identify the nth numeral. The numeral is in the Newman-Conway series.", "pass@10": true, "passes": 6}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers. The quotient should be rounded down. It will be rounded to the nearest integer.", "pass@10": true, "passes": 7}
{"task_id": 106, "prompt": "Create a function to add the specified list to the provided tuples. Ensure that the original sequence of elements in the tuples is preserved during the append process. The function should be efficient and able to handle large data inputs without compromising performance.", "pass@10": true, "passes": 9}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not. Consider edge cases such as when one or both numbers are negative or zero. Ensure your solution is efficient and handles large integers gracefully.", "pass@10": true, "passes": 9}
{"task_id": 723, "prompt": "The provided input consists of two lists that have equal lengths, and you need to write a function to count indices where the lists have the same values.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists. Your task is to identify the smallest list and then determine its length from a given list containing multiple lists. Ensure your solution efficiently handles lists of varying lengths and sizes.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the inner list from a list of lists where the sum of its elements is the largest. Ensure your solution efficiently handles lists with varying sizes and values.", "pass@10": true, "passes": 10}
{"task_id": 447, "prompt": "Write a function to find cubes of each element in a given list. A cube is the result of multiplying a number by itself twice, and your function should return a new list containing the cubes of the original elements. Assume all elements in the list are integers.", "pass@10": true, "passes": 10}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples. It should execute the division operation for corresponding elements in the tuples. Ensure that the function handles division by zero gracefully by returning `None` for any tuple element pair where the denominator is zero.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple, ensuring your function handles empty lists and returns an empty tuple in such cases.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to verify if the provided list includes consecutive numbers or not, ensuring your implementation handles both positive and negative integers efficiently.", "pass@10": true, "passes": 7}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Make sure your solution handles cases where the side lengths are non-negative. Ensure that your solution correctly manages inputs where side lengths might be zero or very small. It is important that you consider all possible valid side lengths.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Create a Python function that determines the lesser of two numbers. Your task is to write a function that takes two numerical inputs as arguments. The function should return the smaller of the two numbers.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check this condition. You must verify whether the specified sum leads to neither a gain nor a deficit.", "pass@10": true, "passes": 8}
{"task_id": 172, "prompt": "Write a function to count the number of occurrence of the string 'std' in a given string. You need to identify every instance where 'std' appears within the input string. Ensure that the count accurately reflects the total occurrences by checking the input thoroughly.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that tallies the count of integer pairs in a list that xor to an even number.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Create a function that identifies the smallest product from the pairs of tuples provided in a specified list, ensuring that your function handles cases with both positive and negative integers effectively.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Create a function that enumerates the elements which are the same at identical positions across three provided lists. Make sure the function accounts for varied list lengths properly.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n, filtering the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. The function should be able to efficiently handle large values of n. This means it should be able to process these numbers quickly without unnecessary delays. Consider optimizing the algorithm for faster execution. Remember to test your function with various values of n to ensure it performs well under different conditions.", "pass@10": true, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Make sure to consider edge cases. These edge cases include scenarios such as an empty list or a list with all identical elements.", "pass@10": true, "passes": 9}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list. Ensure that your solution efficiently handles a list of varying lengths. Your solution should also handle different element types.", "pass@10": true, "passes": 10}
{"task_id": 610, "prompt": "Create a Python function that takes a list as its parameter. The function should return a modified version of that list. The list should contain the same elements, but the k'th element removed.", "pass@10": true, "passes": 9}
{"task_id": 791, "prompt": "Create a function to eliminate tuples from the provided tuple. A tuple can contain multiple elements, and the function should remove all the nested tuples within the main tuple while maintaining the original order.", "pass@10": true, "passes": 6}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. Refer to this link for more information on Jacobsthal numbers: https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Consider implementing an efficient solution. Ensure that it optimizes for both time and space complexity. Be sure to handle edge cases such as negative indices or non-integer inputs appropriately.", "pass@10": true, "passes": 6}
{"task_id": 129, "prompt": "Create a function to determine if the matrix qualifies as a magic square.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Develop a function to find the shared elements from the two given lists.", "pass@10": true, "passes": 7}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer. The function should return the result as an integer. Ensure that the solution efficiently handles large integers where necessary.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Create a python function. Your task is to determine if the word's length is odd or not. Make sure to handle cases where the input might be an empty string or contain non-alphabetical characters.", "pass@10": true, "passes": 9}
{"task_id": 123, "prompt": "Create a function that totals all amicable numbers within the range from 1 to a defined number. Make sure to consider edge cases in your implementation. Include considerations for very small numbers, as well as scenarios involving very large numbers. Test the function with a variety of inputs to ensure accuracy and efficiency.", "pass@10": true, "passes": 5}
{"task_id": 465, "prompt": "Write a function to drop empty items. The function should remove entries that have no value associated with them. The function will operate on a given dictionary. Ensure the original dictionary is not modified, and return a new dictionary with the empty entries removed.", "pass@10": true, "passes": 9}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. Each tuple contains values that need to be considered for the calculation. Your task is to identify the highest possible sum based on the values within these tuples. Consider edge cases like empty lists or tuples with zero values to ensure robust functionality.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Create a Python function to calculate the sum of the bitwise exclusive OR. You should do this for every pair of integers in the specified list.", "pass@10": true, "passes": 7}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Remember to handle cases where the input might not be a valid number. Ensure the function returns a boolean value indicating the evenness of a valid number.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. You need to determine if each element in the tuple is unique. You should examine every element in the tuple. Make sure that none of the elements are repeated in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a provided string. Guarantee that your function addresses edge cases, such as when the string is empty or contains only whitespace characters.", "pass@10": true, "passes": 5}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries. Ensure that the function handles invalid inputs gracefully by returning an empty list.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit and is composed of 32 individual binary digits. These bits make up the binary representation of the number.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube. You will be given the length of one side of the cube as input. This side length will be used in a calculation. Use this side length to calculate the volume.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Develop a function that determines the median value of a trio of numbers.", "pass@10": true, "passes": 10}
{"task_id": 279, "prompt": "Create a function to calculate the nth number in the decagonal sequence. The decagonal sequence is defined such that each term is the result of a specific mathematical formula, relating to ten-sided polygons known as decagons.", "pass@10": true, "passes": 1}
{"task_id": 240, "prompt": "Create a function that accepts two lists as arguments. This function is crafted to handle the two lists and carry out a procedure on them. It should swap out the final element of the first list with the contents of the second list.", "pass@10": true, "passes": 6}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple. Consider edge cases such as tuples with empty strings. Ensure your solution can handle cases with non-string elements within the tuple gracefully.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts with the same character it ends with or not. Determine if the first character is identical to the last character. If it is, they match.", "pass@10": true, "passes": 9}
{"task_id": 764, "prompt": "Create a Python function that computes the number of numeric digits in a given string. Ensure the function handles both positive and negative scenarios efficiently.", "pass@10": true, "passes": 9}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Ensure that your solution handles edge cases where the list may contain special characters or be empty.", "pass@10": true, "passes": 10}
{"task_id": 247, "prompt": "Create a function that determines the length of the longest subsequence in the given string. Consider edge cases such as an empty string or a string with all identical characters, and ensure the subsequence reads the same forwards and backwards.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length. The function then performs the element wise modulo. Ensure that the input tuples strictly contain integers to avoid runtime errors.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Each month of the year has a certain number of days. Some months contain 31 days. Ensure your function can handle invalid month numbers gracefully.", "pass@10": true, "passes": 3}
{"task_id": 435, "prompt": "Create a Python function to determine the final digit of a specified integer.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers. Make sure your function can handle input validation. It should be capable of correctly dealing with non-positive integers effectively.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. The factorial of a number is the product of all positive integers less than or equal to that number. It is often denoted using the symbol 'n!'. Assume the input number is a non-negative integer.", "pass@10": true, "passes": 8}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n. The function should then find the sum of even index binomial coefficients.", "pass@10": true, "passes": 6}
{"task_id": 97, "prompt": "Create a function that determines how often each item appears in a flattened list of lists, and returns the results in a dictionary format. Ensure the function handles empty lists and non-numeric items gracefully.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array. You need to identify the subarray. This subarray should have the largest product. The function should return this maximum product as the result.", "pass@10": true, "passes": 7}
{"task_id": 86, "prompt": "Create a function to identify the centered hexagonal number for the nth position. Ensure that your solution is optimized for large inputs to handle cases where n could be very large efficiently.", "pass@10": true, "passes": 10}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Ensure that the function handles edge cases such as empty lists or n being larger than the list length gracefully.", "pass@10": true, "passes": 4}
{"task_id": 388, "prompt": "Create a Python function to locate the greatest power of 2 that is not more than n.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to compute the sum of perrin numbers. Ensure that your implementation is both efficient and optimized for large inputs.", "pass@10": true, "passes": 1}
{"task_id": 410, "prompt": "Write a function to find the minimum value. You have to find this value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Ensure that your function is equipped to handle corner cases, including empty strings or strings that contain non-numeric characters, which should be gracefully managed.", "pass@10": true, "passes": 7}
{"task_id": 167, "prompt": "Write a python function to determine the least power of 2 that is greater than or equal to n. You need to find the smallest power of 2. This power of 2 should be greater than or equal to the value of n. Ensure your solution is efficient and consider edge cases where n is very large.", "pass@10": true, "passes": 6}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Make sure the function handles different data types gracefully. Ensure that the function maintains the integrity and order of the original tuple elements. Consider edge cases where the tuple or dictionary might be empty or contain nested structures. Test your function with various scenarios to validate its robustness and correctness.", "pass@10": true, "passes": 6}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples. You must verify that each element is extracted correctly as you perform the task. You need to ensure that all elements are correctly extracted as you perform this task. Make sure to handle the tuples with accuracy and attention. The function should take from the given two tuples and process them.", "pass@10": true, "passes": 2}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": true, "passes": 9}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string. Create a method that accepts two string parameters, representing the two strings. The function should iterate over the characters in the first string.", "pass@10": true, "passes": 10}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the order provided in the patterns array.", "pass@10": true, "passes": 1}
{"task_id": 98, "prompt": "Create a function that multiplies all the elements in a list and divides the result by the total number of elements in the list.", "pass@10": true, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list. Ensure that your function is efficient and can handle large lists gracefully.", "pass@10": true, "passes": 2}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list, ensuring that your function is efficient and can handle large lists gracefully.", "pass@10": true, "passes": 7}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers. The integers should be converted into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters. The characters need to be counted within the string.", "pass@10": true, "passes": 9}
{"task_id": 255, "prompt": "Write a function that accepts a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 1}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": true, "passes": 7}
{"task_id": 309, "prompt": "Create a python function to determine the larger of two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple. Ensure that your function handles various data types, as tuples can contain elements of any type.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not. Ensure to handle sequences of varying data types gracefully.", "pass@10": true, "passes": 9}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist. You need to go through each sublist to find its first element. This means you need to retrieve the first item from each sublist.", "pass@10": false, "passes": 0}
{"task_id": 474, "prompt": "Write a function to replace characters. The function should take a string as its input. It will replace characters in this string.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Make sure to handle edge cases where the array might be empty or contain only one element.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Create a function that eliminates sequences of lowercase letters from the provided string.", "pass@10": true, "passes": 7}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. The matrix is provided in the form of a list of lists. Each list within the main list represents a row in the matrix.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Create a function to calculate the nth power of every element in a list.", "pass@10": true, "passes": 10}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists. Ensure your solution efficiently handles lists with large numbers of elements.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. You must iterate over each tuple individually in order to find k. Make sure k is being found in all tuples provided.", "pass@10": true, "passes": 2}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted. You need to verify if the elements in the list are ordered according to a specific sorting order. This order can be either ascending or descending.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to merge three lists of identical length into one continuous flat list.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. Consider optimizing your solution for performance with large numbers.", "pass@10": true, "passes": 9}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Consider edge cases where n is 0 or k is 0 to ensure the function handles these scenarios gracefully.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume. The volume should be of a triangular prism.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove each and every whitespace present in a string, ensuring that all space characters are eliminated from the given string.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the Babylonian method. The Babylonian method is a well-known iterative algorithm. It can be used for finding the square roots of numbers. Make sure to implement the function efficiently and handle possible edge cases.", "pass@10": true, "passes": 4}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits. Ensure your function handles large input cases efficiently.", "pass@10": true, "passes": 8}
{"task_id": 724, "prompt": "Create a function that accepts base and power as inputs. The function should compute the sum of every digit of the base raised to the given power and ensure your implementation handles large numbers efficiently.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Develop a function to transform a tuple into a string, ensuring that the produced string presents the tuple components in the sequence they appear, divided by commas.", "pass@10": false, "passes": 0}
{"task_id": 735, "prompt": "Write a python function to invert the bits of the number except for the first and the last bit. Refer to this GeeksforGeeks article for more detailed information: https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/.", "pass@10": true, "passes": 6}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items. The items are chosen from the list provided as input. Ensure that the function handles edge cases, such as when n is larger than the length of the list or when the list is empty.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. Ensure your solution efficiently processes both ascending and descending sequences, and consider edge cases where the array is empty or contains only one element.", "pass@10": true, "passes": 6}
{"task_id": 20, "prompt": "Develop a function to ascertain if the given number qualifies as woodball. Ensure your solution runs efficiently even for large inputs.", "pass@10": true, "passes": 5}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure that leading or trailing spaces are preserved in the output string. Consider edge cases such as an empty string or a string containing only spaces.", "pass@10": true, "passes": 8}
{"task_id": 128, "prompt": "Create a function to identify words in a provided list that exceed n characters in length. Ensure the function returns a new list containing only these words.", "pass@10": true, "passes": 9}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the numbers in a given list that appear only once. This indicates that each number must have a unique occurrence in the list. In other words, every number should appear exactly once in the list.", "pass@10": true, "passes": 3}
{"task_id": 589, "prompt": "Write a function to identify perfect squares within the range of two specified numbers.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. Make sure to account for both positive and negative numbers in the list. Ensure that your solution efficiently handles edge cases such as lists with all negative numbers or single-element lists. Consider the possibility of the input list being empty and how your function should handle this case.", "pass@10": true, "passes": 4}
{"task_id": 557, "prompt": "Create a function that changes the casing of each character in a text string. Ensure that the function handles both uppercase and lowercase characters appropriately.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number. Ensure that your solution efficiently handles very large numbers as input. Consider edge cases such as when the input number is 0 or negative as these may affect the outcome or efficiency of the solution.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Each month of the year has a certain number of days. There are months that have 31 days. Some months contain 31 days. Ensure your function can handle invalid month numbers gracefully.", "pass@10": true, "passes": 1}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Consult this article available at: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/.", "pass@10": true, "passes": 8}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word. Consider edge cases where the string may be empty or contain multiple spaces between words. Ensure your function handles these cases gracefully. This can be done by stripping excess whitespace from the input string before processing.", "pass@10": true, "passes": 7}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array, making sure to handle edge cases, such as arrays with fewer than two elements, gracefully.", "pass@10": false, "passes": 0}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the order that is provided in the patterns array. The order apparent in the patterns array must be strictly followed.", "pass@10": true, "passes": 1}
{"task_id": 556, "prompt": "Create a Python function that computes the count of pairings that produce an odd XOR.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. This involves taking each string that represents a number and interpreting it as an integer or floating point number. Make sure to maintain the original order of elements that have equal numeric value by using the sorting stability properties of Python's built-in sort functionality.", "pass@10": true, "passes": 4}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Make sure that the list has at least two elements. This is necessary to perform the interchange. Consider edge cases where the list contains complex data types like objects or nested lists.", "pass@10": true, "passes": 8}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Refer to this link: https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ for additional context and guidance.", "pass@10": true, "passes": 10}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 6}
{"task_id": 308, "prompt": "Write a function to identify the specified count of topmost products from two given lists, selecting one factor from each list. Make sure your solution is optimized for performance when dealing with large lists. It should handle extensive data sets in a way that meets performance expectations effectively.", "pass@10": true, "passes": 3}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list, ensuring that the function handles empty lists and returns an empty list when the first list is empty.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the Babylonian method. The Babylonian method is a well-known iterative algorithm. It can be used for finding the square roots of numbers. Make sure to implement the function efficiently and handle possible edge cases. Consider the precision and number of iterations needed to achieve an accurate result.", "pass@10": true, "passes": 5}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string and ensure the function handles cases with nested or multiple pairs of quotation marks accurately.", "pass@10": false, "passes": 0}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary. Ensure that the function should handle cases where the dictionary is empty by returning zero.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove the first and last occurrence of a given character from the string. You must create a function that accepts two inputs. The function should take a string and a character as parameters. Ensure the resulting string retains its original sequence except for the removal of the specified character instances.", "pass@10": true, "passes": 8}
{"task_id": 296, "prompt": "Develop a Python function to determine how many inversions are present in an array. Calculating the total number of inversions is required. An inversion is defined as a pair of indices (i, j) such that i < j and array[i] > array[j].", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N provided as a list of lists, where every cell has an associated cost. We want to find a path with the maximum average over all existing paths, defined as a particular sequence of cells that starts from the top-left cell, only moving right or down, and ends on the bottom-right cell. Average is computed as total cost divided by the number of cells visited in the path. Assume all costs are non-negative integers.", "pass@10": true, "passes": 3}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Ensure your function handles tuples of varying lengths gracefully. Consider edge cases where the tuple might be empty or contain only one element.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple, ensuring that your solution can handle both integer and string data types.", "pass@10": true, "passes": 10}
{"task_id": 752, "prompt": "Construct a function that computes the nth Jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to verify if the provided list includes consecutive numbers. Ensure your implementation handles both positive and negative integers efficiently.", "pass@10": true, "passes": 7}
{"task_id": 260, "prompt": "Create a function that returns the nth newman\u2013shanks\u2013williams prime number. The prime number at the nth position in the sequence is what we are referring to. This sequence is specifically defined by the newman\u2013shanks\u2013williams primes. This position n is given as an input parameter to the function which needs to be implemented.", "pass@10": true, "passes": 2}
{"task_id": 619, "prompt": "Create a function that shifts all numerical values to the conclusion of the given string. Ensure the function maintains the order of non-numeric characters as they appear in the input. It should also keep numeric values in the order they appear.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Write a function to append the specified tuple to the provided list. Ensure that the function handles scenarios where the tuple is empty efficiently.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string, ensuring your solution efficiently handles large input sizes using an optimized algorithm. Consider edge cases and include error handling for invalid inputs.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' This should be raised to the power 'b'.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that accepts a tuple and an element. The function should be able to count how many times the element occurs in the tuple. Ensure the solution is efficient and handles edge cases such as empty tuples gracefully.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Construct a Python function to compute the sum of the bitwise XOR for each pair of integers in the given list.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Organizing a list of elements typically requires arranging them in a specific order. This order can be ascending or descending based on the criteria chosen.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers. The quotient should be rounded down. It will be rounded to the nearest integer. Ensure that the function handles division by zero appropriately by returning an error message or similar indication.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Create a Python function that exchanges the initial and final elements of a specified list. Ensure that the function handles lists well even when they contain fewer than two elements. It should do so gracefully without causing any errors.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Create a function that outputs a list of every pair of adjacent items in a given list. Make sure that the function is robust enough to handle empty lists effectively. Also, ensure that it can deal with lists containing a single element gracefully.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. Make sure to handle cases where the element does not exist in the tuple gracefully.", "pass@10": true, "passes": 6}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort. Ensure your implementation efficiently handles large arrays with varying gaps and decreasing sequences, and consider edge cases such as empty arrays or arrays with a single element to ensure robust functionality. Pay attention to the stability of your sort implementation regarding equal elements.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 8}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter, ensuring that the delimiter is inserted between every element of the tuple without any trailing delimiter at the end. Consider edge cases like empty tuples or tuples with a single element.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number. The sequence of nonagonal numbers begins with 1, 9, 24, 46, 75, and continues. Each number represents a polygon with nine sides, and follows a specific formula for calculation. Your implementation should efficiently compute the nth number without recalculating preceding numbers unnecessarily.", "pass@10": false, "passes": 0}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure that the function handles both positive and negative integers appropriately. Consider optimizing the function for larger integers to improve efficiency.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Create a function that calculates the n'th lucas number by computing values found in the Lucas sequence, which is similar to the Fibonacci sequence in its pattern of numbers.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number, meaning the number must be zero or higher. A non-negative number is any number that is greater than or equal to zero. It means the value cannot be negative. The function should then return the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 5}
{"task_id": 170, "prompt": "Create a function that calculates the sum of elements in an array between two specified indices. Ensure your solution properly considers cases where the indices are beyond the list's boundaries.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet, making the comparison case insensitive. Pay special attention to edge cases where the string may be empty or of minimal length. Consider how the function should behave with input strings containing non-alphabetic characters.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. You are given a list of different integers. Your task is to combine these integers together into one continuous integer.", "pass@10": true, "passes": 10}
{"task_id": 767, "prompt": "Create a Python function that tallies the number of pairs having a sum equal to \u2018sum\u2019. The function takes as input a list of numbers and the sum.", "pass@10": true, "passes": 6}
{"task_id": 624, "prompt": "Create a Python function that converts a given string to uppercase, ensuring that your function handles special characters and numbers properly while converting the alphabetical characters to uppercase.", "pass@10": true, "passes": 2}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You are provided with a list of tuples, and your task is to find the minimum k records from the list. Make sure to consider edge cases such as when the list is empty or k is larger than the number of available records. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": false, "passes": 0}
{"task_id": 129, "prompt": "Create a function to determine if the matrix is a magic square.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Design a function to add together all amicable numbers ranging from 1 to a given number. Make sure to consider edge cases such as very small or very large numbers in your implementation.", "pass@10": false, "passes": 0}
{"task_id": 456, "prompt": "Write a function to reverse each string for all of the string values that are present in a given list.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array. You must find the subarray. This subarray should have the largest product. The function should return this maximum product as the result.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. The nth octagonal number is a figurate number that can be illustrated as an eight-sided polygon. It can be calculated using the formula: 3n(n-1)+n.", "pass@10": true, "passes": 3}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of elements in the given tuples. You must multiply elements at the same position in the tuples with each other.", "pass@10": true, "passes": 6}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Ensure to appropriately handle scenarios where the tuple consists of an odd number of elements. It is important that any odd element is dealt with correctly. You should also consider edge cases such as empty tuples or tuples with only one element. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Develop a function to determine the total of (n - 2*i) from i=0 to n // 2, calculating the sum for example n + (n-2) + (n-4) until n-x =< 0.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Create a Python function that computes the number of numeric digits in a given string, ensuring the function handles both positive and negative scenarios efficiently.", "pass@10": true, "passes": 10}
{"task_id": 802, "prompt": "Write a python function to calculate how many rotations are needed to produce a sorted array. You can refer to this link for more information: https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/", "pass@10": false, "passes": 0}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Ensuring efficient handling of large datasets is important.", "pass@10": true, "passes": 7}
{"task_id": 791, "prompt": "Create a function to eliminate tuples from the provided tuple. A tuple can contain multiple elements, and the function should remove all the nested tuples within the main tuple while maintaining the original order. Assume the input will always be a valid tuple.", "pass@10": true, "passes": 6}
{"task_id": 297, "prompt": "Write a function to flatten a specified list that is nested. The goal is to transform this nested list structure. This transformation should result in a single, one-dimensional list.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size. Ensure that your solution efficiently handles a range of input values.", "pass@10": true, "passes": 9}
{"task_id": 294, "prompt": "Create a function that finds the maximum value in a given heterogeneous list. Ensure that your solution efficiently handles lists with mixed data types, such as integers, strings, and floats.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to invert the bits of the number. The inversion should be applied except for the first and the last bit. Refer to this GeeksforGeeks article for more detailed information: https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/.", "pass@10": true, "passes": 8}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. The array is sorted in non-decreasing order. This means the elements in the array are arranged from smallest to largest, with possible duplicates.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to discover the initial digit of a specified number. Ensure the function handles both positive and negative numbers. It's important to consider edge cases such as zero and very small floating-point numbers in your implementation. The solution should efficiently manage numbers with varying degrees of precision.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples. You must verify that each element is extracted correctly as you perform the task. It is important to check that each element is accurately extracted as you perform this task. You need to ensure that all elements are correctly extracted as you perform this task. Make sure to handle the tuples with accuracy and attention. The function should take from the given two tuples and process them.", "pass@10": true, "passes": 4}
{"task_id": 781, "prompt": "Write a python function to verify if the number of divisors is even. You may need to consider special cases such as when the number is zero or negative. Ensure your function handles large input values efficiently. Consider optimizing your approach to minimize time complexity for large numbers. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 5}
{"task_id": 257, "prompt": "Write a function that takes in two numbers. The function should be able to accept any two numerical inputs. These inputs can be integers, decimals, or any other numerical format. The function returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not. Consider edge cases such as when one or both numbers are negative. Also, consider cases when one or both numbers are zero. Ensure your solution is efficient and handles large integers gracefully.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists that contain a particular element. A sublist is a contiguous slice of the list. This means it is a sequence of elements that are next to each other in the original list. The function should take two arguments: the list of elements and the element to search for. The goal is to determine how many sublists include the specified element.", "pass@10": true, "passes": 4}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements. Ensure that your solution can accommodate nested lists of arbitrary depth. Be sure that your code effectively manages any level of nesting within the lists.", "pass@10": true, "passes": 10}
{"task_id": 583, "prompt": "Write a function which returns the nth catalan number. Catalan numbers form a sequence of natural numbers and significantly appear in various counting problems, often involving recursively defined objects.", "pass@10": true, "passes": 9}
{"task_id": 240, "prompt": "Create a function that accepts two lists as arguments and swaps out the final element of the first list with the contents of the second list. Ensure that the original two lists are not mutated, and return a new list as the result.", "pass@10": true, "passes": 9}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}). It then returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 610, "prompt": "Create a Python function that takes a list as its parameter. The function should return a modified version of that list, which should contain the same elements but with the k'th element removed.", "pass@10": true, "passes": 9}
{"task_id": 565, "prompt": "Write a python function that should be able to split a string into its individual characters.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure that your function efficiently handles nested lists, which can have varying depths.", "pass@10": true, "passes": 9}
{"task_id": 413, "prompt": "Write a function to pull the nth element from a specified list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to compute the sum of Perrin numbers. Ensure that your implementation is both efficient and optimized for large inputs. Additionally, verify the correctness of your function with several test cases.", "pass@10": true, "passes": 7}
{"task_id": 253, "prompt": "Create a Python function that calculates the number of integer components in a given list, ensuring the function efficiently handles lists with many elements.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Ensure to handle division by zero and different lengths of lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the inner list from a list of lists where the sum of its elements is the largest. Ensure your solution is efficient and handles lists with varying sizes effectively. It should also handle lists with various values.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array. The array should be reversed up to a specified index.", "pass@10": true, "passes": 6}
{"task_id": 247, "prompt": "Create a function that determines the length of the longest subsequence in the given string. Consider edge cases such as an empty string or a string with all identical characters. It is also important to ensure the subsequence reads the same forwards and backwards.", "pass@10": true, "passes": 6}
{"task_id": 410, "prompt": "Create a function to identify the smallest value within a specified heterogeneous list. Account for exceptional cases where the list could include nested lists or types that cannot be compared.", "pass@10": true, "passes": 3}
{"task_id": 308, "prompt": "Write a function to identify the specified count of largest products from two given lists, selecting one factor from each list. Make sure your solution is optimized for performance when dealing with large lists. It should handle extensive data sets in a way that meets performance expectations effectively. Consider edge cases where one or both lists contain negative numbers, which might affect the product calculations significantly.", "pass@10": true, "passes": 8}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists. Identify and determine the length of the smallest list from a given list containing multiple lists. Ensure your solution efficiently handles lists of varying lengths and sizes.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to determine the nearest smaller value than n. Ensure the function efficiently handles large inputs to prevent performance issues.", "pass@10": true, "passes": 9}
{"task_id": 172, "prompt": "Write a function to count the number of occurrence of the string 'std' in a given string. Make sure to handle cases where the input string might be empty.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Design a method to tally the quantity of elements that are the same in the corresponding location of three provided lists. Make sure the method accommodates lists with varying sizes properly.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple. A list in Python is a collection of ordered items. A tuple, on the other hand, is a collection of ordered, immutable items. Ensure that the function handles both empty lists and lists with various data types effectively.", "pass@10": true, "passes": 7}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples. It should execute the division operation for corresponding elements in the tuples. This means that each element in the first tuple will be divided by the corresponding element in the second tuple. Ensure that the function handles division by zero gracefully by returning `None` for any tuple element pair where the denominator is zero.", "pass@10": true, "passes": 9}
{"task_id": 415, "prompt": "Design a Python function to find a pair of integers that yields the maximum product from a list of integers. The function should iterate through various pairs. The purpose is to identify which pair results in the greatest product.", "pass@10": true, "passes": 10}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Make sure your solution handles cases where the side lengths are non-negative and correctly manages inputs where side lengths might be zero or very small. It is important that you consider all possible valid side lengths.", "pass@10": true, "passes": 9}
{"task_id": 409, "prompt": "Create a function that identifies the smallest product from the pairs of tuples provided in a specified list, ensuring that your function handles cases with both positive and negative integers effectively.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss.", "pass@10": true, "passes": 7}
{"task_id": 447, "prompt": "Write a function to find cubes of all individual elements present in a list. You need to calculate the cube for each element separately.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Create a function that counts the number of integer pairs in a list whose xor results in an even number.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Create a function to identify the next smallest palindrome of a given integer. The function should return the result as an integer. Ensure that the solution efficiently handles large integers where necessary.", "pass@10": true, "passes": 8}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts with the same character it ends with or not. Check if the character at the start is the same as the one at the end. If it is, they match.", "pass@10": true, "passes": 6}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries. Ensure that the function handles invalid inputs gracefully by returning an empty list. Consider edge cases where N might be zero or a negative number.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. You need to determine if each element in the tuple is unique. You are required to inspect all the elements within the tuple. Make sure that none of the elements are repeated in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Create a Python function that determines the lesser of two numbers. Your task is to write a function that takes two numerical inputs as arguments. The function should return the smaller of the two numbers. Consider edge cases where inputs might be equal or non-integer values.", "pass@10": true, "passes": 9}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length, ensuring the function handles corner cases such as empty strings or strings with non-numeric characters gracefully.", "pass@10": true, "passes": 2}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. The function should be able to efficiently handle large values of n. This means it should be able to process these numbers quickly without unnecessary delays. Consider optimizing the algorithm for faster execution. Remember to test your function with various values of n to ensure it performs well under different conditions. Pay special attention to edge cases and validate input to maintain robust functionality.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n. The function should filter the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Make sure to consider edge cases. These edge cases include scenarios such as an empty list or a list with all identical elements. Test your function thoroughly to ensure its correctness.", "pass@10": true, "passes": 8}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers, and make sure to consider edge cases where the set might be empty or contain a single element. For this problem, you can assume that the Bell numbers are given or can be precomputed.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list. Ensure that your solution efficiently handles a list of varying lengths. Your solution should also handle different element types. Consider edge cases such as an empty list or a list with only one type of element.", "pass@10": true, "passes": 5}
{"task_id": 391, "prompt": "Write a function to convert more than one list into a nested dictionary. You will need to iterate through each list. This iteration is essential as it will reflect the structure of the input lists in the resulting nested dictionary.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Ensure that your implementation efficiently calculates the result for large values of n. A star number is a centered figurate number that represents a centered hexagram, which is a six-pointed star, the star of David.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Create a function that eliminates sequences of lowercase letters from the provided string. Ensure that the function returns a new string with the sequences removed, preserving the order of other characters.", "pass@10": true, "passes": 6}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length. The function then performs the element wise modulo. Ensure that the input tuples strictly contain integers. This is done to avoid runtime errors.", "pass@10": true, "passes": 9}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items. The elements are selected from the input list. Ensure that the function handles edge cases, such as when n is larger than the length of the list or when the list is empty.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to eliminate all whitespaces that are present in a string. These whitespaces can include spaces, tabs, and new line characters. Ensure your solution handles strings with different types of whitespace characters effectively. Make sure your implementation is efficient in terms of both time and space complexity.", "pass@10": true, "passes": 7}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list efficiently, ensuring that your function can handle large lists gracefully.", "pass@10": true, "passes": 5}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. You should consider optimizing your solution for performance. Especially when dealing with large numbers, optimized solutions are crucial.", "pass@10": true, "passes": 7}
{"task_id": 424, "prompt": "Write a function to extract only the final index element of each string in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume. The volume should be of a triangular prism. Make sure to consider the base area and the height of the prism in your calculations.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically, ensuring that your solution handles negative numbers and decimal values correctly. Ensure that your solution efficiently manages different formats of numeric strings. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 6}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Assume that n and k are positive integers.", "pass@10": true, "passes": 8}
{"task_id": 397, "prompt": "Create a function that calculates the middle value from a set of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to verify if any element in a sequence is present in a sequence or not. Ensure to handle sequences of varying data types gracefully.", "pass@10": true, "passes": 4}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. The factorial of a number is the result of multiplying all positive integers that are less than or equal to the number itself. It is often denoted using the symbol 'n!'. Assume the input number is a non-negative integer.", "pass@10": true, "passes": 9}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube. You will be given the length of one side of the cube as input. The input will be the measurement of one side of the cube and should be treated as such. This side length will be used in a calculation. Use this side length to calculate the volume.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We consider that the number is 32 bit and consists of 32 separate binary digits. These bits form the binary representation of the number.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits; ensure your function handles large input cases efficiently.", "pass@10": true, "passes": 7}
{"task_id": 388, "prompt": "Create a Python function to locate the greatest power of 2 that is not more than n. Make sure your solution handles both positive and negative values of n effectively.", "pass@10": true, "passes": 7}
{"task_id": 724, "prompt": "Create a function that accepts base and power as inputs. The function should compute the sum of every digit of the base raised to the given power, ensuring your implementation handles large numbers efficiently.", "pass@10": true, "passes": 7}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": true, "passes": 5}
{"task_id": 273, "prompt": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index, ensuring that both tuples are of the same length to avoid index errors.", "pass@10": true, "passes": 8}
{"task_id": 269, "prompt": "Write a function. The goal of the function is to determine the ascii value of a character.", "pass@10": true, "passes": 9}
{"task_id": 97, "prompt": "Create a function that determines how often each item appears in a flattened list of lists. The function should take in a list of lists and first flatten it into a single list. Then it returns the results in a dictionary format. Ensure the function handles empty lists and non-numeric items gracefully.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not. Ensure your solution is efficient and handles edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. Ensure your solution efficiently processes both ascending and descending sequences. Consider edge cases where the array is empty. Also, consider cases where it contains only one element.", "pass@10": true, "passes": 7}
{"task_id": 128, "prompt": "Develop a function that finds words in a given list whose length exceeds n characters. Ensure the function returns a new list containing only these words.", "pass@10": true, "passes": 9}
{"task_id": 721, "prompt": "Given a square matrix of size N*N offered as a list of lists, where every cell has an associated cost. We want to find a path with the maximum average over all existing paths, defined as a particular sequence of cells that starts from the top-left cell, only moving right or down, and ends on the bottom-right cell. Average is computed as total cost divided by the number of cells visited in the path. Assume all costs are non-negative integers.", "pass@10": true, "passes": 2}
{"task_id": 557, "prompt": "Create a function that changes the casing of each character in a text string. Ensure your function operates efficiently with strings of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Create a Python function to determine the final digit of a specified integer. The function should take an integer as an argument. It returns the last digit of this integer as an output.", "pass@10": true, "passes": 10}

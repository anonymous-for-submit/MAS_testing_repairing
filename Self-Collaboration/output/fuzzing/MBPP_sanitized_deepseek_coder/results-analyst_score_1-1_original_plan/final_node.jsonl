{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": 0, "passes": 9}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": 0, "passes": 4}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": 0, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": 0, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": 0, "passes": 7}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": 0, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": 0, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": 0, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": 0, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": 0, "passes": 4}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": 0, "passes": 8}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": 0, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": 0, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": 0, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": 0, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": 0, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": 0, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": 0, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": 0, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": 0, "passes": 3}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": 0, "passes": 7}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": 0, "passes": 6}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": 0, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": 0, "passes": 3}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": 0, "passes": 8}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": 0, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": 0, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": 0, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": 0, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": 0, "passes": 8}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": 0, "passes": 4}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": 0, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": 0, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": 0, "passes": 7}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": 0, "passes": 4}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": 0, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.", "pass@10": 0, "passes": 8}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": 0, "passes": 1}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": 0, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": 0, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": 0, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": 0, "passes": 8}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": 0, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": 0, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": 0, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array.", "pass@10": 0, "passes": 3}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": 0, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": 0, "passes": 10}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": 0, "passes": 4}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": 0, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": 0, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": 0, "passes": 7}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices.", "pass@10": 0, "passes": 2}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": 0, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": 0, "passes": 10}
{"task_id": 223, "prompt": "Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)", "pass@10": 0, "passes": 1}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": 0, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 229, "prompt": "Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.", "pass@10": 0, "passes": 3}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": 0, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": 0, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": 0, "passes": 6}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": 0, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": 0, "passes": 10}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": 0, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": 0, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": 0, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": 0, "passes": 6}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": 0, "passes": 2}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": 0, "passes": 6}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": 0, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": 0, "passes": 2}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": 0, "passes": 2}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": 0, "passes": 2}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": 0, "passes": 3}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": 0, "passes": 10}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": 0, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": 0, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": 0, "passes": 10}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": 0, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": 0, "passes": 10}
{"task_id": 273, "prompt": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.", "pass@10": 0, "passes": 1}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": 0, "passes": 5}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": 0, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": 0, "passes": 7}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number.", "pass@10": 0, "passes": 1}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": 0, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": 0, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": 0, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": 0, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": 0, "passes": 9}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": 0, "passes": 2}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": 0, "passes": 10}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": 0, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": 0, "passes": 9}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": 0, "passes": 9}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": 0, "passes": 9}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": 0, "passes": 8}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": 0, "passes": 10}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": 0, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": 0, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": 0, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": 0, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": 0, "passes": 10}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 398, "prompt": "Write a function to compute the sum of digits of each number of a given list.", "pass@10": 0, "passes": 7}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": 0, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd.", "pass@10": 0, "passes": 8}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": 0, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": 0, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": 0, "passes": 10}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": 0, "passes": 8}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": 0, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": 0, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": 0, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": 0, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": 0, "passes": 10}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium.", "pass@10": 0, "passes": 9}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number.", "pass@10": 0, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": 0, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ration of positive numbers in an array of integers.", "pass@10": 0, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": 0, "passes": 2}
{"task_id": 446, "prompt": "Write a python function to count the occurence of all elements of list in a tuple.", "pass@10": 0, "passes": 1}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": 0, "passes": 5}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": 0, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": 0, "passes": 9}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": 0, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": 0, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": 0, "passes": 1}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": 0, "passes": 8}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": 0, "passes": 7}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": 0, "passes": 4}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": 0, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": 0, "passes": 5}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": 0, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": 0, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": 0, "passes": 7}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": 0, "passes": 8}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": 0, "passes": 10}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list.", "pass@10": 0, "passes": 6}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": 0, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": 0, "passes": 10}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": 0, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": 0, "passes": 1}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": 0, "passes": 3}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": 0, "passes": 1}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": 0, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list.", "pass@10": 0, "passes": 10}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": 0, "passes": 8}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": 0, "passes": 7}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position.", "pass@10": 0, "passes": 3}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple.", "pass@10": 0, "passes": 9}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": 0, "passes": 6}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.", "pass@10": 0, "passes": 7}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": 0, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": 0, "passes": 6}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": 0, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": 0, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": 0, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": 0, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": 0, "passes": 9}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": 0, "passes": 9}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": 0, "passes": 9}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": 0, "passes": 9}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": 0, "passes": 3}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": 0, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": 0, "passes": 9}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": 0, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": 0, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": 0, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": 0, "passes": 9}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": 0, "passes": 3}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": 0, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": 0, "passes": 10}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list.", "pass@10": 0, "passes": 6}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": 0, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": 0, "passes": 6}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": 0, "passes": 7}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": 0, "passes": 6}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,", "pass@10": 0, "passes": 8}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": 0, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.", "pass@10": 0, "passes": 1}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": 0, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": 0, "passes": 6}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": 0, "passes": 7}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": 0, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": 0, "passes": 7}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": 0, "passes": 3}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": 0, "passes": 1}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": 0, "passes": 1}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": 0, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": 0, "passes": 5}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": 0, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.", "pass@10": 0, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": 0, "passes": 10}
{"task_id": 802, "prompt": "Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/", "pass@10": 0, "passes": 1}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": 0, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": 0, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": 0, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": 0, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": 0, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": 0, "passes": 8}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": 0, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": 0, "passes": 9}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": 0, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": 0, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": 0, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": 0, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": 0, "passes": 8}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 576, "prompt": "Write a python function to check whether a list is sublist of another or not.", "pass@10": 0, "passes": 1}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": 0, "passes": 5}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": 0, "passes": 10}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": 0, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": 0, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": 0, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": 0, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": 0, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements. The function should take as input the given two lists.", "pass@10": true, "passes": 10}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": false, "passes": 0}
{"task_id": 8, "prompt": "Write a function to find squares. You need to calculate the square for each of the individual elements present in the list.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Create a Python function to eliminate the initial and final instance of a specified character from the string.", "pass@10": true, "passes": 5}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure that the function efficiently handles matrices of varying sizes.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Create a Python function to calculate the volume of a triangular prism.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square. The function should take the side length as input to calculate the perimeter.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element. Your task is to check each element in the array to see if there are any duplicates. Ensure the function runs efficiently for large arrays.", "pass@10": false, "passes": 0}
{"task_id": 20, "prompt": "Create a function to determine whether the provided number is a woodball.", "pass@10": true, "passes": 3}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. The nth octagonal number is a mathematical term. It refers to a specific number in a sequence defined by an octagonal shape pattern.", "pass@10": true, "passes": 5}
{"task_id": 65, "prompt": "Craft a function to unroll a list and calculate the total of all its elements.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Create a Python function to determine if the given array is either entirely non-increasing or non-decreasing.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Ensure the function achieves this with optimal time complexity.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares. You need to determine if a particular number can be expressed as the result of subtracting one perfect square from another. This is an important calculation to be made in your function. Or not.", "pass@10": true, "passes": 2}
{"task_id": 74, "prompt": "Create a function to determine if it adheres to the order specified in the patterns array.", "pass@10": true, "passes": 2}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not. The length of the word should be measured. Determine if this measured length is an odd number.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. The nth tetrahedral number is derived from the sum of the first n triangular numbers. It represents a geometric shape that forms a pyramid with a triangular base.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the Newman Conway sequence. The Newman Conway sequence is a mathematical sequence used to generate integer numbers following a specific pattern. Your task is to implement this function so that it accurately returns the nth term of the sequence.", "pass@10": true, "passes": 5}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. Make sure to handle empty lists by returning an empty dictionary.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to identify the nearest smaller number than n.", "pass@10": true, "passes": 5}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'. Ensure that your solution handles large values efficiently.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first element of the tuple with the lowest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Create a Python function to determine the size of the shortest list within a collection of lists.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. You are tasked with determining how many integers can evenly divide the given integer. These divisors can be positive numbers, including 1 and the integer itself.", "pass@10": true, "passes": 8}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer. Make sure to handle edge cases such as when the integer consists of all 9s or is a single-digit number.", "pass@10": true, "passes": 8}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. You need to write a function that performs an append operation. This function should take a list and a tuple as inputs.", "pass@10": true, "passes": 10}
{"task_id": 108, "prompt": "Write a function to combine three lists and arrange them in a single sorted list.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": true, "passes": 1}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers. These numbers are in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Craft a function that adds together all amicable numbers ranging from 1 to a given number.", "pass@10": true, "passes": 2}
{"task_id": 125, "prompt": "Write a function to determine the largest gap between the count of 0s and the count of 1s within any substring of the provided binary string.", "pass@10": false, "passes": 0}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Be sure to consider edge cases where the list might be empty or n might be a negative number.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list. Consider handling cases where there might be ties for maximum frequency.", "pass@10": false, "passes": 0}
{"task_id": 132, "prompt": "Develop a function that changes a tuple into a string.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Create a function to calculate the nth hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Make sure your solution handles both ascending and descending order sorting.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical. These items have to be in the same position of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array. The function should compare each element with every other element in the array. It should keep track of the largest difference found during these comparisons.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Ensure your solution efficiently handles large values of n.", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": true, "passes": 1}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet. The function should be case insensitive in its operation.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 6}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Ensure that the input provided is a positive number representing the side length.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string. The function should take a single string as input. It needs to return the total count of the substring 'std' found within the provided input string.", "pass@10": true, "passes": 10}
{"task_id": 223, "prompt": "Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.) Ensure the function handles cases where the array length is zero.", "pass@10": false, "passes": 0}
{"task_id": 227, "prompt": "Write a function to find the minimum value among three numbers. You need to compare each number in order to determine which one is the smallest.", "pass@10": true, "passes": 10}
{"task_id": 229, "prompt": "Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones. The function must ensure that the negative elements are placed first and followed by the positive ones. The order among negative elements is preserved, and the relative order among positive elements is also preserved.", "pass@10": false, "passes": 0}
{"task_id": 230, "prompt": "Create a function that accepts a string and a character, substitutes blank spaces within the string with the given character, and returns the modified string.", "pass@10": true, "passes": 2}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string. Consider edge cases such as strings of length zero or one.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, where each element is a positive integer and is greater than or equal to twice the previous element and less than or equal to m.", "pass@10": true, "passes": 2}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 8}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string. Ensure that your function handles edge cases, such as an empty string, gracefully.", "pass@10": true, "passes": 10}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": true, "passes": 9}
{"task_id": 250, "prompt": "Craft a Python function that accepts a tuple along with an element, and calculates how many times the element appears within the tuple.", "pass@10": true, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates. Complex numbers are numbers that have both a real part and an imaginary part. In polar coordinates, a complex number is represented by its magnitude and angle.", "pass@10": false, "passes": 0}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Ensure to consider edge cases where the list might be empty or the length n is zero.", "pass@10": true, "passes": 2}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number. Ensure that the function handles both integers and floating-point numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. Ensure your solution is optimized for performance.", "pass@10": true, "passes": 10}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples. Ensure to handle cases where division by zero might occur, and return an appropriate message or value.", "pass@10": true, "passes": 10}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length. Ensure the function handles edge cases where the side length might be zero or negative, returning a suitable response or error.", "pass@10": true, "passes": 8}
{"task_id": 267, "prompt": "Write a python function that accepts an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 271, "prompt": "Create a Python function which accepts an integer n and calculates the total of the first n even natural numbers each elevated to the power of five.", "pass@10": true, "passes": 8}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Ensure that the function can handle empty lists and tuples gracefully.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and calculates the sum of even index binomial coefficients.", "pass@10": true, "passes": 9}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n. Ensure that the function returns a new dictionary with the filtered entries.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. Consider edge cases such as empty tuples or tuples where the target element is not present.", "pass@10": true, "passes": 5}
{"task_id": 282, "prompt": "Write a function to subtract two lists. Perform the subtraction element-wise.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and an element and verifies if every item within the list matches the specified element.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence. The condition is that at most 2 adjacent posts can have the same color. You need to find the solution for the given fence with n posts and k colors.", "pass@10": true, "passes": 8}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer). Ensure that the function can handle division by zero and return an appropriate message or value.", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array. Ensure your implementation efficiently handles arrays with large numbers of elements.", "pass@10": true, "passes": 5}
{"task_id": 297, "prompt": "Create a function to unroll a provided nested list framework.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to determine the number of binary sequences of length 2n where the sum of the first n bits equals the sum of the last n bits.", "pass@10": true, "passes": 3}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list. Ensure that the function returns the products in descending order of magnitude.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Develop a Python function to determine the larger of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list into a nested dictionary. The function should take in multiple lists as input. Each list will represent a level in the nested dictionary. The last list will contain values corresponding to the keys from the previous list.", "pass@10": true, "passes": 2}
{"task_id": 393, "prompt": "Write a function to find the list. The list returned should be the one with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. Ensure the solution runs efficiently even for large tuples.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not. Check if the string's first character matches its last character. This comparison will determine if the string has the same starting and ending character.", "pass@10": true, "passes": 10}
{"task_id": 398, "prompt": "Write a function to compute the sum of digits for each number present in a given list. Consider each number in the list separately.", "pass@10": false, "passes": 0}
{"task_id": 399, "prompt": "Write a function to carry out the bitwise xor calculation on the provided tuples.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements. You need to perform this operation in the given two nested tuples.", "pass@10": true, "passes": 9}
{"task_id": 405, "prompt": "Write a function to check whether an element is present within a tuple. For this, you will need to evaluate each element in the tuple to determine if it matches the specified value.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd. Parity refers to whether a number is even or odd. In the context of this task, you need to determine if a number is odd.", "pass@10": false, "passes": 0}
{"task_id": 410, "prompt": "Write a function to find the minimum value. The function should take an input which is a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function. Extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not. Ensure that the function has an optimal time complexity for large sequences.", "pass@10": true, "passes": 1}
{"task_id": 420, "prompt": "Write a python function to compute the sum of cubes of the first n even natural numbers.", "pass@10": true, "passes": 9}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Ensure the function handles large values of n efficiently.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple. Ensure the function gracefully handles empty strings by skipping them.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the individual elements and tuples from the provided two tuples.", "pass@10": false, "passes": 0}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that your implementation handles both positive and negative integers in the list.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples. Ensure the result captures the multiplication of corresponding elements from each tuple.", "pass@10": true, "passes": 8}
{"task_id": 446, "prompt": "Write a python function to count the occurrence of all elements of the list in a tuple.", "pass@10": false, "passes": 0}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": true, "passes": 3}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string. Ensure the function handles both spaces and tabs effectively.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Ensure that your function handles edge cases such as invalid month numbers gracefully.", "pass@10": false, "passes": 0}
{"task_id": 456, "prompt": "Develop a function to invert each string within a provided list of string elements.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. You will be given the length and width of the rectangle as inputs. The inputs will be provided by the user. The function should calculate the area using the formula: area = length * width.", "pass@10": false, "passes": 0}
{"task_id": 459, "prompt": "Design a function to eliminate sequences of uppercase letters from a provided string.", "pass@10": true, "passes": 6}
{"task_id": 460, "prompt": "Write a python function to obtain the first element of each sublist. A sublist is a list that resides within another list. Your function should traverse through each sublist and extract the first item.", "pass@10": true, "passes": 2}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary. You need to ensure that all the values in a given dictionary are identical. This means every value must be equal to each other.", "pass@10": true, "passes": 5}
{"task_id": 475, "prompt": "Write a function to sort a dictionary. The function should sort the dictionary by value.", "pass@10": true, "passes": 7}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Consider edge cases where the array might contain duplicate values or be empty.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Create a Python function that transforms the provided string into lowercase.", "pass@10": true, "passes": 6}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": true, "passes": 5}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed. Ensure that the input list is not modified and the function handles cases where k is out of range effectively.", "pass@10": false, "passes": 0}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. The function should take into account the structure of the matrix. It can access the n'th column to find the maximum value.", "pass@10": true, "passes": 5}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list. Ensure the solution handles cases with mixed data types by excluding non-numeric values from the summation.", "pass@10": false, "passes": 0}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Ensure to handle any potential division by zero errors gracefully.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists. This should be done element wise.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase. Ensure that the function handles both ASCII and Unicode characters correctly.", "pass@10": false, "passes": 0}
{"task_id": 625, "prompt": "Create a Python function to swap the first and last item in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers. Consider edge cases where the list could be empty or missing all consecutive numbers starting from a non-zero integer.", "pass@10": false, "passes": 0}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list. Be sure to consider edge cases such as when the list is empty or contains only one element.", "pass@10": true, "passes": 1}
{"task_id": 635, "prompt": "Write a function to sort the given list. Make sure to handle both unique and duplicate elements correctly during the sorting process.", "pass@10": true, "passes": 8}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. The given amount should be assessed carefully. It is essential to confirm that the amount indicates a breakeven status.", "pass@10": true, "passes": 8}
{"task_id": 641, "prompt": "Create a function to calculate the nonagonal number corresponding to a specified n.", "pass@10": true, "passes": 1}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position. Ensure your function takes into account edge cases such as an empty array or a position that's out of bounds.", "pass@10": true, "passes": 6}
{"task_id": 720, "prompt": "Create a function that appends a dictionary to the tuple. The output should be a tuple.", "pass@10": true, "passes": 1}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Ensure your solution is optimized for large input sizes to handle potential performance issues.", "pass@10": false, "passes": 0}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string. You need to find all the text that is enclosed within these quotation marks. The function should return these extracted values as a list.", "pass@10": false, "passes": 0}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple results from multiplying t_i by t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates. You need to process a given list to achieve this.", "pass@10": true, "passes": 9}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array. Ensure the solution is efficient with a time complexity better than O(n).", "pass@10": true, "passes": 5}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. Toggle means changing 0 to 1 and 1 to 0.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Create a function to find the left insertion position for a given value in a sorted arrangement. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to determine the position of the smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 5}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Use the URL https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/ for reference.", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters in a string are the same. The function should take an input and determine if every character matches every other character. Determine if the entire string is composed of identical characters.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to identify numbers in a specified range from startnum to endnum where each number is divisible by all its constituent digits. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 8}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Create a function that appends the provided tuple to the specified list.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ Make sure to handle edge cases such as an empty array or a single-element array.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. In this case a verbatim copy of test cases", "pass@10": true, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index, so write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 10}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list.", "pass@10": true, "passes": 5}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurrences in the original list. Ensure your function handles lists of varying depths within the main list.", "pass@10": false, "passes": 0}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": true, "passes": 5}
{"task_id": 762, "prompt": "Write a function to check whether the specified month number has 30 days or not. Months are given as number from 1 to 12.", "pass@10": true, "passes": 9}
{"task_id": 764, "prompt": "Write a python function. The function should be able to count the number of digits present within a given string.", "pass@10": true, "passes": 9}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Make sure to handle cases where the list has fewer than two items appropriately.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string; return None if there is no match.", "pass@10": true, "passes": 1}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists. Modify your function to handle cases where the list contains only unique elements. In such a situation, each element should be placed into its own individual sublist.", "pass@10": true, "passes": 10}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. You need to determine if the total number of divisors for a given number is even. If the number of divisors is an even number, return True, otherwise return False. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": false, "passes": 0}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Additionally, ensure to consider edge cases where the array might be empty or contain only one element. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Ensure that your function handles edge cases, such as when all RGB components are zero.", "pass@10": true, "passes": 4}
{"task_id": 786, "prompt": "Write a function to find the appropriate position to insert a given value in a sorted array. The array is already ordered in increasing order. Make sure that the resulting order remains sorted after insertion.", "pass@10": false, "passes": 0}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. Ensure the function handles cases where the list or string is empty, returning an appropriate tuple.", "pass@10": true, "passes": 4}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": false, "passes": 0}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. You are given a sorted array of integers and a target integer. The task is to determine the last position where the element appears in this array. The array is sorted in non-decreasing order. If the target is not present in the array, return -1. Your function should have a time complexity of O(log n).", "pass@10": true, "passes": 2}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. An array is a data structure that holds multiple elements, typically of the same data type, in a specific order. In this problem, you are required to calculate the total sum of all the elements present in the array.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that shift the bits to the left by d positions in a specified number. We assume that the number is 32 bit.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Create a function to delete any spaces from a given string.", "pass@10": true, "passes": 10}
{"task_id": 802, "prompt": "Write a python function to count the number of rotations required to generate a sorted array. In this context, a rotation refers to the act of moving the first element of an array to the last position, shifting all other elements to the left by one position. It is necessary to perform rotations only until the array becomes sorted in ascending order.", "pass@10": false, "passes": 0}
{"task_id": 556, "prompt": "Create a Python function to tally the pairs that produce an odd XOR value.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Create a function that switches the case for every character within a string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to calculate the sum of the largest contiguous sublist in the provided list.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Make sure to consider lists with repeating elements and nested sublists.", "pass@10": true, "passes": 6}
{"task_id": 569, "prompt": "Create a function that organizes each inner list of strings by sorting them in an existing list of lists.", "pass@10": true, "passes": 9}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists. You need to ensure that each list is processed separately. Every list should have duplicates removed independently of the others.", "pass@10": false, "passes": 0}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list. Consider edge cases where the list may be empty or contain non-numeric elements.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to calculate the gap between the maximum and minimum value in a provided list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. The function should efficiently handle large ranges and return a list of perfect squares within the specified interval.", "pass@10": true, "passes": 8}
{"task_id": 591, "prompt": "Create a Python function to swap the initial and final elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An armstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits. To determine if a number is armstrong, compute the sum of its digits raised to the power of the digit count and compare it to the number itself.", "pass@10": true, "passes": 10}
{"task_id": 720, "prompt": "Create a function that appends a dictionary to the tuple. You need to ensure that the dictionary is added to the end of the tuple. The output should be a tuple.", "pass@10": true, "passes": 9}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not. Ensure that the function is designed to have the best possible performance. You should aim for an optimal time complexity for large sequences.", "pass@10": false, "passes": 0}
{"task_id": 123, "prompt": "Craft a function that adds together all amicable numbers ranging from 1 to a given number. Ensure your function handles edge cases and returns accurate results for both small and large numbers within the specified range.", "pass@10": false, "passes": 0}
{"task_id": 300, "prompt": "Write a function to determine the number of binary sequences of length 2n in which the sum of the first n bits equals the sum of the last n bits.", "pass@10": true, "passes": 9}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Make sure your implementation handles matrices with different numbers of rows effectively.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that receives positive integers m and n and finds the number of possible sequences of length n, where each element is a positive integer and is greater than or equal to double the preceding element and less than or equal to m.", "pass@10": true, "passes": 1}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. Make sure to consider edge cases and optimize for performance where possible.", "pass@10": true, "passes": 3}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array. Make sure that the solution you provide is efficient. It should have a time complexity better than O(n).", "pass@10": true, "passes": 5}
{"task_id": 459, "prompt": "Design a function to eliminate sequences of uppercase letters from a provided string.", "pass@10": true, "passes": 3}
{"task_id": 739, "prompt": "Write a python function to find the position of the smallest triangular number having n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 9}
{"task_id": 562, "prompt": "Write a python function to determine the maximum length among sublists.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. An octagonal number is a figurate number that represents an octagon. It is calculated using the formula: `Octagonal(n) = n*(3n-2)`.", "pass@10": false, "passes": 0}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer. Ensure your function efficiently handles integers of various lengths, including very large input values.", "pass@10": true, "passes": 4}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Ensure that your function handles edge cases. Such edge cases occur when all RGB components are zero.", "pass@10": true, "passes": 1}
{"task_id": 278, "prompt": "Write a function to find out how many elements appear before the tuple element in the given tuple. Consider edge cases such as empty tuples or tuples where the target element is not present.", "pass@10": true, "passes": 3}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length. Ensure the function handles edge cases where the side length might be zero or negative, returning a suitable response or error. Consider optimizing the function for efficiency when dealing with very large inputs.", "pass@10": true, "passes": 9}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. The function should efficiently handle large ranges and return a list of perfect squares within the specified interval. Ensure that the solution optimizes for both time and space complexity.", "pass@10": true, "passes": 9}
{"task_id": 11, "prompt": "Create a Python function to eliminate the initial and final instance of a specified character from the string. Ensure that the function handles cases where the specified character is not present in the string.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to identify numbers in a specified range from startnum to endnum such that each number is divisible by all its constituent digits. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 7}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure that the function handles empty lists appropriately to avoid errors.", "pass@10": true, "passes": 8}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. You can consult examples on various programming resources. One such resource is https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 2}
{"task_id": 145, "prompt": "Create a Python function to identify the greatest variance between any two numbers in a provided list.", "pass@10": false, "passes": 0}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. The divisors of an integer are values that divide the number exactly without leaving a remainder. You need to check if these sums match for both integers.", "pass@10": true, "passes": 3}
{"task_id": 764, "prompt": "Write a python function. The function ought to be capable of counting the quantity of digits that exist inside a provided string.", "pass@10": true, "passes": 7}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence. The condition is that at most 2 adjacent posts can have the same color. You need to find the solution for the given fence with n posts and k colors. Consider edge cases where either n or k is zero and explain how the function should handle them.", "pass@10": true, "passes": 7}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. An array is a data structure that holds multiple elements, typically of the same data type, in a specific order, and in this problem, you are required to calculate the total sum of all the elements present in the array.", "pass@10": true, "passes": 9}
{"task_id": 557, "prompt": "Create a function that switches the case. It should alter the case for every character within a string.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Create a function that transforms a tuple into a string.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. In this task, you are provided with a list of tuples to work with. It is important to select only the smallest k records from the given tuples. In this case a verbatim copy of test cases", "pass@10": true, "passes": 8}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. You are tasked with determining how many integers can evenly divide the given integer. These divisors can be positive numbers, including 1 and the integer itself. Ensure your function handles both small and large integers efficiently.", "pass@10": true, "passes": 9}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Be sure to consider edge cases where the list might be empty or n might be a negative number. Ensure your solution is optimized for both time and space complexity.", "pass@10": true, "passes": 9}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2. Ensure that this power of 2 is greater than or equal to n.", "pass@10": true, "passes": 7}
{"task_id": 68, "prompt": "Create a Python function to determine if the given array is either entirely non-increasing or non-decreasing. Consider edge cases where the array might be empty or contain only one element, and determine how your function should handle these scenarios.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. This function should take a list and a tuple as inputs and perform an append operation.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Create a function to determine the result of 'a' raised to the 'b' power. Ensure that your solution handles large values efficiently.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": true, "passes": 2}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The nth Bell number is the number of ways to partition a set of n elements. It is a fundamental concept in combinatorics.", "pass@10": true, "passes": 7}
{"task_id": 736, "prompt": "Create a function to find the left insertion position for a given value in a sorted arrangement. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 172, "prompt": "Design a function to determine the frequency of the string 'std' within a specified string.", "pass@10": true, "passes": 8}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not. Check if the string's first character matches its last character, as this comparison will determine if the string has the same starting and ending character.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not. The length of the word should be measured to determine if it's an odd number.", "pass@10": false, "passes": 0}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. You need to handle strings that represent numbers. Ensure that the sorting reflects the numerical value rather than the lexicographical order of the strings.", "pass@10": true, "passes": 4}
{"task_id": 625, "prompt": "Create a Python function to swap the first and last item in a specified list. The specified list refers to any list that is passed to the function. It means a list provided as an argument when the function is called.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array. The reversal should only be performed up to a given position.", "pass@10": true, "passes": 2}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Additionally, ensure to consider edge cases where the array might be empty or contain only one element. Make sure your solution efficiently handles larger arrays to ensure optimal performance. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 2}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the distinct numbers in a specified list. Consider edge cases where the list may be empty or contain non-numeric elements.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. You need to ensure that the function processes each tuple individually. Make sure that the function correctly extracts the rear element from each tuple in the list.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that accepts an integer n and returns the sum of the squares of the first n odd natural numbers. Ensure that the function handles edge cases such as n being zero or negative numbers gracefully.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements using the URL https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/ for reference.", "pass@10": true, "passes": 8}
{"task_id": 8, "prompt": "Write a function to find squares. You must calculate the square for each of the individual elements present in the list. For each element in the list, determine its square. Calculate the square accurately for every element.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Create a function that appends the provided tuple to the specified list. Ensure the original list is modified in place and not a copy.", "pass@10": true, "passes": 7}
{"task_id": 90, "prompt": "Create a Python function to determine the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that shift the bits to the left by d positions in a given number. It is assumed that the number is 32 bit.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that your implementation handles both positive and negative integers in the list. Consider edge cases such as empty lists or lists containing only zeros.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical. These items have to be in the same position of three given lists. Ensure to handle lists of varying lengths appropriately.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Create a function to perform element-wise subtraction on two lists. Conduct the subtraction element by element.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. The provided amount should be evaluated thoroughly. It is essential to confirm that the amount indicates a breakeven status.", "pass@10": true, "passes": 4}
{"task_id": 309, "prompt": "Develop a Python function to find the greater of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Create a function that calculates the sum of characters present in a string.", "pass@10": true, "passes": 9}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Ensure to consider edge cases where the list might be empty or the length n is zero. The function should handle input validation by checking that n is a non-negative integer.", "pass@10": true, "passes": 2}
{"task_id": 257, "prompt": "Write a function that accepts two numbers as input and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find the minimum value among three numbers. It is necessary to compare each number individually. Doing so will allow you to determine which one is the smallest.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find and return the list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that finds the tuple with the lowest second value and returns its first element.", "pass@10": true, "passes": 10}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to carry out the bitwise xor calculation. This calculation should be applied on the provided tuples.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Create a Python function that receives a tuple and an element, and tallies how many times the element appears in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 635, "prompt": "Write a function to sort the given list, ensuring to handle both unique and duplicate elements correctly during the sorting process.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure that the function efficiently handles matrices of varying sizes. Test cases should include matrices with negative, positive, and zero values.", "pass@10": true, "passes": 4}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers; these numbers are in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates, ensuring the solution runs efficiently even for large tuples.", "pass@10": true, "passes": 6}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Ensure that your solution is optimized for speed and memory usage. This will help the function handle large values of n efficiently.", "pass@10": true, "passes": 10}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. Ensure your solution is optimized for performance. Remember to consider edge cases where n could be a negative number or zero.", "pass@10": true, "passes": 6}
{"task_id": 460, "prompt": "Write a python function to obtain the first element of each sublist. A sublist is a list that resides within another list, and your function should traverse through each sublist and extract the first item.", "pass@10": false, "passes": 0}
{"task_id": 762, "prompt": "Write a function to check whether the specified month number has 30 days or not. Months are given as number from 1 to 12. Ensure your function handles edge cases appropriately.", "pass@10": true, "passes": 6}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square, taking the side length as input to calculate it.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the Newman Conway sequence. The Newman Conway sequence is a mathematical sequence used to generate integer numbers following a specific pattern. Your task is to implement this function so that it accurately returns the nth term of the sequence. Ensure your implementation handles large values of n efficiently.", "pass@10": true, "passes": 3}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and calculates the sum of even index binomial coefficients. Make sure to optimize the function for better performance with large inputs.", "pass@10": true, "passes": 3}
{"task_id": 559, "prompt": "Write a function to compute the sum of the largest consecutive sublist in the provided list.", "pass@10": true, "passes": 5}
{"task_id": 475, "prompt": "Write a function to sort a dictionary. The function should sort the dictionary based on the value. It is important that the sorting is done by the value and not the key.", "pass@10": false, "passes": 0}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares. You need to determine if a particular number can be expressed as the result of subtracting one perfect square from another. This is an important calculation to be made in your function. Or not. Ensure your function is efficient and handles edge cases appropriately.", "pass@10": true, "passes": 1}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string. Make sure to consider both efficiency and correctness in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position or not. You need to determine if the two numbers differ at only one bit position. Ensure your function evaluates the given numbers accurately.", "pass@10": true, "passes": 7}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string. Remove only the characters which are present in the second string.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set. A set of Bell numbers needs to be partitioned.", "pass@10": true, "passes": 6}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not. Be sure to account for the possibility of nested lists when implementing your solution.", "pass@10": true, "passes": 7}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number. The centered hexagonal number is a centered figurate number. It represents a hexagon with a dot in the center and all other dots surrounding the center dot in successive hexagonal layers.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to verify if a string represents an integer. Check if the string can be successfully interpreted as a whole number without any fractions or decimals.", "pass@10": true, "passes": 9}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list. Ensure that the function handles both lists being empty correctly.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number. Ensure that your solution efficiently handles lists with a large number of integers.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Ensure your function efficiently handles strings of various lengths.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Develop a function to calculate square roots utilizing the Babylonian method.", "pass@10": true, "passes": 10}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list. Make sure to handle edge cases where the list may be empty or contain non-integer types.", "pass@10": true, "passes": 10}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Ensure the function handles cases where the list length is not a perfect multiple of n.", "pass@10": true, "passes": 9}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Ensure your implementation is efficient and handles large values of n effectively.", "pass@10": true, "passes": 10}
{"task_id": 273, "prompt": "Create a function that accepts two tuples and computes the difference between the elements of the first tuple and those of the second tuple at the corresponding indices.", "pass@10": true, "passes": 10}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number. The decagonal number is a figurate number that represents a decagon. It is part of a sequence that starts with 1.", "pass@10": false, "passes": 0}
{"task_id": 281, "prompt": "Construct a Python function to determine whether all items in a specified list are unique.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers. Consider optimizing the solution for large values of n to ensure efficiency.", "pass@10": true, "passes": 4}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given list. The list is heterogeneous. It may contain elements of different data types.", "pass@10": true, "passes": 9}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. A tuple consists of multiple elements. These elements need to be considered for aggregation.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the leftmost bit that is not set.", "pass@10": true, "passes": 4}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n. Ensure the solution is efficient, considering both time and space complexity.", "pass@10": true, "passes": 10}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number. The Lucas numbers are related to the Fibonacci sequences. They start with 2 and 1 and each subsequent number is the sum of the two preceding numbers.", "pass@10": true, "passes": 1}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. The format string should be used as a template or pattern for formatting each element in the list. This means that each element will be converted into the specified format according to the format string provided.", "pass@10": true, "passes": 4}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure that your solution efficiently handles floating-point and integer inputs.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers. Ensure your function handles both positive and negative inputs gracefully.", "pass@10": true, "passes": 9}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Ensure that the function handles edge cases such as arrays with less than two elements gracefully.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort. Shell sort is an optimization over the simpler insertion sort. It works by comparing elements that are distant from each other. As the algorithm runs, the gap between elements decreases. Eventually, it reduces to a standard insertion sort.", "pass@10": true, "passes": 10}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium. Assume that all given lengths are positive numbers.", "pass@10": true, "passes": 5}
{"task_id": 450, "prompt": "Write a function to obtain specified length of strings from a provided list of string values.", "pass@10": true, "passes": 6}
{"task_id": 465, "prompt": "Write a function to drop empty items. The function should be able to identify items that are either None, an empty string, an empty list, or similar representations of \"empty\". The function must remove these items from a given dictionary.", "pass@10": true, "passes": 9}
{"task_id": 470, "prompt": "Write a function to find the sum of adjacent elements in the provided tuple.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to determine if the provided list includes numbers that are sequential or not.", "pass@10": true, "passes": 2}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Ensure the function efficiently handles edge cases such as empty strings or non-alphabetic characters.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Consider edge cases when the number is zero or negative and ensure the function handles these appropriately.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to substitute spaces with underscores and vice versa in a given string.", "pass@10": true, "passes": 1}
{"task_id": 721, "prompt": "Given a square matrix of dimensions N*N provided as a list of lists, where each cell has a certain cost associated with it. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 6}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The function gets as input a list of numbers and the sum.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. Ensure that the function handles punctuation correctly and maintains sentence structure.", "pass@10": false, "passes": 0}
{"task_id": 792, "prompt": "Write a python function to count the number of lists. This count should be specifically focused on a given number of lists.", "pass@10": true, "passes": 5}
{"task_id": 565, "prompt": "Write a python function to split a string into characters. Make sure to handle special characters and spaces properly.", "pass@10": false, "passes": 0}
{"task_id": 566, "prompt": "Create a function that calculates the total of the digits of a non-negative whole number.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list. The list should contain N empty dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. Ensure that your solution is optimized for large input values.", "pass@10": false, "passes": 0}
{"task_id": 578, "prompt": "Create a function that merges three lists of equal length into one continuous list.", "pass@10": true, "passes": 10}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number. Please ensure your solution is optimized for efficiency and handles input validation where necessary.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Ensure that your solution efficiently handles larger datasets.", "pass@10": true, "passes": 6}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Refer to this link for further understanding: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/. Make sure to handle edge cases such as an empty array or a single-element array.", "pass@10": true, "passes": 9}
{"task_id": 100, "prompt": "Create a function that locates the subsequent smallest palindrome of a given integer, and returns it as an integer. Make sure to handle edge cases such as when the integer consists of all 9s or is a single-digit number.", "pass@10": true, "passes": 1}
{"task_id": 20, "prompt": "Create a function to ascertain if the given numeral is a woodball.", "pass@10": true, "passes": 1}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number. The Lucas numbers have a connection to the Fibonacci sequences. They start with 2 and 1 and each subsequent number is the sum of the two preceding numbers.", "pass@10": false, "passes": 0}
{"task_id": 720, "prompt": "Create a function that appends a dictionary to the tuple. You need to ensure that the dictionary is added to the end of the tuple. The output should be a tuple. Consider edge cases where the tuple might be empty or contain various data types.", "pass@10": true, "passes": 5}
{"task_id": 782, "prompt": "Create a Python function to calculate the total of all subarrays with odd length. Furthermore, be sure to handle special cases where the array is empty or consists of a single element. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. The function should take into account the structure of the matrix. It can access the n'th column to find the maximum value. Ensure that the function handles edge cases such as empty matrices or columns gracefully.", "pass@10": true, "passes": 8}
{"task_id": 459, "prompt": "Design a function to eliminate sequences of uppercase letters from a provided string. Ensure that the remaining characters in the string are preserved in their original order.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to determine the subsequent smallest palindrome of a given integer, returned as an integer. Ensure your function efficiently handles integers of various lengths, including very large input values.", "pass@10": true, "passes": 6}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Ensure that the sorting reflects the numerical value rather than the lexicographical order of the strings, handling strings that represent numbers.", "pass@10": true, "passes": 8}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure that the function efficiently handles matrices of varying sizes. The function should be designed to process matrices of different dimensions smoothly and efficiently. It should be capable of sorting small as well as large matrices without performance issues. Test cases should include matrices with negative, positive, and zero values.", "pass@10": true, "passes": 6}
{"task_id": 733, "prompt": "Write a function to locate the position of the initial appearance of a specified number in a sorted array. Make sure that the solution you provide is efficient. It should have a time complexity better than O(n).", "pass@10": true, "passes": 5}
{"task_id": 239, "prompt": "Write a function that receives positive integers m and n. Your task is to find the number of possible sequences of length n, where each element is a positive integer. Each element in the sequence should be greater than or equal to double the preceding element and less than or equal to m.", "pass@10": false, "passes": 0}
{"task_id": 792, "prompt": "Write a python function to count the number of lists. This tally should be specifically focused on a specified number of lists.", "pass@10": true, "passes": 6}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. The provided amount should be evaluated thoroughly to confirm that the amount indicates a breakeven status.", "pass@10": true, "passes": 7}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Make sure to consider lists with repeating elements and nested sublists. Ensure your solution handles edge cases such as empty sublists and varying levels of nesting effectively.", "pass@10": true, "passes": 1}
{"task_id": 739, "prompt": "Write a python function to find the position of the smallest triangular number having n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Ensure that your solution is optimized for performance.", "pass@10": true, "passes": 5}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this instance, an exact reproduction of the test cases.", "pass@10": true, "passes": 10}
{"task_id": 260, "prompt": "Develop a function to identify the nth newman\u2013shanks\u2013williams prime number. Ensure your solution is optimized for performance. Take into account exceptional cases where n could be a negative number or zero.", "pass@10": false, "passes": 0}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. The format string should serve as a template or pattern for formatting each element in the list. This means that each element will be changed into the specified format according to the format string provided.", "pass@10": true, "passes": 9}
{"task_id": 559, "prompt": "Write a function to calculate the sum of the largest contiguous sublist in the provided list. Ensure that the function handles both positive and negative integers efficiently.", "pass@10": true, "passes": 9}
{"task_id": 750, "prompt": "Create a function that appends the provided tuple to the specified list. Make sure the list that originally exists is changed in place. It should not result in a copy being modified.", "pass@10": true, "passes": 2}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence, given the condition that at most 2 adjacent posts can have the same color. You need to find the solution for the given fence with n posts and k colors, and consider edge cases where either n or k is zero and explain how the function should handle them.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set. A set of Bell numbers needs to be partitioned. Consider optimizing the function for large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Ensure that your solution efficiently handles larger datasets. Consider edge cases such as datasets with duplicate values or fewer items than the specified n.", "pass@10": true, "passes": 4}
{"task_id": 448, "prompt": "Create a function to compute the total of Perrin numbers.", "pass@10": true, "passes": 5}
{"task_id": 472, "prompt": "Write a python function to determine if the provided list includes numbers that are sequential or not. Ensure that your function handles edge cases like empty lists and lists with a single element effectively.", "pass@10": true, "passes": 2}
{"task_id": 11, "prompt": "Create a Python function to delete the initial and final occurrence of a specified character from the string.", "pass@10": true, "passes": 5}
{"task_id": 762, "prompt": "Write a function to check if the given month number has 30 days or not. Months are given as number from 1 to 12. Ensure your function handles edge cases appropriately.", "pass@10": true, "passes": 6}
{"task_id": 394, "prompt": "Create a function to determine if the provided tuple has no duplicate elements, ensuring the solution is effective even for large tuples.", "pass@10": true, "passes": 9}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. You are tasked with determining how many positive integers, including 1 and the integer itself, can evenly divide the given integer. Ensure your function handles both small and large integers efficiently.", "pass@10": true, "passes": 2}
{"task_id": 764, "prompt": "Write a python function. The function ought to be capable of counting the quantity of digits. It should be able to identify how many digits exist inside a provided string.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary. Use adjacent elements using the URL https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/ for reference.", "pass@10": true, "passes": 2}
{"task_id": 240, "prompt": "Write a function that takes in two lists. The function should replace the last element of the first list with the elements of the second list. Ensure that the function handles empty lists appropriately to avoid errors.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. The function should efficiently handle large ranges by optimizing for both time and space complexity and return a list of perfect squares within the specified interval.", "pass@10": true, "passes": 6}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Be sure to consider edge cases where the list might be empty or n might be a negative number and ensure your solution is optimized for both time and space complexity.", "pass@10": true, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. An array is a data structure that contains several items, usually sharing the same data type, organized sequentially. In this problem, you are required to calculate the total sum of all the elements present in the array.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array up to a given position. Ensure your function takes into account edge cases such as an empty array or a position that's out of bounds. Your solution should also handle arrays with duplicate values correctly.", "pass@10": true, "passes": 1}
{"task_id": 745, "prompt": "Write a function to identify numbers in a specified range from startnum to endnum such that each number is divisible by all its constituent digits. Consider edge cases where digits may include '0', which cannot be a divisor. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. The divisors of an integer are values that divide the number exactly without leaving a remainder, and you need to check if these sums match for both integers.", "pass@10": false, "passes": 0}
{"task_id": 311, "prompt": "Write a python function to set the leftmost bit that is not set.", "pass@10": true, "passes": 2}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezoid.", "pass@10": true, "passes": 1}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The nth Bell number is a fundamental concept in combinatorics as it represents the number of ways to partition a set of n elements.", "pass@10": false, "passes": 0}
{"task_id": 625, "prompt": "Create a Python function to swap the first and last item in a specified list. The specified list refers to any list that is passed to the function, provided as an argument when the function is called.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Create a function that switches the case. It should change uppercase letters to lowercase. It should also change lowercase letters to uppercase for every character within a string.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not. Check if the string's first character matches its last character, as this comparison will determine if the string has the same starting and ending character. Consider edge cases where the string might be empty or consist of a single character.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Create a function to determine the position to insert a given value to the left in a sorted arrangement. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 2}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 3}
{"task_id": 267, "prompt": "Write a python function that accepts an integer n and returns the sum of the squares of the first n odd natural numbers. Make sure your code can handle the situation where n equals zero. Additionally, ensure that the function handles edge cases such as n being zero or negative numbers gracefully.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the least exponent of 2. Ensure that this power of 2 is greater than or equal to n.", "pass@10": true, "passes": 8}
{"task_id": 242, "prompt": "Write a function that will be used to count the total number of characters in a string. This function should carefully analyze each character in the given string input.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Develop a function that computes the outcome when 'a' is elevated to the power of 'b'. Ensure that your solution manages large values in an efficient manner.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples, which should take a list and a tuple as inputs and perform an append operation.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Create a function to perform element-wise subtraction on two lists. Conduct the subtraction. Perform it element by element.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares. You must calculate the square for each of the individual elements present in the list. For each element in the list, determine its square. Calculate the square accurately for every element. Ensure your function handles edge cases appropriately, such as empty lists or non-numeric elements.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to identify the nearest smaller number than n. You are supposed to find the nearest number that is smaller than the given number n. The function should return this nearest smaller number.", "pass@10": true, "passes": 7}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not. You need to ensure that every dictionary within the list is checked individually. Only if each dictionary is empty should the function return True.", "pass@10": false, "passes": 0}
{"task_id": 142, "prompt": "Write a function to count number items that are identical. These items have to be in the same position of three given lists. Ensure to handle lists of varying lengths appropriately. Consider edge cases where one or more lists could be empty.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that shift the bits to the left by d positions in a specified integer. It is assumed that the number is 32 bit.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to determine the nth number in the Newman-Conway sequence. The function should calculate the sequence and return the specific term at the nth position.", "pass@10": false, "passes": 0}
{"task_id": 294, "prompt": "Create a function to determine the maximum value in a specified list. The list is heterogeneous. It may contain elements of different data types.", "pass@10": true, "passes": 1}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples. Ensure the function handles cases where the tuple may not have an nth element by returning None in such scenarios.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Design a Python function to find the length of the longest word.", "pass@10": true, "passes": 6}
{"task_id": 94, "prompt": "Given a list of tuples, craft a function that locates the tuple possessing the minimal second value and returns its first element.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Create a Python function that takes in a tuple and an element, and determines the frequency of the element within the tuple.", "pass@10": true, "passes": 9}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that your implementation handles both positive and negative integers in the list. Consider edge cases such as empty lists or lists containing only zeros. Make sure your solution efficiently handles very large lists of integers.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find the minimum value among three numbers. It is necessary to compare each number individually. It is important to assess each number on its own. This process will help determine the smallest number. Doing so will allow you to determine which one is the smallest.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples. Ensure that the function efficiently handles large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find and return the list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list. Ensure that the function handles both lists being empty correctly.", "pass@10": true, "passes": 10}
{"task_id": 447, "prompt": "Write a function to identify the cubes of separate items within a list.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Develop a Python function to find the greater of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Make sure to handle edge cases where the list might be empty. Also, consider cases where the length n is zero. The function should handle input validation by checking that n is a non-negative integer.", "pass@10": true, "passes": 9}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Make sure to handle cases where the list has fewer than two items appropriately. Consider edge cases where the list may contain repeated or non-integer items.", "pass@10": true, "passes": 3}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers. You need to determine which of the two numbers is smaller. Then, you should return that smaller number as the result.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Create a function that locates the subsequent smallest palindrome of a given integer, and returns it as an integer. It is essential to handle edge cases such as when the integer consists of all 9s. Additionally, consider the case when the integer is a single-digit number.", "pass@10": true, "passes": 1}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string. Make sure to consider both efficiency and correctness in your implementation. You should also account for edge cases such as an empty string or a string with no repeating characters.", "pass@10": true, "passes": 6}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square, taking the side length as input to calculate it. Ensure the function handles edge cases, such as negative or zero values, appropriately.", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates. You need to process a given list and eliminate any repeated items that appear consecutively.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Make sure your implementation handles matrices with different numbers of rows effectively. Your function should also handle cases where the given column index is out of the matrix's bounds gracefully.", "pass@10": true, "passes": 5}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple results from multiplying t_i by t_{i+1}. Ensure that the function handles cases where the tuple is empty or contains only a single element appropriately.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer by determining how many positive integers, including 1 and the integer itself, can evenly divide the given integer. Ensure your function handles both small and large integers efficiently.", "pass@10": true, "passes": 5}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Consider edge cases when the number is zero. Also, consider edge cases when the number is negative and ensure the function handles these appropriately.", "pass@10": true, "passes": 10}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists. Modify your function to handle cases where the list contains only unique elements. If the list contains unique elements only, then each element should be placed into its own individual sublist. In such a situation, each element should be placed into its own individual sublist.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Ensure that the function can identify and record the location of all instances of each substring. Return None if there is no match.", "pass@10": true, "passes": 7}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. A triangular prism is a three-dimensional shape with two parallel triangular bases and three rectangular faces. You can calculate its volume using the formula: Volume = 0.5 * base * height * length. Base and height refer to the dimensions of the triangular base. Length refers to the distance between the two triangular bases.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number and ensure that your solution efficiently handles lists with a large number of integers.", "pass@10": true, "passes": 8}
{"task_id": 65, "prompt": "Create a function to flatten a list and compute the sum of all its elements.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length. Ensure the tuples are of equal length before proceeding with the element wise operation, and performs the element wise modulo. Ensure to handle any potential division by zero errors gracefully.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Write a function to calculate how often each element appears in a list, returned as a dictionary. Make sure to handle empty lists by returning an empty dictionary.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Compose a function to turn a specified nested list framework into a flat one.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to verify if a string represents an integer by checking if the string can be successfully interpreted as a whole number without any fractions or decimals.", "pass@10": false, "passes": 0}
{"task_id": 782, "prompt": "Write a python function to calculate the sum of all subarrays with odd lengths. Additionally, ensure to consider edge cases where the array might be empty or contain only one element. Make sure your solution efficiently handles larger arrays to ensure optimal performance. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 405, "prompt": "Write a function to check whether an element is present within a tuple. To do this, examine each item in the tuple to see if it corresponds to the given value.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n. Ensure that the function returns a new dictionary with the filtered entries. The original dictionary should remain unchanged after the function is executed.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Create a function to calculate the nonagonal number corresponding to a specified n. Ensure that your function handles large values of n efficiently.", "pass@10": true, "passes": 5}
{"task_id": 273, "prompt": "Create a function that accepts two tuples. The function then computes the difference between the elements of the first tuple and those of the second tuple at the corresponding indices.", "pass@10": true, "passes": 1}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Ensure your function handles lists of varying lengths, including edge cases with empty lists and single-element lists.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Ensure that the function handles edge cases such as arrays with less than two elements gracefully. The function should also efficiently manage arrays containing both positive and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Develop a function to invert each string within a provided list of string elements. Ensure that your solution is optimized for performance and handles edge cases such as empty strings or a list with no elements.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Create a function that merges three lists of equal length into one continuous list. Ensure that the merged list retains the order of elements from the original lists.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method. Ensure that your function handles edge cases such as zero and negative inputs appropriately.", "pass@10": true, "passes": 1}
{"task_id": 246, "prompt": "Craft a function to calculate square roots utilizing the Babylonian method.", "pass@10": true, "passes": 9}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Consider edge cases and optimize for efficiency in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 583, "prompt": "Create a function that yields the nth Catalan number. Please ensure your solution is optimized for efficiency and handles input validation where necessary.", "pass@10": true, "passes": 10}
{"task_id": 754, "prompt": "An element is referred to as common for lists l1, l2, l3 if it exists at the same position in all three lists, so write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Ensure the function achieves this with optimal time complexity. Consider edge cases like empty lists and lists with identical elements when writing the function.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n, ensuring the solution is efficient, considering both time and space complexity.", "pass@10": true, "passes": 7}
{"task_id": 618, "prompt": "Write a function to divide two lists. This must be performed on an element-by-element basis.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to replace spaces with underscores and the other way around in a given string.", "pass@10": true, "passes": 6}
{"task_id": 141, "prompt": "Write a function to organize a list of elements. Make sure your solution handles both ascending and descending order sorting.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to identify the specified number of biggest products from two given lists, selecting one factor from each list. Ensure that the function returns the products in descending order of magnitude.", "pass@10": true, "passes": 4}
{"task_id": 556, "prompt": "Design a Python function to count the pairs that result in an odd XOR value.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list, ensuring the function handles cases where the list or string is empty, returning an appropriate tuple.", "pass@10": true, "passes": 8}
{"task_id": 721, "prompt": "Given a square matrix of dimensions N*N provided as a list of lists, where each cell has a certain cost associated with it. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path. Assume that all paths have at least one cell in them.", "pass@10": true, "passes": 2}
{"task_id": 135, "prompt": "Create a function to calculate the nth hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Create a Python function to determine the size of the list that is the shortest within a collection of lists. The function must be able to compare multiple lists and calculate the size of the smallest one.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string. Consider edge cases such as strings of length zero or one. Remember to optimize your code for performance when dealing with longer strings.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. The function should properly handle edge cases and efficiently manipulate bits using bitwise operators. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 4}
{"task_id": 477, "prompt": "Create a Python function that transforms the provided string into lowercase. Ensure that the function efficiently handles strings of varying lengths and returns the correct result for all possible input cases.", "pass@10": true, "passes": 8}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string, ensuring the function handles both spaces and tabs effectively.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements. You need to perform this operation in the given two nested tuples. Ensure the function handles tuples of unequal length by truncating to the length of the shorter tuple.", "pass@10": true, "passes": 8}
{"task_id": 760, "prompt": "Write a python function to determine if there is only a single unique element in a list of numbers or not.", "pass@10": true, "passes": 1}
{"task_id": 569, "prompt": "Develop a function that arranges each nested list of strings by putting them in order in an existing list of lists.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary. Use adjacent elements using the URL https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/ for reference. Ensure that the tuple has an even number of elements to facilitate correct key-value pairing.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list. Be sure to consider edge cases such as when the list is empty. Also, consider the case when the list contains only one element.", "pass@10": false, "passes": 0}
{"task_id": 459, "prompt": "Design a function to eliminate sequences of uppercase letters from a provided string. Make sure that the sequences of uppercase letters are completely removed. Ensure that the remaining characters in the string are preserved in their original order.", "pass@10": true, "passes": 6}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. Make sure to consider edge cases and optimize for performance where possible. Ensure your solution can handle numbers up to 10^9 efficiently.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Design a function that identifies the position to insert a given value to the left in a sorted arrangement. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 2}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Ensure that cases where the list has fewer than two items and where the list may contain repeated or non-integer items are handled appropriately.", "pass@10": true, "passes": 2}
{"task_id": 391, "prompt": "Write a function to convert more than one list into a nested dictionary. The function should take in multiple lists as input. Each list will represent a level in the nested dictionary. The last list will contain values corresponding to the keys from the previous list. Ensure that the function handles cases where lists of different lengths are provided.", "pass@10": true, "passes": 1}
{"task_id": 750, "prompt": "Create a function that appends the provided tuple to the specified list. Ensure the original list is modified. Make sure it is modified in place and not a copy.", "pass@10": true, "passes": 2}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not. Ensure that your function handles both positive and negative zero scenarios correctly.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 9}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer. Ensure that your solution efficiently handles tuples of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a square where all rows, columns, and diagonals sum to the same value. The matrix should have the property that all of its rows and columns add up to the same number.", "pass@10": true, "passes": 7}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number. You need to do this in a given list.", "pass@10": true, "passes": 9}
{"task_id": 170, "prompt": "Create a function that calculates the total of numbers in an array between two given indices.", "pass@10": true, "passes": 8}
{"task_id": 222, "prompt": "Craft a function to determine if all components within a tuple possess the identical data type or not.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the quantity of set bits in a binary number. Set bits are binary digits with the value 1.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number. It should process this input correctly. The function returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 5}
{"task_id": 421, "prompt": "Create a function that joins each element of a tuple using the specified delimiter.", "pass@10": true, "passes": 5}
{"task_id": 442, "prompt": "Create a function to determine the ratio of positive integers within an array of numbers.", "pass@10": true, "passes": 1}
{"task_id": 478, "prompt": "Write a function to remove substrings that are lowercase from a given string. These substrings consist of contiguous lowercase letters.", "pass@10": true, "passes": 7}
{"task_id": 604, "prompt": "Create a function that reverses words within a string, separated by spaces.", "pass@10": true, "passes": 9}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure your function handles lists of different lengths by returning an appropriate error message or performing a suitable operation.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences. Consider handling edge cases, such as empty sublists, appropriately.", "pass@10": true, "passes": 10}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. You should determine whether the number can be expressed as the square of an integer. It involves checking if there exists an integer whose square matches the given number. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 9}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. Make sure your solution efficiently handles tuples of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 576, "prompt": "Write a python function to check whether a list is sublist of another or not. Make sure to handle edge cases where one or both lists are empty.", "pass@10": true, "passes": 5}
{"task_id": 587, "prompt": "Write a function to transform a list into a tuple.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings. These strings contain numbers. Sort the list numerically.", "pass@10": true, "passes": 7}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": true, "passes": 7}
{"task_id": 611, "prompt": "Create a function that, when provided with a matrix depicted as a list of lists, returns the highest value of the n'th column. Make sure your implementation handles matrices with different numbers of rows effectively. Your function should also handle cases where the given column index is out of the matrix's bounds gracefully.", "pass@10": false, "passes": 0}
{"task_id": 300, "prompt": "Write a function to determine the number of binary sequences of length 2n where the sum of the first n bits equals the sum of the last n bits.", "pass@10": false, "passes": 0}
{"task_id": 11, "prompt": "Create a Python function to delete the initial occurrence of a specified character from the string. Make sure this applies to the very first appearance of the specified character within the string. Additionally, delete the final occurrence of the specified character from the string.", "pass@10": true, "passes": 6}
{"task_id": 308, "prompt": "Write a function to identify the specified number of biggest products from two given lists, selecting one factor from each list. A factor from the first list should be paired with a factor from the second list. Ensure that the function returns the products in descending order of magnitude.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to locate the position of the initial appearance of a specified number in a sorted array. Make sure that the solution you provide is efficient. It should have a time complexity better than O(n). Consider edge cases such as empty arrays or arrays without the specified number.", "pass@10": true, "passes": 4}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. Here is the URL of the resource you may visit for the coding challenge: https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/. This is an instance where an exact reproduction of the test cases is required.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. The format string should serve as a template or pattern. It is used for formatting each element in the list. This means that each element will be changed into the specified format according to the format string provided.", "pass@10": true, "passes": 6}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. The provided amount should be evaluated thoroughly. It must be analyzed in detail to confirm that the amount indicates a breakeven status.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Create a function that joins each element of a tuple using the specified delimiter. Ensure that your solution handles cases with different data types within the tuple efficiently.", "pass@10": true, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Ensure that your function handles edge cases. Such edge cases occur when all RGB components are zero. The function should also be optimized for performance with large datasets.", "pass@10": true, "passes": 2}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence. The condition is that at most 2 adjacent posts can have the same color. You need to find the solution for the given fence with n posts and k colors. Consider optimizing the solution for large values of n to ensure efficiency.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. The function should efficiently handle large ranges by optimizing for both time and space complexity and return a list of perfect squares within the specified interval. Ensure that the resulting list maintains the correct order of perfect squares from smallest to largest.", "pass@10": true, "passes": 5}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set. Optimize the function for large input sizes when partitioning a set of Bell numbers.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. Consider edge cases where the list could be empty or contain only negative numbers.", "pass@10": false, "passes": 0}
{"task_id": 472, "prompt": "Write a python function to determine if the provided list includes numbers that are sequential or not. Ensure that your function handles edge cases like empty lists and lists with a single element effectively. Test the function with lists containing negative numbers and zero to confirm accuracy.", "pass@10": true, "passes": 5}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. You need to identify the position of the specific element within the tuple. Once identified, count the elements that come before it.", "pass@10": false, "passes": 0}
{"task_id": 394, "prompt": "Create a function to determine if the provided tuple has no duplicate elements, ensuring the solution is effective even for large tuples. When testing your function, consider edge cases such as empty tuples and those with very large numbers of elements.", "pass@10": true, "passes": 8}
{"task_id": 764, "prompt": "Write a python function. The function ought to be capable of counting the quantity of digits inside a provided string.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Develop a function to calculate square roots. Use the Babylonian method for this calculation.", "pass@10": true, "passes": 8}
{"task_id": 100, "prompt": "Write a function to determine the subsequent smallest palindrome of a given integer, returned as an integer. Ensure your function efficiently handles integers of various lengths, including very large input values. Consider edge cases and optimize for performance.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Design a Python function to find the length of the longest word. Ensure that your function handles different types of input, including empty strings and strings with multiple spaces.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists. The function should replace the last element of the first list with the elements of the second list. The second list may contain multiple elements, and all these elements should be added to the first list. Ensure that the function handles empty lists appropriately to avoid errors.", "pass@10": true, "passes": 7}
{"task_id": 459, "prompt": "Design a function to eliminate sequences of uppercase letters from a provided string. Make sure that the sequences of uppercase letters are completely removed. It is important that these sequences are entirely deleted without leaving any trace behind. There should be no uppercase letters remaining at all after this exclusion. Ensure that the remaining characters in the string are preserved in their original order.", "pass@10": true, "passes": 3}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string. Make sure to consider both efficiency and correctness in your implementation. You should also account for edge cases such as an empty string or a string with no repeating characters. Test your function with a variety of test cases to ensure robustness.", "pass@10": true, "passes": 9}
{"task_id": 745, "prompt": "Develop a function to find numbers within a defined range from startnum to endnum such that each number can be divided by each of the digits that make it up. Consider edge cases where digits may include '0', which cannot be a divisor. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 5}
{"task_id": 750, "prompt": "Create a function that appends the provided tuple to the specified list. Make sure the list that originally exists is changed. The modification should occur in place. It should not result in a copy being modified.", "pass@10": false, "passes": 0}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length. Make sure the function manages edge cases where the side length could be zero or negative, returning an appropriate response or error. Think about optimizing the function for performance when handling extremely large inputs.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Be sure to consider edge cases. There may be situations where the list might be empty or n might be a negative number. Ensure your solution is optimized for both time and space complexity.", "pass@10": true, "passes": 5}
{"task_id": 74, "prompt": "Create a function to determine if it adheres to the order specified in the patterns array.", "pass@10": false, "passes": 0}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array. Ensure your implementation efficiently handles arrays with large numbers of elements. Consider edge cases such as empty arrays or arrays with a single element.", "pass@10": true, "passes": 6}
{"task_id": 267, "prompt": "Write a python function that accepts an integer n and returns the sum of the squares of the first n odd natural numbers. Make sure your code can handle the situation where n equals zero. Additionally, ensure that the function handles edge cases such as n being zero or negative numbers gracefully. Consider using a loop or a list comprehension to efficiently calculate the sum of squares.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to determine if the matrix is a square with the characteristic that each row, column, and diagonal sum to the same value. The matrix should have the property that all of its rows and columns add up to the same number.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Develop a function that computes the outcome when 'a' is elevated to the power of 'b'. Make sure to implement the function in such a way that it can handle very large values. Ensure that your solution manages large values in an efficient manner.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. Ensure your solution handles edge cases appropriately, such as negative numbers or zero.", "pass@10": true, "passes": 9}
{"task_id": 721, "prompt": "Given a square matrix of dimensions N*N provided as a list of lists, with each cell having a certain cost associated with it. A path is defined as a specific sequence of cells that initiates from the top-left cell, moves only right or down, and concludes on the bottom-right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path. Assume that all paths contain at least one cell.", "pass@10": true, "passes": 3}
{"task_id": 625, "prompt": "Create a Python function to exchange the leading and trailing item in a given list. The specified list refers to any list that is passed to the function, provided as an argument when the function is called.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Create a function to calculate the nonagonal number corresponding to a specified n, and ensure that your function handles large values of n efficiently.", "pass@10": true, "passes": 9}
{"task_id": 760, "prompt": "Write a python function to determine if there is only a single unique element present in a list of numbers or not. Check whether the list contains just one unique number. Or determine if there are multiple distinct values.", "pass@10": false, "passes": 0}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples, ensuring the function handles cases where the tuple may not have an nth element by returning None in such scenarios.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to determine the smallest power of 2. Ensure that this power of 2 is greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Create a function that transforms a tuple into a string. Ensure that the function handles tuples of various data types seamlessly.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer by determining how many positive integers, including 1 and the integer itself, can evenly divide the given integer, and ensure your function handles both small and large integers efficiently.", "pass@10": false, "passes": 0}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that your implementation deals with both positive and negative integers in the list. Consider edge cases such as empty lists or lists containing only zeros. Make sure your solution efficiently handles very large lists of integers.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Create a function that returns a list comprising all pairs of successive elements in a provided list. Ensure that cases where the list has fewer than two items and where the list may contain repeated or non-integer items are handled appropriately.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that shift the bits to the left by d positions in a specified integer. It is assumed that the number is 32 bit. The number is represented using a 32-bit binary format. This means there are 32 binary digits in this representation.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Design a python function to determine the largest power of 2 that is less than or equal to n, ensuring the solution is efficient, considering both time and space complexity.", "pass@10": false, "passes": 0}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Ensure that the function can identify and record the location of all instances of each substring. Return None if there is no match. The function should be efficient and handle large inputs gracefully.", "pass@10": false, "passes": 0}
{"task_id": 391, "prompt": "Craft a function that transforms multiple lists into a nested dictionary. The function should take in multiple lists as input. Each list will represent a level in the nested dictionary. The last list will contain values corresponding to the keys from the previous list. Make sure the function deals with cases where lists of varying lengths are given.", "pass@10": false, "passes": 0}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. A triangular prism is a three-dimensional shape with two parallel triangular bases and three rectangular faces. You can calculate its volume using the formula: Volume = 0.5 * base * height * length. Base and height refer to the dimensions of the triangular base. Length refers to the distance between the two triangular bases. Ensure to handle cases where any of the dimensions provided are non-positive gracefully.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Create a function to perform element-wise subtraction on two lists. Conduct the subtraction. You should carry out the subtraction operation. Perform it element by element.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical. These items have to be in the same position of three given lists. Ensure to handle lists of varying lengths appropriately. Consider edge cases where one or more lists could be empty. Maintain efficiency for large lists with minimal computational complexity.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to determine the maximum length among sublists. Ensure to handle edge cases where the input list may be empty or contain non-list elements.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings. These strings contain numbers. Sort the list numerically. Ensure that the sorting maintains numerical order based on the integer values represented by the strings.", "pass@10": false, "passes": 0}
{"task_id": 161, "prompt": "Create a function to delete all items from a provided list that are found in another list. Ensure that the function handles both lists being empty correctly.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements. You need to perform this operation in the given two nested tuples. Ensure the function handles tuples of unequal length by truncating to the length of the shorter tuple. Consider edge cases where one or both tuples are empty.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. The format string should serve as a template or pattern. It is used for formatting each element in the list. This means that each element will be changed into the specified format according to the format string provided. Ensure that the function handles different data types gracefully while applying the format.", "pass@10": true, "passes": 7}
{"task_id": 447, "prompt": "Create a function that finds the cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Create a Python function to ascertain if the provided array is entirely non-increasing or non-decreasing. Consider edge cases where the array might be empty or contain only one element, and determine how your function should handle these scenarios.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Develop a function to invert each string within a provided list of string elements. Ensure that your solution is optimized for performance and handles edge cases such as empty strings or a list with no elements. Consider implementing error handling for non-string elements in the list to enhance robustness.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that determines how many pairs of integers in a list xor to an even number and ensure that your solution efficiently handles lists with a large number of integers.", "pass@10": true, "passes": 3}
{"task_id": 736, "prompt": "Design a function that identifies the position to insert a given value. This insertion should be done to the left in a sorted arrangement. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 1}
{"task_id": 227, "prompt": "Write a function to find the minimum value among three numbers. It is necessary to compare each number individually, and it is important to assess each number on its own. This process will help determine the smallest number. Doing so will allow you to determine which one is the smallest.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Consider edge cases when the number is zero. You should think about how the function should handle this case. Also, consider edge cases when the number is negative and ensure the function handles these appropriately.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Construct a function that determines the frequency of occurrence for each item in a list, with results presented as a dictionary. Ensure to account for empty lists by returning an empty dictionary.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that gives back the perimeter of a square for a provided side length.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Create a Python function to determine the larger of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string, ensuring the function handles both spaces and tabs effectively.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Create a function to flatten a list. This function should take a nested list and transform it into a single, flat list. Then compute the sum of all its elements.", "pass@10": true, "passes": 4}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists. Modify your function to handle cases where the list contains only unique elements; in such a situation, each element should be placed into its own individual sublist.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to compute the multiplication of the distinct numbers in a provided list. Consider edge cases where the list may be empty or contain non-numeric elements.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not. Be sure to consider the situation where lists are contained within other lists. This possibility of nested lists should be taken into account when implementing your solution.", "pass@10": true, "passes": 8}
{"task_id": 297, "prompt": "Compose a function to turn a specified nested list framework into a flat one. Ensure your solution handles lists of varying depths efficiently.", "pass@10": true, "passes": 9}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Consider edge cases such as an empty list or a list with a single element in your solution.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple results from multiplying t_i by t_{i+1}. Ensure the function handles cases where the tuple is empty or contains only a single element appropriately.", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to find the position of the smallest triangular number having n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Ensure that your solution is optimized for performance. Remember to include meaningful comments in your code to enhance readability and understanding.", "pass@10": true, "passes": 1}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Ensure your implementation handles a variety of data types gracefully and is robust against potential edge cases.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that accepts a dictionary and an integer n, and filters the dictionary to only include entries with values greater than or equal to n. Make sure that the function returns a new dictionary with the filtered entries. The original dictionary should remain unchanged after the function is executed.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element is present within a tuple. To accomplish this, look at each element in the tuple to determine if it matches the provided value.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Design a Python function to count the pairs that result in an odd XOR value. Your task is to find all pairs of numbers such that their XOR operation results in an odd number. An XOR operation between two numbers is odd if and only if one of them is even and the other is odd.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists. This must be executed individually for each corresponding item. It has to be performed on an element-by-element basis.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Create a function that inverts words within a string, separated by spaces.", "pass@10": true, "passes": 3}
{"task_id": 583, "prompt": "Create a function that yields the nth Catalan number. Please ensure your solution is optimized for efficiency and handles input validation where necessary. Remember to include detailed comments in your code for clarity.", "pass@10": true, "passes": 7}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Ensure the function achieves this with optimal time complexity. Consider edge cases like empty lists and lists with identical elements when writing the function. Additionally, document the algorithm used for sorting and justify its choice based on its efficiency in various scenarios.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2. For instance, the sequence would be n + (n-2) + (n-4)... The process continues until n-x =< 0. Ensure your solution efficiently handles large values of n.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Ensure that your solution is optimized for speed. It should also be optimized for memory usage. This will help the function handle large values of n efficiently.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. Provide a verbatim copy of test cases.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string. Consider edge cases such as strings of length zero or one. Remember to optimize your code for performance when dealing with longer strings. Ensure your algorithm handles very large inputs efficiently without excessive memory usage.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Develop a function that arranges each nested list of strings by putting them in order in an existing list of lists. Ensure that the function can handle varying lengths of strings within each nested list, sorting them accordingly.", "pass@10": false, "passes": 0}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list while ensuring the function handles cases where the list or string is empty, returning an appropriate tuple.", "pass@10": true, "passes": 8}
{"task_id": 631, "prompt": "Write a function to replace spaces with underscores and the other way around in a given string. Make sure your solution handles strings with mixed spaces and underscores accurately.", "pass@10": true, "passes": 9}
{"task_id": 246, "prompt": "Write a function for computing square roots utilizing the Babylonian approach. Guarantee that your function properly addresses edge cases like zero and negative inputs.", "pass@10": false, "passes": 0}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Be sure to consider edge cases where the list might be empty. Also, recognize scenarios where n might be a negative number and ensure your solution is optimized for both time and space complexity.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to identify the specified number of biggest products from two given lists. The function should select one factor from each list. Ensure that the function returns the products in descending order of magnitude.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure your function handles lists of different lengths appropriately by returning an error message or performing a suitable operation.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Create a Python function to eliminate the initial and final instance of a specified character from the string. Ensure that the function handles cases where the specified character is not present in the string. The function should also be able to process strings of varying lengths efficiently.", "pass@10": true, "passes": 6}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares. You need to determine if a particular number can be expressed as the result of subtracting one perfect square from another. This is a significant operation that your function needs to perform. It plays a crucial role in achieving the task. Ensure your function is efficient and handles edge cases appropriately.", "pass@10": false, "passes": 0}
{"task_id": 421, "prompt": "Create a function that joins each element of a tuple using the specified delimiter. Ensure that your solution handles cases with different data types within the tuple efficiently. Remember to consider edge cases where the tuple might be empty or contain non-string convertible elements.", "pass@10": true, "passes": 9}
{"task_id": 170, "prompt": "Create a function that calculates the total of numbers in an array between two given indices.", "pass@10": true, "passes": 4}
{"task_id": 442, "prompt": "Construct a method to calculate the proportion of positive integers in a collection of numbers.", "pass@10": false, "passes": 0}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Ensure that the input provided is a positive number representing the side length. The function should handle erroneous input gracefully by providing a clear error message.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. The given amount should be assessed with precision and attention to detail. It is important to carefully consider all factors that could affect the assessment. It is essential to confirm that the amount indicates a breakeven status.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Create a function that calculates the total of the digits of a non-negative whole number. You need to ensure that the input is a non-negative whole number. It is important to validate the input before proceeding with the calculation.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences. Consider handling edge cases, such as empty sublists, appropriately. Ensure that the function can efficiently handle nested lists and varying list lengths.", "pass@10": true, "passes": 6}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string. Ensure your solution handles both leading and trailing spaces as well as spaces between words.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Create a function that locates the subsequent smallest palindrome of a given integer, and returns it as an integer. It is essential to handle edge cases. Such cases occur when the integer consists of all 9s. Additionally, consider the case when the integer is a single-digit number.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple. Ensure the function gracefully handles empty strings by skipping them. Additionally, the function should be able to handle tuples with mixed data types, processing only the string elements.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to verify if the two provided integers have opposite signs. Ensure that your function handles both positive and negative zero scenarios correctly.", "pass@10": true, "passes": 9}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not, ensuring it efficiently handles tuples of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Design a function to eliminate sequences of uppercase letters from a provided string. Make sure that the sequences of uppercase letters are completely removed. Ensure that the remaining characters in the string are preserved in their original order. Consider edge cases like strings that contain only uppercase letters or no uppercase letters at all to ensure your function handles all scenarios correctly.", "pass@10": true, "passes": 5}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. The nth tetrahedral number, derived from the sum of the first n triangular numbers, represents a geometric shape that forms a pyramid with a triangular base.", "pass@10": true, "passes": 7}
{"task_id": 65, "prompt": "Write a function to flatten a list into a single dimensional list. Your function should then sum all of its elements.", "pass@10": true, "passes": 7}
{"task_id": 470, "prompt": "Write a function to find the sum of elements that are adjacent to each other in the provided tuple. The elements should be next to each other in order to be considered adjacent.", "pass@10": true, "passes": 10}
{"task_id": 576, "prompt": "Write a python function to verify if one list is a sublist of another or not. Make sure to handle edge cases where one or both lists are empty.", "pass@10": true, "passes": 2}
{"task_id": 644, "prompt": "Write a python function to reverse an array up to a given position, ensuring your function takes into account edge cases such as an empty array or a position that's out of bounds. Your solution should also handle arrays with duplicate values correctly.", "pass@10": false, "passes": 0}
{"task_id": 745, "prompt": "Create a function to identify numbers in a specific range starting from startnum to endnum such that each number is divisible by each of the digits it comprises. Take into account special cases where digits might contain '0', which cannot act as a divisor. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 8}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters in a string are the same or not. The function should iterate through the string to compare each character with the first character. This comparison is essential to determine if all characters are identical or if there is any difference.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet, and the function should be case insensitive in its operation.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists. The function should replace the last element of the first list with the elements of the second list. The second list may contain multiple elements. All of these elements should be added to the first list one after another. Ensure that the function handles empty lists appropriately to avoid errors.", "pass@10": true, "passes": 7}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. A tuple consists of multiple elements, which need to be considered for aggregation.", "pass@10": true, "passes": 9}
{"task_id": 284, "prompt": "Write a function that takes in a list and an element and verifies if every item within the list matches the specified element.", "pass@10": true, "passes": 10}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The function gets as input a list of numbers and the sum. Be sure to consider only unique pairs in your solution.", "pass@10": true, "passes": 4}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Consider edge cases where the array might contain duplicate values. Also, take into account the possibility of the array being empty.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that determines how many pairs of integers in a list xor to an even number and ensure that your solution efficiently handles lists with a large number of integers. Consider edge cases where the list may contain negative numbers or zeros.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements. The function should take as input the given two lists. Ensure the function handles edge cases where one or both lists are empty.", "pass@10": true, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Ensure that your function handles edge cases. Edge cases occur when all RGB components are zero, which can result in undefined behavior if not properly managed. It is important to account for these scenarios in your implementation. The function should also be optimized for performance with large datasets.", "pass@10": false, "passes": 0}
{"task_id": 268, "prompt": "Create a function to determine the n'th star number. Make sure your solution is efficient and processes large n values effectively.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest. Ensure efficient handling of lists of varying lengths and element types.", "pass@10": true, "passes": 10}
{"task_id": 281, "prompt": "Construct a Python function to determine whether all items in a specified list are unique. Be sure to provide test cases to validate the correctness of your solution.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence. The condition is that at most 2 adjacent posts can have the same color. You need to find the solution for the given fence with n posts and k colors. Consider optimizing the solution for large values of n to ensure efficiency. Ensure the function handles edge cases, such as when n or k are zero.", "pass@10": true, "passes": 9}
{"task_id": 63, "prompt": "Write a function to find the maximum difference. You have to consider all available pairs in the given tuple list.", "pass@10": true, "passes": 10}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list. Ensure your solution efficiently handles lists with duplicate values.", "pass@10": true, "passes": 1}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The function receives a list of numbers and the sum as input and should only consider unique pairs in your solution.", "pass@10": true, "passes": 10}

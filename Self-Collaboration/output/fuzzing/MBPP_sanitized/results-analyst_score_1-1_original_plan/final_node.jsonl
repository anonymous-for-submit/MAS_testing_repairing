{"task_id": 3, "prompt": "Write a python function to identify non-prime numbers.", "pass@10": 0, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": 0, "passes": 8}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": 0, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": 0, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": 0, "passes": 6}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": 0, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": 0, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": 0, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": 0, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": 0, "passes": 9}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": 0, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": 0, "passes": 9}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": 0, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": 0, "passes": 9}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": 0, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": 0, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": 0, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": 0, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": 0, "passes": 2}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": 0, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": 0, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": 0, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": 0, "passes": 9}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": 0, "passes": 9}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": 0, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": 0, "passes": 9}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": 0, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": 0, "passes": 10}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists.", "pass@10": 0, "passes": 2}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": 0, "passes": 5}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": 0, "passes": 2}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": 0, "passes": 9}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.", "pass@10": 0, "passes": 7}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": 0, "passes": 5}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": 0, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": 0, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": 0, "passes": 4}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": 0, "passes": 1}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": 0, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": 0, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": 0, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 138, "prompt": "Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.", "pass@10": 0, "passes": 4}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": 0, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": 0, "passes": 8}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": 0, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": 0, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": 0, "passes": 4}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices.", "pass@10": 0, "passes": 10}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": 0, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": 0, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": 0, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": 0, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": 0, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": 0, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": 0, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": 0, "passes": 1}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": 0, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": 0, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": 0, "passes": 10}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": 0, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": 0, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": 0, "passes": 1}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": 0, "passes": 7}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.", "pass@10": 0, "passes": 8}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": 0, "passes": 7}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": 0, "passes": 10}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": 0, "passes": 8}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": 0, "passes": 10}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": 0, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": 0, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": 0, "passes": 7}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": 0, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": 0, "passes": 2}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": 0, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": 0, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": 0, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": 0, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": 0, "passes": 9}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": 0, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle.", "pass@10": 0, "passes": 8}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number.", "pass@10": 0, "passes": 1}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": 0, "passes": 4}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": 0, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": 0, "passes": 10}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": 0, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": 0, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": 0, "passes": 10}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": 0, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": 0, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": 0, "passes": 7}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": 0, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": 0, "passes": 10}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": 0, "passes": 2}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": 0, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": 0, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": 0, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": 0, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": 0, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": 0, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": 0, "passes": 3}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium.", "pass@10": 0, "passes": 6}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": 0, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ration of positive numbers in an array of integers.", "pass@10": 0, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": 0, "passes": 9}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": 0, "passes": 8}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": 0, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": 0, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": 0, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": 0, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": 0, "passes": 4}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": 0, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": 0, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": 0, "passes": 10}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": 0, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": 0, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": 0, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": 0, "passes": 8}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": 0, "passes": 10}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.", "pass@10": 0, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": 0, "passes": 6}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": 0, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": 0, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": 0, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": 0, "passes": 10}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": 0, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": 0, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers.", "pass@10": 0, "passes": 9}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple.", "pass@10": 0, "passes": 7}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": 0, "passes": 10}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": 0, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": 0, "passes": 9}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": 0, "passes": 10}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": 0, "passes": 1}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.", "pass@10": 0, "passes": 4}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": 0, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": 0, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": 0, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": 0, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": 0, "passes": 10}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h.", "pass@10": 0, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": 0, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": 0, "passes": 7}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": 0, "passes": 2}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": 0, "passes": 1}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": 0, "passes": 10}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": 0, "passes": 1}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": 0, "passes": 5}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": 0, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": 0, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": 0, "passes": 10}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": 0, "passes": 10}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": 0, "passes": 6}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": 0, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": 0, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": 0, "passes": 8}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": 0, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": 0, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": 0, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": 0, "passes": 10}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": 0, "passes": 10}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": 0, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.", "pass@10": 0, "passes": 10}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": 0, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": 0, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": 0, "passes": 1}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": 0, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": 0, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": 0, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": 0, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": 0, "passes": 2}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": 0, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": 0, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": 0, "passes": 8}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": 0, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": 0, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": 0, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": 0, "passes": 10}
{"task_id": 554, "prompt": "Write a python function which takes a list of integers and only returns the odd ones.", "pass@10": 0, "passes": 5}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": 0, "passes": 4}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": 0, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": 0, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": 0, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": 0, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": 0, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": 0, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": 0, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": 0, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": 0, "passes": 1}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": 0, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": 0, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples.", "pass@10": 0, "passes": 3}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": 0, "passes": 8}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": 0, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": 0, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": 0, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": 0, "passes": 1}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": 0, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": 0, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not. Make sure to consider edge cases, such as when the two numbers are identical or when one or both numbers are zero.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure that the function handles punctuation properly and ignores any non-alphabetical characters when checking word lengths.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. Ensure that the function handles lists with varied numeric element types correctly.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism is calculated by multiplying the base area of the triangle by the height of the prism. First, find the base area using the formula: (base * height1) / 2. Then, multiply that base area by the height2 of the prism to find the volume.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "\nWrite a function to remove characters from the first string which are present in the second string. Ensure that the function maintains the order of characters from the first string that are not removed.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element. Ensure that the function has a time complexity better than O(n^2) where n is the number of elements in the array.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not. Ensure your solution handles edge cases, such as when one or both integers are zero.", "pass@10": false, "passes": 0}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. The nth octagonal number can be calculated using the formula: n(3n - 2). This formula gives the sequence demanded by the task.", "pass@10": true, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find the smallest number in a list. The list will contain integers. Your task is to iterate through the list to determine the smallest element.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to process a nested list structure and return a single, flattened list. The function should traverse each element of the list. It will then transform any sub-list into a sequence of its individual elements and append these to the flat list. Additionally, sum all of its elements and return the total sum of the flattened list.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to calculate the number of methods to partition a set of Bell numbers.", "pass@10": true, "passes": 8}
{"task_id": 71, "prompt": "Write a function to sort a list. The list can contain elements of any type. The elements should be arranged in a specific order.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not. Consider edge cases where the input might be an empty string or a single character.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": true, "passes": 1}
{"task_id": 88, "prompt": "Create a function to calculate how often each element appears in a list, and return these frequencies as a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word. Ensure the function can handle a list of mixed-case words and ignore punctuation.", "pass@10": true, "passes": 7}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Ensure your function can handle both uppercase and lowercase characters effectively.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure your implementation can efficiently handle very large integers.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list. Then take the product obtained and divide it by the length of the list.", "pass@10": true, "passes": 4}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome. The palindrome should be found for a specified integer value. It's returned as an integer.", "pass@10": true, "passes": 3}
{"task_id": 106, "prompt": "Create a function that attaches the given list to the specified tuples.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not. Ensure your implementation handles both positive and negative numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not. Ensure that your solution efficiently checks for dictionary content.", "pass@10": false, "passes": 0}
{"task_id": 123, "prompt": "Create a function that calculates the total of amicable numbers ranging from 1 to a given limit.", "pass@10": false, "passes": 0}
{"task_id": 125, "prompt": "Write a function to determine the largest gap between the count of 0s and the count of 1s within any sub-string of the provided binary string.", "pass@10": false, "passes": 0}
{"task_id": 129, "prompt": "Write a function to determine if the matrix is a magic square.", "pass@10": true, "passes": 7}
{"task_id": 130, "prompt": "Design a function to identify the element that appears most frequently in a specified list.", "pass@10": true, "passes": 2}
{"task_id": 138, "prompt": "Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not. You will need to determine if the given number can be broken down into a sum. More specifically, this sum should consist of non-zero powers of 2.", "pass@10": false, "passes": 0}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4) until n-x =< 0.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet. The function should be case insensitive. It should treat uppercase and lowercase letters as the same character in evaluating their positions.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to determine the least power of 2 that is greater than or equal to n.", "pass@10": true, "passes": 1}
{"task_id": 170, "prompt": "Create a function that calculates the sum of numbers in a list between two given indices.", "pass@10": true, "passes": 10}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Ensure that the function handles edge cases gracefully, such as when the input length is zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Create a function to determine whether every item in a tuple has the same type of data or not.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Create a Python function that calculates the count of set bits (binary digits with value 1) in a specified number.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length. Ensure your function can handle both integer and floating-point inputs for side length.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Create a function to calculate square roots utilizing the Babylonian method.", "pass@10": false, "passes": 0}
{"task_id": 252, "prompt": "Create a Python function that transforms complex numbers into polar coordinates.", "pass@10": true, "passes": 10}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple. Ensure to handle cases where L is greater than the length of the list gracefully.", "pass@10": true, "passes": 6}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n, splitting the list at every nth element and returning a list of the resulting lists.", "pass@10": true, "passes": 4}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers. Odd natural numbers are numbers that are not divisible by 2 and are positive. These numbers include 1, 3, 5, and so on.", "pass@10": true, "passes": 8}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Ensure your solution handles edge cases where n is 0 or negative gracefully.", "pass@10": true, "passes": 10}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and successfully computes the sum of the first n even natural numbers which are raised to the fifth power. You need to identify the sequence of the first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. The function should be efficient and handle large values of n without exceeding time limits.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Create a function that receives a list and an element, then verifies if every item in the list matches the specified element.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle. Ensure that your function handles invalid and edge case inputs gracefully.", "pass@10": true, "passes": 3}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list. Ensure that the function can handle mixed data types such as integers, floats, and strings, and return the maximum value based on the standard comparison rules for numbers and lexicographical order for strings.", "pass@10": true, "passes": 6}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number.", "pass@10": false, "passes": 0}
{"task_id": 307, "prompt": "Write a function to get a colon. It should be a colon of a tuple.", "pass@10": false, "passes": 0}
{"task_id": 311, "prompt": "Develop a Python function to modify the leftmost bit that isn't set.", "pass@10": true, "passes": 2}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n. Consider edge cases where n is less than 1.", "pass@10": false, "passes": 0}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. You need to ensure that each element in the list is transformed according to the format string. The transformation should be consistent across all elements.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Ensure that your solution efficiently handles large inputs by leveraging memoization or iterative computation.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Create a function that identifies the list with the greatest number of elements.", "pass@10": false, "passes": 0}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. You need to ensure that none of the elements in the tuple are repeated. A correct implementation will confirm that all elements are unique.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure the function handles both integer and floating-point inputs gracefully.", "pass@10": true, "passes": 8}
{"task_id": 399, "prompt": "Create a function to carry out the bitwise XOR operation on the provided tuples.", "pass@10": true, "passes": 6}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers. Make sure to handle edge cases where the inputs might not be comparable, like when they are of different types.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element is present within a tuple. You need to determine if the specific element is a part of the tuple or not.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list. Make sure to handle edge cases where the list may contain less than two tuples or empty tuples.", "pass@10": false, "passes": 0}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Ensure that your function handles different data types gracefully and accounts for possible type compatibility issues.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Construct a function to combine each component of a tuple using the specified delimiter.", "pass@10": true, "passes": 9}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Ensure that your solution efficiently handles large input sizes.", "pass@10": true, "passes": 8}
{"task_id": 425, "prompt": "Write a function to count the number of sublists. A sublist is defined as a contiguous segment of a list. The function should return the count of sublists containing a particular element.", "pass@10": true, "passes": 10}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium.\nA trapezium is a quadrilateral with at least one pair of parallel sides.", "pass@10": false, "passes": 0}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples. Ensure your function handles tuples of different lengths gracefully.", "pass@10": true, "passes": 3}
{"task_id": 450, "prompt": "Create a function that takes input as a list of strings and returns strings of a specified length from the list.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure your function handles integer and floating-point inputs efficiently.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Develop a function that eliminates uppercase substrings from a provided string.", "pass@10": true, "passes": 9}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist. Make sure your solution handles edge cases such as empty sublists.", "pass@10": false, "passes": 0}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Ensure the function efficiently handles larger arrays and considers subsequences of any length within the constraints.", "pass@10": false, "passes": 0}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value. This means that the function should take a dictionary as input. It should then sort the items based on their values in either ascending or descending order.", "pass@10": false, "passes": 0}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Make sure the function handles different types of characters, including special symbols, numbers, and whitespace, effectively.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove substrings that are in lowercase from a given string. A substring is a contiguous sequence of characters within a string.", "pass@10": true, "passes": 3}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure that the function handles multiple spaces between words correctly.", "pass@10": true, "passes": 10}
{"task_id": 607, "prompt": "Create a function that looks for a regex pattern in a string. The function should return the matching subtring, a start index and an end index.", "pass@10": true, "passes": 10}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list. The list should contain the same elements, but the k'th element removed.", "pass@10": true, "passes": 9}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Ensure that your solution efficiently handles large matrices by considering both time and space complexities.", "pass@10": true, "passes": 8}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element-wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Ensure the function handles division by zero gracefully by returning 'None' for any operation attempting to divide by zero.", "pass@10": true, "passes": 10}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers.", "pass@10": true, "passes": 8}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple. Be sure to consider all possible directions, such as vertical, horizontal, and diagonal, and ensure the output is in a consistent format.", "pass@10": false, "passes": 0}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string. Ensure your solution handles both leading and trailing spaces efficiently.", "pass@10": false, "passes": 0}
{"task_id": 635, "prompt": "Write a function to sort the given list. Ensure that your solution handles edge cases such as empty lists or lists with one element gracefully.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. Ensure that the function handles all potential edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N represented as a list of lists, where each cell is linked with a particular cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 8}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Ensure your function efficiently handles large datasets.", "pass@10": false, "passes": 0}
{"task_id": 723, "prompt": "The input is defined as two lists. The two lists are of the same length. Write a function to count indices where the lists have the same values.", "pass@10": false, "passes": 0}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N. The i-th element of the tuple is equal to t_i * t_{i+1}. You need to ensure that each element in the resultant tuple is the product of consecutive elements from the input tuple.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure that the input lists are of the same length for the function to execute correctly.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. Make sure to handle edge cases where the number's bit length is less than three. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": false, "passes": 0}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1.", "pass@10": false, "passes": 0}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Make sure to consider edge cases where n is a small number or could lead to single-digit triangular numbers.", "pass@10": true, "passes": 5}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Please refer to https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/ for more details.", "pass@10": true, "passes": 8}
{"task_id": 747, "prompt": "Construct a function to identify the longest common subsequence for the provided three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 8}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Additionally, ensure your solution handles potential edge cases such as empty strings or non-numeric values gracefully. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": false, "passes": 0}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Visit the reference link for more details: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 8}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. Visit the following website for more information: https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 9}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary in which each list is transformed into a tuple and the count of such tuple is the number of its appearances in the original list.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Create a function that returns a list containing all consecutive item pairs from a provided list.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Create a function that identifies the occurrence and location of substrings in a string. Return None if there is no match.", "pass@10": true, "passes": 9}
{"task_id": 781, "prompt": "Create a Python function to determine if the number of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to calculate the total of all subarrays with odd lengths. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": false, "passes": 0}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. You are provided with three integers as input to the function. Your task is to determine how many of these integers are equal to each other.", "pass@10": true, "passes": 2}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists. The list should be the one whose sum of elements is the highest.", "pass@10": true, "passes": 9}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and returns only the odd numbers from it.", "pass@10": false, "passes": 0}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd. Ensure your function handles large input sizes efficiently to avoid performance issues.", "pass@10": true, "passes": 1}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. This function will work by changing each lowercase letter to uppercase. Similarly, each uppercase letter will be changed to lowercase.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Ensure your function handles lists of different types and sizes effectively.", "pass@10": true, "passes": 9}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted. The list can be sorted either in ascending order or descending order.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists. Consider the efficiency of your solution for large datasets.", "pass@10": false, "passes": 0}
{"task_id": 573, "prompt": "Write a python function. The function should calculate the product of the unique numbers in a given list.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples. You are given two tuples which may contain similar or dissimilar elements. Your task is to identify the elements that are not present in both tuples and return them.", "pass@10": true, "passes": 1}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": true, "passes": 7}
{"task_id": 583, "prompt": "Create a function that outputs the catalan number at the nth position.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Create a Python function to calculate the disparity between the maximum and minimum values in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. Ensure that your solution is efficient and handles a wide range of input values gracefully.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An Armstrong number is a number that is equal to the sum of cubes of its digits. To elaborate further, if you add together the cubes of each digit in the number and get the number itself, then it's an Armstrong number.", "pass@10": true, "passes": 9}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Ensure that your function is efficient and handles edge cases appropriately.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Develop a Python function to alter the first unset bit from the left.", "pass@10": true, "passes": 8}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list. Ensure that the function can handle mixed data types such as integers, floats, and strings. It should be able to return the maximum value based on the standard comparison rules for numbers, and also in lexicographical order for strings.", "pass@10": false, "passes": 0}
{"task_id": 478, "prompt": "Write a function to remove substrings that are in lowercase from a given string, where a substring is a contiguous sequence of characters within a string.", "pass@10": true, "passes": 1}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n, splitting the list at every nth element and returning a list of the resulting lists. Ensure your solution handles edge cases such as n being greater than the length of the list or n being less than 1.", "pass@10": false, "passes": 0}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. You will be given three integers as input. Your task is to determine how many of these integers are equal to each other.", "pass@10": true, "passes": 5}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts. You need to ensure that the length of the first part of the list is L. Return the resulting lists in a tuple. Ensure to handle cases where L is greater than the length of the list gracefully.", "pass@10": true, "passes": 7}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Ensure that your solution is efficient and can handle large input sizes. It is important to consider performance when designing your solution.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure your implementation can efficiently handle very large integers. Consider edge cases such as negative numbers and zero for a comprehensive solution.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column, ensuring that your solution efficiently handles large matrices by considering both time and space complexities.", "pass@10": true, "passes": 6}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Ensure that your solution is able to handle edge cases. This includes scenarios where n is 0 or negative gracefully.", "pass@10": true, "passes": 9}
{"task_id": 404, "prompt": "Create a Python function to determine the smaller of two numbers. Ensure to address special cases where the inputs might be non-comparable, such as when they are of different data types.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to determine the least power of 2 that is greater than or equal to n. Make sure your solution efficiently handles large values of n.", "pass@10": false, "passes": 0}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list. The list should have the same elements, without the k'th element included.", "pass@10": true, "passes": 8}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An Armstrong number is a number that is equal to the sum of cubes of its digits. To elaborate further, if you add together the cubes of each digit in the number and get the number itself, then it's an Armstrong number. For example, 153 is an Armstrong number because 1^3 + 5^3 + 3^3 equals 153.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Ensure that your function can handle different data types appropriately.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Develop a function to verify if the specified amount results in neither a gain nor a loss. Ensure that the function handles all potential edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element-wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Create a Python function that calculates how many set bits (binary digits that have a value of 1) there are in a given number.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Ensure your function handles lists of different types and sizes effectively. Additionally, consider the potential for nested lists and address such scenarios appropriately.", "pass@10": true, "passes": 6}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and successfully computes the sum of the first n even natural numbers which are raised to the fifth power. You need to identify a pattern in numbers to effectively find the sequence. The sequence consists of the first n even natural numbers.", "pass@10": true, "passes": 9}
{"task_id": 477, "prompt": "Create a Python function that transforms the provided string to lowercase. Ensure the function adeptly processes various types of characters, encompassing unique symbols, numbers, and space characters.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even. In this problem, you need to determine if a number is divisible by 2 without any remainder.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure your function handles integer inputs efficiently. The function should also manage floating-point inputs with equal efficiency.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. You need to ensure that each element in the list is transformed according to the format string. The transformation should be consistent across all elements. Consider edge cases where elements might not conform to expected types and handle them gracefully.", "pass@10": true, "passes": 8}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers. The function should begin by identifying the sequence of odd numbers. It should then compute each of their squares and accumulate them to obtain the result.", "pass@10": true, "passes": 1}
{"task_id": 721, "prompt": "Given a square matrix of size N*N represented as a list of lists, where each cell is linked with a particular cost. A path is defined as a specific sequence of cells. This path starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 9}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet. The function should not consider the case of the characters. It should treat uppercase and lowercase letters as the same character in evaluating their positions.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that accepts a positive integer n and computes the sum of binomial coefficients at even indices. The function should be efficient and handle large values of n without exceeding time limits.", "pass@10": true, "passes": 3}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Visit the URL https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ for more information.", "pass@10": true, "passes": 2}
{"task_id": 618, "prompt": "Create a function that divides two lists on an element-by-element basis. Make sure the function deals with division by zero properly by returning 'None' for any operation that tries to divide by zero.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). You must ensure that your solution efficiently handles large inputs. This can be achieved by leveraging memoization or iterative computation.", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to calculate the total of all subarrays with odd lengths. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Ensure your solution is efficient and consider edge cases where the input list may be empty.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism is computed by multiplying the triangle's base area by the prism's height. First, find the base area using the formula: (base * height1) / 2. Then, multiply that base area by the height2 of the prism to find the volume.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Construct a function that takes a list and an element, then checks if every item in the list matches the specified element.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Construct a function to determine the element that shows up most often in a given list.", "pass@10": false, "passes": 0}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Ensure your implementation handles both numeric and string data types efficiently.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function. The function should calculate the product. It should do this by finding the product of the unique numbers in a given list.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary in which each list is transformed into a tuple and the count of such tuple is the number of its appearances in the original list. Ensure that the function handles nested lists by only transforming the top-level lists into tuples.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. The nth octagonal number can be calculated using the formula: n(3n - 2). You can use this formula to calculate the nth octagonal number. It is a straightforward calculation to find any term in the sequence. This formula gives the sequence demanded by the task.", "pass@10": true, "passes": 8}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N. The i-th element of the tuple is equal to t_i * t_{i+1}. You must compute each element in the resultant tuple as the product of consecutive elements from the input tuple. You need to ensure that each element in the resultant tuple is the product of consecutive elements from the input tuple.", "pass@10": true, "passes": 3}
{"task_id": 739, "prompt": "Write a python function to determine the position of the smallest triangular number consisting of n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 6}
{"task_id": 747, "prompt": "Develop a function to determine the longest common subsequence for the given set of three strings. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Develop a function that computes the total of numbers in a list from two specified indices.", "pass@10": true, "passes": 2}
{"task_id": 781, "prompt": "Create a Python function to determine if the number of divisors is even. The function should receive an integer input. Then, it will calculate all the divisors of that integer. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to determine if the matrix is a magic square. A magic square is a square matrix in which the sums of the numbers in each row and each column are all the same. Additionally, the sums of the numbers in both main diagonals must be the same as well.", "pass@10": false, "passes": 0}
{"task_id": 84, "prompt": "Construct a function to determine the nth numeral in the Newman-Conway sequence.", "pass@10": true, "passes": 2}
{"task_id": 459, "prompt": "Develop a function that eliminates uppercase substrings from a provided string. The function should ensure that the input is processed efficiently and handle edge cases, such as strings without any uppercase characters, gracefully.", "pass@10": false, "passes": 0}
{"task_id": 773, "prompt": "Create a function that identifies the occurrence and location of substrings in a string, and return None if there is no match.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Create a function that eliminates odd elements from a mixed nested tuple.", "pass@10": true, "passes": 7}
{"task_id": 11, "prompt": "Write a python function to remove the first occurrence and the last occurrence of a given character from the string. You need to find the first appearance of the given character and remove it. Next step is to identify the final appearance and eliminate the character from the end position.", "pass@10": true, "passes": 5}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Ensure that the input is a positive number to avoid invalid calculations.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. In other words, the function should determine if the array is consistently increasing or decreasing. It should not change direction at any point.", "pass@10": true, "passes": 9}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'. Make sure the function handles negative values and zero as inputs for both 'a' and 'b'.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list. You need to consider a list of lists, which means lists are nested within a main list.", "pass@10": true, "passes": 1}
{"task_id": 111, "prompt": "Create a function that identifies the shared elements within provided nested lists.", "pass@10": true, "passes": 8}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers. Your task is to evaluate pairs of tuples within a given list for their absolute product.", "pass@10": true, "passes": 5}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure the function handles both positive and negative numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Ensure that your function handles both uppercase and lowercase words effectively.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Ensure that your solution handles both numerical and string inputs effectively.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to determine how many elements in three provided lists are identical when located at the same index.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list. Ensure that the original list maintains its order after removing the specified elements.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Ensure that the returned list is sorted in descending order.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Create a function that accepts positive integers m and n and determines the count of possible sequences with a length of n, where each item is a positive integer that is greater than or equal to twice the preceding element but not exceeding m.", "pass@10": false, "passes": 0}
{"task_id": 242, "prompt": "Create a function that calculates the sum of all characters in a given string.", "pass@10": false, "passes": 0}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list. Ensure that your solution is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 264, "prompt": "Develop a function to compute a canine's age in dog years.", "pass@10": true, "passes": 7}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character. Ensure that the function handles both uppercase and lowercase letters accurately.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. Consider edge cases where the tuple might be empty or not contain the specified element.", "pass@10": false, "passes": 0}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise. Ensure that both lists are of the same length before performing the operation.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array. An inversion is a pair of elements in an array. These elements are out of order in the given array.", "pass@10": true, "passes": 7}
{"task_id": 297, "prompt": "Create a function that transforms a provided list structure which contains nested elements into a flat list.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. Ensure your solution efficiently handles large datasets to maintain optimal performance.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Create a function to calculate the number of binary sequences of length 2n in which the total of the initial n bits equals the total of the last n bits.", "pass@10": true, "passes": 8}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list. Ensure the solution handles cases where either or both lists can be empty.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts with the same character it ends with or not. Determine if the sequence at the beginning of the string matches the sequence at its end.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples. Consider edge cases where the list might be empty or the nth index exceeds tuple size.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples. Elementwise extraction refers to extracting individual elements from each tuple separately. Tuples extraction signifies forming new tuples from pairs of elements at corresponding positions in the input tuples.", "pass@10": false, "passes": 0}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Ensure that the function handles both empty strings and mixed case strings appropriately.", "pass@10": true, "passes": 10}
{"task_id": 474, "prompt": "Create a function with the functionality to substitute characters within a string.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Make sure to handle edge cases where the array might be empty or contain duplicate values.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The function should efficiently calculate the result using appropriate algorithms and data structures.", "pass@10": true, "passes": 4}
{"task_id": 619, "prompt": "Write a function to transfer all the numbers towards the end of the provided string.", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list. Ensure that the order of the remaining elements is preserved.", "pass@10": true, "passes": 10}
{"task_id": 731, "prompt": "Write a function to calculate the surface area on the side of a cone, provided the radius r and height h.", "pass@10": true, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Your function should take a string as input. It should traverse through the string to identify spaces, commas, and dots for replacement.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. You should implement an efficient algorithm for this task. Ensure that the function handles edge cases appropriately. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 8}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Ensure you handle edge cases such as when k is greater than the number of tuples in the list.", "pass@10": true, "passes": 2}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string. You need to determine the total number of digits present in the input string provided. The function should be able to handle strings of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple. Ensure that the function handles different tuple structures and data types seamlessly.", "pass@10": false, "passes": 0}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Please ensure your solution efficiently handles very large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list. Make sure to handle edge cases where the lists might contain empty elements.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Create a function to determine the byte size of the specified tuple.", "pass@10": true, "passes": 1}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit. Ensure that your solution efficiently identifies and sets the bit while avoiding unnecessary calculations.", "pass@10": true, "passes": 6}
{"task_id": 170, "prompt": "Develop a function that computes the total of numbers in a list. The function should calculate this total starting from two specified indices.", "pass@10": true, "passes": 1}
{"task_id": 274, "prompt": "Write a python function that accepts a positive integer n and computes the sum of binomial coefficients at even indices. The function should be efficient and handle large values of n without exceeding time limits. Ensure your solution utilizes mathematical properties to reduce computational overhead.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Create a function to determine if the provided array embodies a min heap. Visit the reference link for more details: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list. You need to consider a list of lists, which means lists are nested within a main list. Make sure your function handles both empty sublists and mixed data types within the lists.", "pass@10": false, "passes": 0}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Ensure you handle edge cases such as when k is greater than the number of tuples in the list. The function should return an empty list if there are no tuples to process.", "pass@10": true, "passes": 6}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. You are provided with three integers as input to the function. Your task is to determine how many of these integers are equal to each other. Consider edge cases where two or all three integers might be equal.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N. The i-th element of the tuple is equal to t_i * t_{i+1}. You must calculate each element in the output tuple as the product of neighboring elements from the input tuple. You need to ensure that each element in the resultant tuple is the product of consecutive elements from the input tuple.", "pass@10": true, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples, ensuring your function handles tuples of different lengths gracefully.", "pass@10": true, "passes": 1}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure your solution is efficient, especially for larger integers.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to determine the length of the longest sublists. Ensure your function handles lists of different types and sizes effectively. Additionally, consider the potential for nested lists and address such scenarios appropriately.", "pass@10": false, "passes": 0}
{"task_id": 11, "prompt": "Write a python function to remove the first occurrence and the last occurrence of a given character from the string. You need to find the first appearance of the given character and remove it. Next step is to identify the final appearance and eliminate the character from the end position. Make sure to handle cases where the character may appear only once or may not appear at all in the string.", "pass@10": true, "passes": 1}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers by evaluating pairs of tuples within a given list for their absolute product.", "pass@10": true, "passes": 2}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. You need to ensure that each element in the list is transformed according to the format string. The transformation should be consistent across all elements. Consider edge cases where elements might not conform to expected types and handle them gracefully. Make sure to validate the input format string to prevent runtime errors.", "pass@10": true, "passes": 3}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts. You need to ensure that the length of the first part of the list is L. Return the resulting lists in a tuple. Ensure to handle cases where L is greater than the length of the list gracefully. Consider edge cases such as an empty list or a negative L value.", "pass@10": true, "passes": 6}
{"task_id": 404, "prompt": "Create a Python function to determine the smaller of two numbers. Ensure to address special cases where the inputs might be non-comparable, such as when they are of different data types. Consider implementing custom error handling to improve robustness of your function.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list. First, iterate through the list of numbers and calculate their total product. Then take the product obtained and divide it by the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers, ensuring that your solution efficiently handles large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Ensure that your function handles different data types gracefully and accounts for possible type compatibility issues. Consider edge cases where the list might be empty or contain non-comparable elements.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word. Ensure the function can handle a list of mixed-case words and ignore punctuation. Consider edge cases such as empty strings and lists with only punctuation marks.", "pass@10": true, "passes": 6}
{"task_id": 224, "prompt": "Create a Python function that calculates the count of set bits (binary digits with value 1) in a specified number. Ensure the function handles both positive and negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number, efficiently calculating the result using appropriate algorithms and data structures.", "pass@10": true, "passes": 3}
{"task_id": 399, "prompt": "Create a function to carry out the bitwise XOR operation on the provided tuples. Ensure the function handles tuples of any length.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Ensure that your solution is able to handle edge cases, including scenarios where n is 0 or negative gracefully.", "pass@10": true, "passes": 4}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure the function handles both positive and negative numbers correctly. Consider edge cases such as multiplying by zero and the minimum or maximum integer values.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Ensure that the function checks for zero in the second tuple to handle division by zero errors appropriately.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An Armstrong number is a number that is equal to the sum of cubes of its digits. To elaborate further, if you add together the cubes of each digit in the number and get the number itself, then it's an Armstrong number. For example, 153 is an Armstrong number because 1^3 + 5^3 + 3^3 equals 153. Consider edge cases, such as single-digit numbers, and whether or not they qualify as Armstrong numbers.", "pass@10": true, "passes": 9}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Ensure that the function handles both positive and negative numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to determine if the two numbers vary at exactly one bit location or not. Make sure to consider edge cases, such as when the two numbers are identical or when one or both numbers are zero.", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to compute the sum of all subarrays with odd lengths. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Ensure your solution is efficient and consider edge cases where the input list may be empty.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N depicted as a list of lists, where each cell is associated with a specific cost. A path is defined as a particular sequence of cells. This path commences from the top-left cell and can proceed solely right or downward, concluding at the bottom-right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Create a function to calculate the number of binary sequences of length 2n. You should ensure that the total sum of the initial n bits equals the total of the last n bits.", "pass@10": true, "passes": 6}
{"task_id": 618, "prompt": "Write a function that splits two lists on an item-by-item basis. Make sure the function handles division by zero correctly by returning 'None' for any operation that attempts to divide by zero.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the quantity of pairs whose xor result is odd. Ensure your function handles large input sizes efficiently to avoid performance issues.", "pass@10": false, "passes": 0}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers. The function should start by recognizing the sequence of odd numbers. It should then compute each of their squares and accumulate them to obtain the result.", "pass@10": false, "passes": 0}
{"task_id": 747, "prompt": "Develop a function to determine the longest common subsequence for the given set of three strings. The problem requires finding a subsequence that appears in the same order in each of the three strings. For further details and examples, you can visit the link provided: https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 6}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. Make sure to consider edge cases where n is a small number or could lead to single-digit triangular numbers.", "pass@10": false, "passes": 0}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). You must ensure that your solution efficiently handles large inputs by leveraging memoization or iterative computation.", "pass@10": true, "passes": 8}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism is computed by multiplying the triangle's base area by the prism's height. First, find the base area using the formula: (base * height1) / 2. Then, multiply that base area by the height2 of the prism to find the volume. Ensure all inputs are valid numbers before performing any calculations.", "pass@10": false, "passes": 0}
{"task_id": 580, "prompt": "Create a function that eliminates odd elements. These elements are present within a mixed nested tuple.", "pass@10": true, "passes": 2}
{"task_id": 781, "prompt": "Create a Python function to determine if the number of divisors is even.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Construct a function that takes a list and an element, then checks if every item in the list matches the specified element. Ensure your function handles edge cases, such as empty lists or non-compatible types.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Make sure to check that the input is a positive number. It is important to avoid invalid calculations.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples. Consider edge cases where the list might be empty or the nth index exceeds tuple size. Ensure your solution handles invalid input gracefully.", "pass@10": false, "passes": 0}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values, ensuring it can handle both uppercase and lowercase characters effectively.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list. Make sure to handle edge cases where the lists might contain empty elements. Pay attention to the order in which elements are interleaved to ensure the final list accurately reflects the input sequences.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes a positive integer n as input and calculates the sum of binomial coefficients at even indices. The function should be efficient and handle large values of n without exceeding time limits. Ensure your solution utilizes mathematical properties to reduce computational overhead.", "pass@10": true, "passes": 3}
{"task_id": 84, "prompt": "Create a method to identify the nth digit in the Newman-Conway sequence.", "pass@10": true, "passes": 1}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string. Determine the total number of digits present in the input string provided and ensure the function can handle strings of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Visit the URL https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ for more information. Make sure to consider edge cases such as an empty array or a single element.", "pass@10": true, "passes": 3}
{"task_id": 142, "prompt": "Write a function to determine how many elements in three provided lists are identical when located at the same index. Ensure your function efficiently handles lists with varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure that the input lists are of the same length for the function to execute correctly. Pay attention to edge cases where the lists could be empty.", "pass@10": true, "passes": 10}
{"task_id": 450, "prompt": "Create a function that takes input as a list of strings and returns strings of a specified length from the list. Ensure that your function handles edge cases, such as empty lists or non-string inputs, gracefully.", "pass@10": true, "passes": 9}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Ensure that the function handles both empty strings and mixed case strings appropriately. The function should maintain the original structure of the list while processing each string.", "pass@10": true, "passes": 4}
{"task_id": 308, "prompt": "Create a function to identify the specified number of top products formed by choosing one factor from each of the two provided lists. Ensure the solution handles cases where either or both lists can be empty.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4) until n-x =< 0. Ensure that your implementation is efficient and runs in a reasonable time for large values of n.", "pass@10": true, "passes": 9}
{"task_id": 253, "prompt": "Write a python function that returns the count of integer elements in a specified list. Ensure that your solution is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts with the same character it ends with or not. Verify whether the string begins and concludes with the same character.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to find the left insertion point for a particular value in sorted order. You should implement an efficient algorithm for this task. Ensure that the function handles edge cases appropriately. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": false, "passes": 0}
{"task_id": 730, "prompt": "Write a function to eliminate successive duplicates from a specified list. Ensure that the order of the remaining elements is preserved.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples, ensuring your solution efficiently handles large datasets to maintain optimal performance.", "pass@10": true, "passes": 9}
{"task_id": 62, "prompt": "\nWrite a python function to find the smallest number in a list. The list will contain integers. Your task is to iterate through the list to determine the smallest element. Ensure that your solution handles both positive and negative integers effectively.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. You must take care to ensure that there are no repeating elements in the tuple. It is important that each element in the tuple is unique. A correct implementation will confirm that all elements are unique.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Create a function that returns a list containing all consecutive item pairs. The consecutive item pairs are to be derived from a provided list.", "pass@10": true, "passes": 10}
{"task_id": 264, "prompt": "Develop a function to compute a canine's age in dog years. You can assume the general formula is that the first two years count as 21 human years, and each subsequent year counts as 4 human years.", "pass@10": true, "passes": 9}
{"task_id": 583, "prompt": "Create a function that outputs the catalan number. The function should compute the catalan number at the nth position.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Design a function to eliminate every item from a provided list that exists in a different list. Ensure that the original arrangement of the list remains the same after the elements are removed.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length. Ensure your function can handle integer and floating-point inputs for side length.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Write a function to transfer all the numbers towards the end of the provided string.", "pass@10": true, "passes": 9}
{"task_id": 292, "prompt": "Write a python function to determine the quotient of two integers, with the result rounded down to the closest whole number.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Create a function to determine whether every item in a tuple has the same type of data or not. Ensure that the function handles edge cases, such as tuples that include nested data structures.", "pass@10": true, "passes": 1}
{"task_id": 67, "prompt": "Write a function to calculate the number of methods to partition a set of Bell numbers.", "pass@10": true, "passes": 7}
{"task_id": 421, "prompt": "Construct a function to combine each component of a tuple using the specified delimiter. Ensure the function handles cases where the tuple contains non-string elements by converting them to strings before combining.", "pass@10": true, "passes": 9}
{"task_id": 752, "prompt": "Design a function to determine the nth Jacobsthal number. Visit the following website for more information: https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Create a function to determine whether every item in a tuple has the same type of data or not. Ensure that the function handles edge cases, such as tuples that include nested data structures. The function should also consider empty tuples and tuples with a single element as valid inputs.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Develop a function that computes the total of numbers in a list. The function should calculate this total starting from two specified indices. Ensure your implementation accounts for edge cases such as negative indices and indices that exceed the list's length.", "pass@10": true, "passes": 3}
{"task_id": 3, "prompt": "Create a Python function to detect numbers that are not prime.", "pass@10": false, "passes": 0}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": true, "passes": 8}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Ensure the function handles empty lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list. Ensure the function handles duplicate values appropriately.", "pass@10": false, "passes": 0}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string. Ensure that each element of the tuple is concatenated into the resulting string with no separators.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list. Ensure the function handles lists containing various data types gracefully.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure that the function handles empty lists appropriately to avoid any errors.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occurrences of the element in the tuple. Ensure that your implementation handles tuples of any length, including empty ones.", "pass@10": true, "passes": 10}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and carries out division operation element-wise on the provided tuples.", "pass@10": true, "passes": 6}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers. Ensure your function handles edge cases such as equal numbers or negative numbers effectively.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number. Lucas numbers form a sequence similar to the Fibonacci sequence, but starting with 2 and 1. The sequence begins with the elements 2 and 1. Then the next numbers are obtained by summing the previous two numbers. For example, the series starts with 2, 1, 3, 4, 7, and so on.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary. Ensure that the function is capable of handling lists of varying lengths and data types.", "pass@10": true, "passes": 8}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not. Consider edge cases such as empty sequences and non-iterable inputs.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Create a function to obtain just the last index element of every string in the provided tuple.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers. Ensure that the function returns a new array containing only the odd numbers from the input array.", "pass@10": true, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements. Identify the adjacent elements in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians. Consider edge cases such as negative degrees and values exceeding 360 degrees to ensure your function handles all possible inputs.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list. You need to implement this function in a way that efficiently calculates the power for an individual number. Make sure to apply this computation for every single number in the provided list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string into capital letters.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list. Ensure that the list is not empty before attempting the swap.", "pass@10": true, "passes": 10}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list. Ensure that the relative order of non-zero elements is maintained.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string. Ensure that the function handles escaped quotation marks appropriately.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to identify the position of the first occurrence of a given number in a sorted array. Examine the elements of the array to find where this number first appears.", "pass@10": true, "passes": 7}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not. First, take a string as input. Then, iterate over each character in the string.", "pass@10": true, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index, so write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 7}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list; the function should return a dictionary where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Create a method to identify the sum combinations utilizing tuples within the provided list of tuples. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": false, "passes": 0}
{"task_id": 803, "prompt": "Create a function to determine if the provided number is a perfect square. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to verify whether each element in the second tuple is less than its corresponding element in the first tuple.", "pass@10": true, "passes": 9}
{"task_id": 565, "prompt": "Write a python function to split a string into characters. Ensure that the function handles both ASCII and Unicode characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists. You will need to iterate over each sublist in the main list. For each sublist, you should apply a sorting algorithm to reorder the strings within that sublist.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. A factorial of a non-negative integer n is the product of all positive integers less than or equal to n. The factorial operation is denoted by n!.", "pass@10": true, "passes": 8}
{"task_id": 591, "prompt": "Write a python function to swap the first and last elements of a list. The function should start by identifying the first element and the last element in the list. Then, these identified elements should be interchanged to complete the swap operation.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements. The multiplication should be performed on elements of the given two tuples.", "pass@10": true, "passes": 7}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure your solution is efficient. This is especially important for larger integers.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string. Ensure that the function is optimized for performance even with longer strings.", "pass@10": true, "passes": 10}
{"task_id": 747, "prompt": "Develop a function to determine the longest common subsequence for the given set of three strings. The problem requires finding a subsequence that appears in the same order in each of the three strings, and for further details and examples, you can visit the link provided: https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/.", "pass@10": true, "passes": 10}
{"task_id": 262, "prompt": "Write a function that receives a list and an integer L and splits the given list into two parts. You must guarantee that the first part of the list has a length of L. Return the resulting lists in a tuple. Ensure to handle cases where L is greater than the length of the list gracefully. Consider edge cases such as an empty list or a negative L value.", "pass@10": true, "passes": 3}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Ensure that the function handles both empty strings and mixed case strings appropriately. Consider using slicing to efficiently reverse the strings.", "pass@10": true, "passes": 7}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Ensure that your function can handle different data types appropriately. Consider edge cases where the list may be empty or contain non-comparable data types.", "pass@10": true, "passes": 9}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit. Ensure that your solution efficiently identifies and sets the bit while avoiding unnecessary calculations. Your implementation should handle edge cases appropriately for robustness.", "pass@10": false, "passes": 0}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Visit the URL https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ for more information and consider edge cases such as an empty array or a single element.", "pass@10": true, "passes": 4}
{"task_id": 450, "prompt": "Create a function that takes input as a list of strings and returns strings of a specified length from the list, ensuring that your function handles edge cases, such as empty lists or non-string inputs, gracefully.", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to compute the sum of all subarrays with odd lengths. Odd-length subarrays are defined as subarrays where the number of elements is odd. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Ensure your solution is efficient and consider edge cases where the input list may be empty.", "pass@10": true, "passes": 10}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure the function handles both positive and negative numbers correctly. Make sure the function works well with negative inputs as well as with positive ones. Consider edge cases such as multiplying by zero and the minimum or maximum integer values.", "pass@10": true, "passes": 9}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An Armstrong number is a number that is equal to the sum of cubes of its digits. To elaborate further, if you compute the sum of the cubes of each digit in the number and obtain the number itself, then it's an Armstrong number. For example, 153 is an Armstrong number because 1^3 + 5^3 + 3^3 equals 153. Consider edge cases, such as single-digit numbers, and whether or not they qualify as Armstrong numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to verify if the provided number is even or not. Ensure that your function is efficient and handles edge cases appropriately.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). The function should calculate different possible sums. It should then compare these sums to find the most significant one.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to determine the nth bell number, effectively computing the outcome utilizing suitable algorithms and data structures.", "pass@10": true, "passes": 7}
{"task_id": 71, "prompt": "Create a function that organizes a collection of items. Ensure your solution efficiently processes both numbers and text types.", "pass@10": true, "passes": 9}
{"task_id": 618, "prompt": "Write a function that splits two lists on an item-by-item basis. Make sure the function handles division by zero correctly by returning 'None' for any operation that attempts to divide by zero. Assume that both input lists will always have the same length.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell and moves only right or down, ending on the bottom right cell. We want to find a path with the maximum average over all existing paths, where average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 9}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index, so compose a function to identify common elements from three lists. The function should return a list.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to compute 'a' raised to the power of 'b'. Ensure the function accounts for negative numbers and zero as arguments for both 'a' and 'b'.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values, ensuring it can handle both uppercase and lowercase characters effectively. Consider edge cases where the substring might be at the start or end of the strings in the list.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list, ensuring that each element is transformed according to the format string and that the transformation is consistent across all elements.", "pass@10": true, "passes": 10}
{"task_id": 781, "prompt": "Create a Python function to determine if the number of divisors is even. The function should take an integer as input. Then, it will calculate all the divisors of that integer. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list. The list should have exactly the same elements as the original list. However, the list should not include the k'th element.", "pass@10": true, "passes": 7}
{"task_id": 170, "prompt": "Develop a function that computes the total of numbers in a list. The function should calculate this total starting from two specified indices. Ensure your implementation accounts for edge cases such as negative indices and indices that exceed the list's length. Consider the scenario where the list contains non-integer elements and handle them appropriately in your function.", "pass@10": true, "passes": 1}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4) until n-x =< 0, ensuring that your implementation is efficient and runs in a reasonable time for large values of n.", "pass@10": true, "passes": 9}
{"task_id": 477, "prompt": "Create a Python function that transforms the provided string to lowercase, adeptly processing various types of characters, encompassing unique symbols, numbers, and space characters.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to determine how many elements in three provided lists are identical when located at the same index. Ensure your function efficiently handles lists with varying lengths. Consider edge cases such as lists of different types or empty lists.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length. Ensure your function can handle integer and floating-point inputs for side length. Your solution should also consider edge cases like zero or negative side lengths.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Create a function to determine whether every item in a tuple has the same type of data or not. Ensure that the function handles edge cases. This includes situations like tuples that include nested data structures. The function should also consider empty tuples and tuples with a single element as valid inputs.", "pass@10": true, "passes": 5}
{"task_id": 764, "prompt": "Compose a Python function that tallies the number of digits contained within a specified string. Determine the total number of digits present in the input string provided and ensure the function can handle strings of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to determine the specific number of top products from two given lists, choosing one factor from each list. Make sure the solution manages situations where either or both lists may be empty.", "pass@10": true, "passes": 2}
{"task_id": 308, "prompt": "Create a function to identify the specified number of top products formed by choosing one factor from each of the two provided lists. Ensure the solution handles cases where either or both lists can be empty. The function should be efficient enough to handle large lists without significant performance issues.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure your function handles integer and floating-point inputs efficiently. The function should return zero if either the length or width is negative or zero.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index-wise multiplication of tuple elements, specifically the elements of the given two tuples.", "pass@10": true, "passes": 1}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet. The function should not consider the case of the characters. It should treat uppercase and lowercase letters as the same character in evaluating their positions. For example, the letter 'a' should match position 1, 'b' should match position 2, and so on.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Ensure that the function handles an empty list gracefully by returning an empty list.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Create a method to identify the nth digit. The digit should be in the Newman-Conway sequence.", "pass@10": false, "passes": 0}
{"task_id": 264, "prompt": "Develop a function to compute a canine's age in dog years, assuming the general formula is that the first two years count as 21 human years, and each subsequent year counts as 4 human years.", "pass@10": true, "passes": 4}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers. Ensure your function handles edge cases such as equal numbers or negative numbers effectively. Add appropriate test cases to verify the robustness of your solution.", "pass@10": true, "passes": 2}
{"task_id": 309, "prompt": "Create a Python function that identifies the larger of two numbers. Ensure your function handles edge cases such as equal numbers or negative numbers effectively. Add appropriate test cases to verify the robustness of your solution.", "pass@10": false, "passes": 0}
{"task_id": 274, "prompt": "Write a python function that takes a positive integer n as input and calculates the sum of binomial coefficients at even indices. The function should be efficient and handle large values of n without exceeding time limits by ensuring your solution utilizes mathematical properties to reduce computational overhead.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure that the function handles punctuation properly and ignores any non-alphabetical characters when checking word lengths. Include comments in your code to explain the logic of each step clearly.", "pass@10": true, "passes": 1}
{"task_id": 421, "prompt": "Construct a function. The function should combine each component of a tuple using the specified delimiter.", "pass@10": true, "passes": 2}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure your implementation can efficiently handle very large integers. Consider edge cases such as negative numbers and zero for a comprehensive solution. Include detailed comments in your code to explain the logic and approach used.", "pass@10": true, "passes": 7}
{"task_id": 766, "prompt": "Create a function that returns a list containing all consecutive item pairs derived from a provided list.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements, ensuring that your solution handles both numerical and string inputs effectively.", "pass@10": true, "passes": 9}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts. You need to ensure that the length of the first part of the list is L. Return the resulting lists in a tuple. Ensure to handle cases where L is greater than the length of the list gracefully. Add proper error handling to manage unexpected inputs effectively.", "pass@10": true, "passes": 8}
{"task_id": 583, "prompt": "Create a function that outputs the catalan number. The function should compute the catalan number at the nth position. Ensure that the function handles edge cases efficiently.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to identify the position of the first occurrence of a given number in a sorted array by examining the elements of the array to find where this number first appears.", "pass@10": true, "passes": 1}
{"task_id": 773, "prompt": "Create a function that identifies the occurrence and location of substrings in a string. Return None if there is no match. Ensure your solution optimizes for performance when dealing with large input strings.", "pass@10": true, "passes": 4}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. In other words, the function should determine if the array is consistently increasing or decreasing. Specifically, the array should maintain a consistent trend throughout its entirety. It should not change direction at any point.", "pass@10": true, "passes": 3}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string into capital letters. Make sure to handle edge cases such as empty strings or non-string inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to determine the quotient of two integers. The aim is to derive the result as a quotient. Then, have the result rounded down to the closest whole number.", "pass@10": true, "passes": 9}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary. Ensure that the function is capable of handling lists of varying lengths. It should also be versatile enough to manage different data types.", "pass@10": true, "passes": 2}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure the function handles both integer numbers, which are whole numbers without decimal points. The function should also handle floating-point inputs gracefully, which include numbers with decimal points.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Make sure your function handles tuples of odd length by ignoring the last element. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 7}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. A factorial of a non-negative integer n is the product of all positive integers less than or equal to n. The factorial operation is denoted by n!. Consider edge cases for numbers like 0 and 1, whose factorials have distinct properties.", "pass@10": true, "passes": 6}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted, which can be either in ascending order or descending order.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Write a function to transfer all the numbers towards the end of the provided string. Ensure that the order of the non-numeric characters is preserved while reorganizing the string.", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Create a Python function to determine if all characters are identical or different.", "pass@10": false, "passes": 0}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary, and ensure the function handles empty lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to process a nested list structure and return a single, flattened list. The function should traverse each element of the list. It will then transform any sub-list into a sequence of its individual elements and append these to the flat list. Additionally, sum all of its elements and return the total sum of the flattened list. Ensure that the function efficiently handles deeply nested lists of varying lengths.", "pass@10": true, "passes": 8}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character, ensuring that the function handles both uppercase and lowercase letters accurately.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string. Ensure that the function is optimized for performance even with longer strings. Consider edge cases such as empty strings or strings with no lowercase characters.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Create a function to determine the byte size. You need to calculate the total byte size of the specified tuple.", "pass@10": false, "passes": 0}
{"task_id": 588, "prompt": "Create a Python function to calculate the disparity between the maximum and minimum values in a specified list. Ensure your implementation efficiently handles edge cases, such as an empty list or a list with a single value.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to determine if a given array of integers includes any repeated element. Ensure that the function has a time complexity better than O(n^2) where n is the number of elements in the array.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not. Consider edge cases where the input might be an empty string or a single character. Ensure your solution handles non-string inputs gracefully by returning an appropriate error or message.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list, ensuring the function handles lists containing various data types gracefully.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples. The tuples will contain numerical elements, and each element should correspond to the element at the same position in the other tuple. As a result, the function should return a new tuple containing products of the elements.", "pass@10": false, "passes": 0}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. Find the longest common subsequence. You should consider the sequence of three different strings provided as input. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 3}
{"task_id": 773, "prompt": "Create a function that identifies the occurrence and location of substrings in a string. Return None if there is no match. It is important that your solution optimizes for performance when dealing with large input strings. This is crucial because performance can degrade with larger inputs.", "pass@10": true, "passes": 8}
{"task_id": 252, "prompt": "Create a Python function that converts complex numbers to polar coordinates.", "pass@10": true, "passes": 10}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list. Make sure that the relative sequence of non-zero elements remains unchanged.", "pass@10": true, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Your function needs to accept a string as an input. It should go through the string to identify spaces, commas, and dots for replacement.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary. Ensure that the function is capable of handling lists of varying lengths. It should also be versatile enough to manage different data types. Think about how you might handle key collisions or lists of differing lengths.", "pass@10": false, "passes": 0}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Ensure that the array contains at least two elements for a valid operation.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Construct a function to join each element of a tuple using the given delimiter. Ensure the function manages situations where the tuple has non-string elements by transforming them into strings prior to joining.", "pass@10": true, "passes": 7}
{"task_id": 410, "prompt": "Develop a function to determine the smallest value within a specified heterogeneous list. Ensure that your function can handle different data types appropriately. Consider edge cases where the list may be empty or contain non-comparable data types.", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array. Make sure your solution efficiently handles large input sizes.", "pass@10": true, "passes": 2}
{"task_id": 751, "prompt": "Create a function to determine if the provided array embodies a min heap. Consult https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ for more details.", "pass@10": true, "passes": 6}
{"task_id": 731, "prompt": "Write a function to calculate the surface area on the side of a cone, provided the radius r and height h. Consider edge cases where the inputs might be zero or negative, and handle them appropriately.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers, ensuring that your solution is efficient and handles a wide range of input values gracefully.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the quantity of lists in a provided number of lists. Please ensure your solution efficiently handles very large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers. Your task is to examine each element in the list and determine if it is an even number. To perform this task, utilize a loop to iterate through the list of numbers.", "pass@10": false, "passes": 0}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers by evaluating pairs of tuples within a given list. You should evaluate each pair by calculating their absolute product.", "pass@10": false, "passes": 0}
{"task_id": 782, "prompt": "Write a python function to compute the sum of all subarrays with odd lengths. You can find more information and sample code at Geeks for Geeks. The link is https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/. Ensure your solution is efficient and consider edge cases where the input list may be empty.", "pass@10": true, "passes": 8}
{"task_id": 71, "prompt": "Create a function that organizes a collection of items. Ensure your solution efficiently processes both numbers and text types. Consider edge cases where items may be null or missing values.", "pass@10": true, "passes": 8}
{"task_id": 222, "prompt": "Create a function to ascertain if all elements in a tuple possess the same data type or not.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements. The uneven elements are those which do not have a pair or are inconsistent with the rest. In the nested mixed tuple.", "pass@10": true, "passes": 3}
{"task_id": 450, "prompt": "Create a function that takes input as a list of strings and returns strings of a specified length from the list. Ensure that your function handles edge cases, such as empty lists or non-string inputs, gracefully. Make sure to include test cases to validate your function's correctness.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The Bell numbers count the possible partitions of a set.", "pass@10": true, "passes": 8}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number that is less than n. The function should accept an integer input. It needs to identify the largest number that is smaller than the given integer.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to determine the smallest value among three numbers. The task requires you to identify the most minimal number from the provided set. This involves comparing each of the three integers. ", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Create a Python function that accepts a non-negative number and computes the quantity of prime numbers below the specified non-negative number.", "pass@10": true, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary. Ensure your solution efficiently handles dictionaries with nested structures.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to identify numbers between startnum and endnum in which each number is evenly divisible by each of its digits. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": false, "passes": 0}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. Note that the sum should be computed efficiently to handle large values of n.", "pass@10": true, "passes": 6}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. Ensure that the function handles edge cases like punctuation attached to words seamlessly.", "pass@10": true, "passes": 2}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string. Consider edge cases where the string may contain consecutive whitespace or be completely whitespace.", "pass@10": false, "passes": 0}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. The dataset will be in the form of a list of dictionaries, where each dictionary contains keys for the item's name and price.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple. Ensure that the function handles empty lists effectively.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An Armstrong number is a number that is equal to the sum of cubes of its digits, and to elaborate further, if you compute the sum of the cubes of each digit in the number and obtain the number itself, then it's an Armstrong number. For example, 153 is an Armstrong number because 1^3 + 5^3 + 3^3 equals 153. Consider edge cases, such as single-digit numbers, and whether or not they qualify as Armstrong numbers.", "pass@10": true, "passes": 10}
{"task_id": 264, "prompt": "Create a function to calculate a dog's age in dog years, with the assumption that the initial two years equate to 21 human years, and every year thereafter is equivalent to 4 human years.", "pass@10": true, "passes": 3}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Visit https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ for more information.", "pass@10": true, "passes": 9}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure the function handles both positive and negative numbers correctly while working well with negative inputs as well as with positive ones. Consider edge cases such as multiplying by zero and the minimum or maximum integer values.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to determine the specific number of top products from two given lists, choosing one factor from each list. Make sure to handle cases where one or both of the lists might not have any elements. The solution should manage situations where either or both lists may be empty.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list. First, iterate through the list of numbers. Calculate their total product during this iteration. Then take the product obtained and divide it by the length of the list.", "pass@10": true, "passes": 9}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. To solve this problem, you need to determine the longest common subsequence. The task is to find this sequence. You should consider the sequence of three different strings provided as input. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 9}
{"task_id": 404, "prompt": "Create a Python function to determine the smaller of two numbers, ensuring to address special cases where the inputs might be non-comparable, such as when they are of different data types, and consider implementing custom error handling to improve robustness of your function.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Develop a function that computes the total of numbers in a list. The function should calculate this total starting from two specified indices. Ensure your implementation accounts for edge cases. These cases include negative indices and indices that exceed the list's length. Consider the scenario where the list contains non-integer elements and handle them appropriately in your function.", "pass@10": true, "passes": 7}
{"task_id": 580, "prompt": "Write a function to remove uneven elements. The uneven elements are those which do not have a pair or are inconsistent with the rest. In the nested mixed tuple. Ensure the function handles various types of elements within the tuple.", "pass@10": false, "passes": 0}
{"task_id": 90, "prompt": "Create a Python function to determine the length of the longest word. Ensure the function can handle a list of mixed-case words and ignore punctuation. Consider edge cases such as empty strings and lists with only punctuation marks.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function that splits two lists on an item-by-item basis. The function should iterate through each element of the lists. It should pair items at the same position from both lists and perform the division operation. Make sure the function handles division by zero correctly by returning 'None' for any operation that attempts to divide by zero.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell and moves only right or down. The path ends on the bottom right cell. We want to find a path with the maximum average over all existing paths, where average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Create a function to check if the given amount leads to neither a profit nor a deficit. Ensure that the function handles all potential edge cases effectively.", "pass@10": true, "passes": 7}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N. The i-th element of the tuple is equal to t_i * t_{i+1}. Each element in the resultant tuple should be calculated as the multiplication of adjacent elements in the provided tuple. You need to ensure that each element in the resultant tuple is the product of consecutive elements from the input tuple.", "pass@10": true, "passes": 1}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Ensure that the function handles division by zero gracefully by returning 'None' for any division by zero cases.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Create a function to carry out the bitwise XOR operation on the provided tuples. Ensure the function handles tuples of any length. The function should also gracefully handle cases where an input tuple is empty or contains non-integer elements.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string into capital letters. Make sure to handle edge cases such as empty strings or non-string inputs gracefully. The function should also account for strings that are already partially or fully capitalized.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure your function handles integer and floating-point inputs efficiently. The function should return zero if either the length or width is negative or zero. Consider edge cases where inputs are very large or very small.", "pass@10": true, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index, so write a function to find common elements from three lists. The function should return a list. You should make sure your implementation handles lists of different lengths gracefully.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column, ensuring that your solution efficiently handles large matrices by considering both time and space complexities. Make sure to properly handle edge cases such as empty matrices or columns with non-numeric data.", "pass@10": true, "passes": 1}
{"task_id": 740, "prompt": "Create a function that transforms the provided tuple into a dictionary of key-value pairs using neighboring elements. Ensure your function properly deals with tuples of odd lengths by disregarding the final element. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to compute 'a' raised to the power of 'b'. Make sure to write this function clearly and accurately. Ensure the function accounts for negative numbers and zero as arguments for both 'a' and 'b'.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4) until n-x =< 0, ensuring that your implementation is efficient and runs in a reasonable time for large values of n. Consider potential edge cases where n is very small or very large.", "pass@10": true, "passes": 8}
{"task_id": 274, "prompt": "Write a python function that accepts a positive integer n and computes the sum of binomial coefficients at even indices. The function should be efficient and handle large values of n without exceeding time limits. Consider edge cases where n is extremely large, as your solution should be optimized for performance in such scenarios.", "pass@10": true, "passes": 8}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts. You need to ensure that the length of the first part of the list is L. Return the resulting lists in a tuple. Ensure to handle cases where L is greater than the length of the list gracefully. Add proper error handling to manage unexpected inputs effectively. Consider edge cases like empty lists and negative values for L.", "pass@10": true, "passes": 1}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. A factorial of a non-negative integer n is the product of all positive integers less than or equal to n. The factorial operation is denoted by n!. Consider edge cases for numbers like 0 and 1, whose factorials have distinct properties. When calculating large factorials, efficiency and handling overflow might become significant constraints.", "pass@10": true, "passes": 1}
{"task_id": 477, "prompt": "Create a Python function that transforms the provided string to lowercase. It should adeptly process various types of characters by handling them effectively and correctly. This includes encompassing unique symbols, numbers, and space characters.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Compose a Python function that counts the quantity of digits in a given string. Determine the total number of digits present in the input string provided and ensure the function can handle strings of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list. The list should contain the same elements, but the k'th element removed. Be sure to handle cases where k is out of the list's index range.", "pass@10": false, "passes": 0}

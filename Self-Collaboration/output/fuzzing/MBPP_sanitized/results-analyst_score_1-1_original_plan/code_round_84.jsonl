{"source_file": "Benchmark Questions Verification V2.ipynb", "task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube. You are provided with the side length of the cube.", "code": "def lateralsurface_cube(l):\n  LSA = 4 * (l * l)\n  return LSA", "test_imports": [], "test_list": ["assert lateralsurface_cube(5)==100", "assert lateralsurface_cube(9)==324", "assert lateralsurface_cube(10)==400", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(4) == 64", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(3) == 36", "assert lateralsurface_cube(1) == 4", "assert lateralsurface_cube(4) == 64", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(6) == 144", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(1) == 4", "assert lateralsurface_cube(4) == 64", "assert lateralsurface_cube(3) == 36", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(2) == 16", "assert lateralsurface_cube(4) == 64", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(6) == 144", "assert lateralsurface_cube(11) == 484", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(11) == 484", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(6) == 144", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(11) == 484", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(11) == 484", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(4) == 64", "assert lateralsurface_cube(11) == 484", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(11) == 484", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(11) == 484", "assert lateralsurface_cube(4) == 64", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(13) == 676", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(13) == 676", "assert lateralsurface_cube(6) == 144", "assert lateralsurface_cube(13) == 676", "assert lateralsurface_cube(10) == 400", "assert lateralsurface_cube(12) == 576", "assert lateralsurface_cube(13) == 676", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(12) == 576", "assert lateralsurface_cube(12) == 576", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(12) == 576", "assert lateralsurface_cube(7) == 196", "assert lateralsurface_cube(6) == 144", "assert lateralsurface_cube(14) == 784", "assert lateralsurface_cube(12) == 576", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(5) == 100", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(13) == 676", "assert lateralsurface_cube(13) == 676", "assert lateralsurface_cube(9) == 324", "assert lateralsurface_cube(8) == 256", "assert lateralsurface_cube(13) == 676"], "entry_point": "lateralsurface_cube", "completion": "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "completions": ["from typing import *\ndef lateralsurface_cube(side_length):\n    if side_length <= 0:\n        return \"Side length must be a positive number\"\n    \n    lateral_surface_area = 4 * (side_length ** 2)\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5) == 100)\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "from typing import *\ndef lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"], "session_history": {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Understand the concept of lateral surface area of a cube\",\n      \"Calculate the lateral surface area using the provided side length\"\n    ],\n    \"high-level_steps\": [\n      \"Define a function lateralsurface_cube that takes the side length of the cube as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, "session_historys": [{"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Calculate the lateral surface area of a cube\",\n      \"Accept user input for the side length of the cube\",\n      \"Validate the input to ensure it is a positive number\"\n    ],\n    \"steps\": [\n      \"Accept user input for the side length of the cube\",\n      \"Validate the input to ensure it is a positive number\",\n      \"Calculate the lateral surface area of the cube using the formula: 4 * (side length ^ 2)\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    if side_length <= 0:\n        return \"Side length must be a positive number\"\n    \n    lateral_surface_area = 4 * (side_length ** 2)\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 16)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    if side_length <= 0:\n        return \"Side length must be a positive number\"\n    \n    lateral_surface_area = 4 * (side_length ** 2)\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Calculate the lateral surface area of a cube based on the provided side length\",\n      \"Define a function that takes the side length as input and returns the lateral surface area\"\n    ],\n    \"steps\": [\n      \"Define a function lateralsurface_cube that takes a side length as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5) == 100)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5) == 100)\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Understand the concept of lateral surface area of a cube\",\n      \"Calculate the lateral surface area using the provided side length\"\n    ],\n    \"high-level_steps\": [\n      \"Define a function lateralsurface_cube that takes the side length of the cube as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Understand the concept of lateral surface area of a cube\",\n      \"Calculate the lateral surface area using the provided side length\"\n    ],\n    \"high-level_steps\": [\n      \"Define a function lateralsurface_cube that takes the side length of the cube as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Calculate the lateral surface area of a cube based on the provided side length\",\n      \"Define a function that takes the side length as input and returns the lateral surface area\"\n    ],\n    \"steps\": [\n      \"Define a function lateralsurface_cube that takes a side length as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Understand the concept of lateral surface area of a cube\",\n      \"Calculate the lateral surface area using the provided side length\"\n    ],\n    \"high-level_steps\": [\n      \"Define a function lateralsurface_cube that takes the side length of the cube as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Understand the concept of lateral surface area of a cube\",\n      \"Calculate the lateral surface area using the provided side length\"\n    ],\n    \"high-level_steps\": [\n      \"Define a function lateralsurface_cube that takes the side length of the cube as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Calculate the lateral surface area of a cube based on the provided side length\",\n      \"Define a function that takes the side length as input and returns the lateral surface area\"\n    ],\n    \"steps\": [\n      \"Define a function lateralsurface_cube that takes a side length as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Understand the concept of lateral surface area of a cube\",\n      \"Calculate the lateral surface area using the provided side length\"\n    ],\n    \"high-level_steps\": [\n      \"Define a function lateralsurface_cube that takes the side length of the cube as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Understand the concept of lateral surface area of a cube\",\n      \"Calculate the lateral surface area using the provided side length\"\n    ],\n    \"high-level_steps\": [\n      \"Define a function lateralsurface_cube that takes the side length of the cube as input\",\n      \"Calculate the lateral surface area of the cube using the formula 4 * side_length^2\",\n      \"Return the calculated lateral surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def lateralsurface_cube(side_length):\n    lateral_surface_area = 4 * side_length ** 2\n    return lateral_surface_area\n\n# Test the function with the example provided\nprint(lateralsurface_cube(5))  # Output should be 100\n"}}], "test": ["def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5)==100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9)==324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10)==400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(4) == 64", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(3) == 36", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(1) == 4", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(4) == 64", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(6) == 144", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(1) == 4", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(4) == 64", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(3) == 36", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(2) == 16", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(4) == 64", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(6) == 144", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(11) == 484", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(11) == 484", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(6) == 144", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(11) == 484", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(11) == 484", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(4) == 64", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(11) == 484", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(11) == 484", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(11) == 484", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(4) == 64", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(13) == 676", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(13) == 676", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(6) == 144", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(13) == 676", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(10) == 400", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(12) == 576", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(13) == 676", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(12) == 576", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(12) == 576", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(12) == 576", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(7) == 196", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(6) == 144", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(14) == 784", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(12) == 576", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(5) == 100", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(13) == 676", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(13) == 676", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(9) == 324", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(8) == 256", "def check(lateralsurface_cube):\n\tassert lateralsurface_cube(13) == 676"], "scores": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "pass_results": [true, true, true, true, true, true, true, true, true, true], "pass_test_cases_num": [102, 102, 102, 102, 102, 102, 102, 102, 102, 102], "passed": true, "pass": true, "pass_num": 10, "round": 84, "mutate_method": "expand_one2two", "save_node": false, "parent_index": 84}

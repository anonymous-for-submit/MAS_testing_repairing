{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": true, "passes": 9}
{"task_id": 3, "prompt": "Write a python function to identify non-prime numbers.", "pass@10": true, "passes": 3}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": true, "passes": 9}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": true, "passes": 9}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": true, "passes": 3}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": true, "passes": 5}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": true, "passes": 8}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": true, "passes": 9}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 8}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": true, "passes": 9}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 5}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 9}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": true, "passes": 4}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": true, "passes": 5}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": true, "passes": 9}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": true, "passes": 8}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 87, "prompt": "Write a function to merge three dictionaries into a single dictionary.", "pass@10": true, "passes": 1}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": true, "passes": 6}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": true, "passes": 7}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 9}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not.", "pass@10": true, "passes": 2}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": true, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m).", "pass@10": true, "passes": 2}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": true, "passes": 6}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": true, "passes": 5}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists.", "pass@10": true, "passes": 8}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": true, "passes": 8}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": true, "passes": 9}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.", "pass@10": true, "passes": 7}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": true, "passes": 1}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": true, "passes": 9}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 8}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": true, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": true, "passes": 8}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": true, "passes": 9}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 8}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": true, "passes": 8}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": true, "passes": 2}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": true, "passes": 4}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": true, "passes": 9}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 6}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": true, "passes": 10}
{"task_id": 223, "prompt": "Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)", "pass@10": true, "passes": 1}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.", "pass@10": true, "passes": 2}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": true, "passes": 3}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 4}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": true, "passes": 8}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number.", "pass@10": true, "passes": 4}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": true, "passes": 3}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": true, "passes": 6}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": true, "passes": 1}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": true, "passes": 1}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": true, "passes": 3}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.", "pass@10": true, "passes": 2}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": true, "passes": 1}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": true, "passes": 7}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": true, "passes": 9}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 273, "prompt": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": true, "passes": 5}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": true, "passes": 8}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number.", "pass@10": true, "passes": 2}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": true, "passes": 7}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 8}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": true, "passes": 5}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle.", "pass@10": true, "passes": 9}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number.", "pass@10": true, "passes": 2}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": true, "passes": 9}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": true, "passes": 1}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 4}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": true, "passes": 9}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": true, "passes": 3}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 8}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary.", "pass@10": true, "passes": 3}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 4}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": true, "passes": 6}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": true, "passes": 9}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": true, "passes": 9}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple.", "pass@10": true, "passes": 2}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 7}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": true, "passes": 3}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": true, "passes": 7}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 7}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": true, "passes": 1}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": true, "passes": 10}
{"task_id": 452, "prompt": "Write a function that gives loss amount on a sale if the given amount has loss else return 0.", "pass@10": true, "passes": 1}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": true, "passes": 6}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": true, "passes": 7}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": true, "passes": 4}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": true, "passes": 1}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": true, "passes": 7}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.", "pass@10": true, "passes": 8}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": true, "passes": 8}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 5}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": true, "passes": 7}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": true, "passes": 9}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": true, "passes": 7}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": true, "passes": 9}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": true, "passes": 5}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": true, "passes": 2}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": true, "passes": 8}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list.", "pass@10": true, "passes": 8}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": true, "passes": 8}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": true, "passes": 1}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": true, "passes": 4}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list.", "pass@10": true, "passes": 8}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": true, "passes": 9}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.", "pass@10": true, "passes": 2}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": true, "passes": 1}
{"task_id": 643, "prompt": "Write a function that checks if a strings contains 'z', except at the start and end of the word.", "pass@10": true, "passes": 1}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 5}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 5}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": true, "passes": 9}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h.", "pass@10": true, "passes": 6}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 3}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 1}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 7}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": true, "passes": 10}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": true, "passes": 1}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 4}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 9}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to caluclate the area of a tetrahedron.", "pass@10": true, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 8}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": true, "passes": 10}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 8}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 4}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list.", "pass@10": true, "passes": 6}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": true, "passes": 10}
{"task_id": 759, "prompt": "Write a function to check whether a given string is a decimal number with a precision of 2.", "pass@10": true, "passes": 1}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": true, "passes": 7}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": true, "passes": 9}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,", "pass@10": true, "passes": 1}
{"task_id": 769, "prompt": "Write a python function to get the difference between two lists.", "pass@10": true, "passes": 2}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.", "pass@10": true, "passes": 3}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 2}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 10}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 9}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": true, "passes": 1}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": true, "passes": 4}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 797, "prompt": "Write a python function to find the sum of all odd natural numbers within the range l and r.", "pass@10": true, "passes": 1}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.", "pass@10": true, "passes": 9}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": true, "passes": 9}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 10}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not.", "pass@10": true, "passes": 1}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": true, "passes": 9}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": true, "passes": 9}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": true, "passes": 5}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": true, "passes": 6}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": true, "passes": 2}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": true, "passes": 8}
{"task_id": 576, "prompt": "Write a python function to check whether a list is sublist of another or not.", "pass@10": true, "passes": 6}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": true, "passes": 8}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples.", "pass@10": true, "passes": 4}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": true, "passes": 3}
{"task_id": 582, "prompt": "Write a function to check if a dictionary is empty", "pass@10": true, "passes": 9}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 8}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 592, "prompt": "Write a python function to find the sum of the product of consecutive binomial co-efficients.", "pass@10": true, "passes": 4}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the elements that are common between the two lists provided. This function should compare each element from the first list with all elements in the second list.", "pass@10": true, "passes": 5}
{"task_id": 3, "prompt": "Write a python function to identify numbers that are not prime. You need to check each number to determine if it has divisors other than 1 and itself. If it has such divisors, it is considered a non-prime number.", "pass@10": true, "passes": 5}
{"task_id": 4, "prompt": "Write a function to identify the n biggest numbers from a provided list of numbers, returned in descending order.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to identify all words in a string that have a length of 4 characters or more. The function should scan through each word carefully. Words shorter than four characters should not be included in the result.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": true, "passes": 8}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure that this sorting operation maintains the relative order of the rows which have the same sum.", "pass@10": true, "passes": 9}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element. Your task is to determine if there are any repeated numbers within the list. The function should return a boolean value indicating the presence or absence of duplicates.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Create a Python function to determine if the two provided integers have reverse signs or not.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 4}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list. Ensure your solution efficiently handles large inputs.", "pass@10": true, "passes": 9}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. Ensure that the function can handle cases where the tuples contain varying data types.", "pass@10": true, "passes": 8}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": true, "passes": 7}
{"task_id": 67, "prompt": "Write a function to calculate the quantity of methods to divide a collection of Bell numbers.", "pass@10": true, "passes": 5}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not. Ensure your solution efficiently handles arrays of varying lengths and data ranges.", "pass@10": true, "passes": 9}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. Consider edge cases where the pattern array might be empty or have repetitive elements.", "pass@10": true, "passes": 3}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the sequence known as the Newman-Conway sequence. This sequence is an integer sequence with specific rules for generating it.", "pass@10": true, "passes": 10}
{"task_id": 87, "prompt": "Create a function that combines three dictionaries into one dictionary.", "pass@10": false, "passes": 0}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. The function should handle lists containing any type of hashable elements efficiently and correctly.", "pass@10": true, "passes": 2}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n. Consider edge cases such as negative numbers and zero when implementing your solution.", "pass@10": true, "passes": 6}
{"task_id": 90, "prompt": "Write a Python function to determine the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Create a function to compute 'a' raised to the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists. The function should iterate through each list within the main list of lists to determine its size. After evaluating each list, the function should identify which one is the shortest.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a list of lists that has been flattened. This can be achieved by taking each individual list and combining them into a single list, effectively removing any nested structures. The function should return the frequency of each element as a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. Ensure that the list is not empty to avoid division by zero errors.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer. The function should be efficient in terms of time complexity to handle large integers effectively.", "pass@10": true, "passes": 9}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists. Ensure your function efficiently handles cases where the lists vary significantly in size or contain complex data types.", "pass@10": true, "passes": 2}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not. Ensure your function handles both positive and negative numbers correctly, as well as edge cases like empty strings or strings with whitespace.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product. Calculate this product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number. Be sure to consider edge cases where no amicable numbers exist within the range.", "pass@10": true, "passes": 4}
{"task_id": 125, "prompt": "Write a function to find the maximum difference. Difference refers to the calculation between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": false, "passes": 0}
{"task_id": 127, "prompt": "Construct a function to compute the product of two whole numbers.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Create a function to identify words from a specified list that exceed n characters in length.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. Ensure that your function considers all relevant properties of a magic square, including equal sums of its rows, columns, and diagonals.", "pass@10": true, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel). Ensure all non-vowel characters remain in their original positions while reversing the order of vowels.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to transform a tuple into a string.", "pass@10": true, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers. Ensure your function handles both positive and negative numbers correctly and returns 0 if the list contains no negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Create a function to arrange a series of items in order.", "pass@10": true, "passes": 5}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, combining the terms n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Create a function to count how many pairs of numbers in a list have an XOR result that is even.", "pass@10": true, "passes": 9}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number. Make sure your solution efficiently handles very large numbers.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string. Ensure the function handles multiple spaces consecutively and preserves the original formatting of the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that accepts a list and an integer n and returns a list with the n largest elements from the list.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length. Ensure that the function handles invalid inputs gracefully by returning an appropriate error message.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.", "pass@10": true, "passes": 1}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n. The sequences must have elements that are positive integers. Each element is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": true, "passes": 5}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure that your function handles cases where either list could be empty gracefully.", "pass@10": true, "passes": 8}
{"task_id": 244, "prompt": "Create a Python function that computes the subsequent perfect square that is more than a specified number.", "pass@10": false, "passes": 0}
{"task_id": 251, "prompt": "Design a function that accepts a list and an item, then positions the item before each entry in the list, and provides the modified list as output.", "pass@10": true, "passes": 2}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates. Your solution should also handle cases where the complex number is zero.", "pass@10": true, "passes": 4}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, generating all combinations (with repetition) of the elements of the list and returning a list with a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number. Ensure your solution is efficient, especially for larger inputs.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number. Make sure the function handles all possible number inputs, including negative numbers and zero.", "pass@10": true, "passes": 9}
{"task_id": 259, "prompt": "Write a function that will help to maximize these two tuples. The function should take two tuples as parameters and analyze them.", "pass@10": true, "passes": 3}
{"task_id": 260, "prompt": "Write a function that returns the nth prime number which belongs to the Newman\u2013Shanks\u2013Williams sequence. The Newman\u2013Shanks\u2013Williams sequence is a special sequence of prime numbers.", "pass@10": false, "passes": 0}
{"task_id": 261, "prompt": "Create a function that accepts two tuples and executes a division operation element-by-element on the provided tuples.", "pass@10": true, "passes": 2}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog\u2019s years. You need to account for the fact that dogs mature more quickly than humans in the initial years. A one-year-old dog is roughly equivalent to a 15-year-old human. For the second year, the dog is approximately equivalent to a 9-year-old human. After that, each dog year is equivalent to about 5 human years. Develop a solution that utilizes these conversion rates.", "pass@10": false, "passes": 0}
{"task_id": 268, "prompt": "Create a function to determine the n-th star number.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character. Make sure to handle both uppercase and lowercase letters appropriately.", "pass@10": true, "passes": 9}
{"task_id": 270, "prompt": "Create a Python function to calculate the sum of even integers located at even indices in a list.", "pass@10": true, "passes": 6}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. Ensure that your solution efficiently handles large values of n without causing significant performance issues.", "pass@10": true, "passes": 9}
{"task_id": 272, "prompt": "Create a function that accepts a list of tuples and returns a list including the last element of each tuple.", "pass@10": true, "passes": 9}
{"task_id": 273, "prompt": "Create a function that receives a pair of tuples and reduces the elements of the first tuple by those of the second tuple at corresponding indices.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function that takes in an integer and checks whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find the quotient of two numbers, ensuring that the result is rounded down to the nearest integer.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle. A right angled triangle is a triangle in which one of the angles is a right angle. This means that the angle measures 90 degrees.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Create a function to identify the highest value within a provided heterogeneous list.", "pass@10": true, "passes": 8}
{"task_id": 296, "prompt": "Please write a Python function that calculates the number of inversions in an array.", "pass@10": true, "passes": 7}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits. The function should efficiently compute the count for different values of n using optimal algorithms.", "pass@10": false, "passes": 0}
{"task_id": 308, "prompt": "Create a function to locate the specified quantity of greatest products resulting from two provided lists, picking one element from each list.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Create a Python method to determine the larger of two values.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": false, "passes": 0}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2. Specifically, it should be less than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 389, "prompt": "Write a function to determine the n'th lucas number. The Lucas numbers are similar to the Fibonacci sequence. In fact, they share a similar recursive formula. Instead of starting with 0 and 1, they start with 2 and 1. This sequence serves as an alternative to the Fibonacci sequence in various areas of mathematics and computer science. The recursive formula for lucas numbers is given as: lucas(n) = lucas(n-1) + lucas(n-2).", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 9}
{"task_id": 391, "prompt": "Write a function to transform multiple lists into a nested dictionary.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with the greatest maximum length. The function should take multiple lists as input. You need to iterate through each list provided. The list with the greatest number of elements should be identified. Return the list that has this maximum length.", "pass@10": false, "passes": 0}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. Ensure that your function efficiently handles tuples of varying lengths.", "pass@10": true, "passes": 9}
{"task_id": 404, "prompt": "Create a Python function to determine the lesser of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple. Ensure that the function handles different data types efficiently.", "pass@10": true, "passes": 9}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd. Make sure the function handles both positive and negative numbers correctly.", "pass@10": true, "passes": 1}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 414, "prompt": "Create a Python function that determines if any element in a sequence is present in another sequence.", "pass@10": true, "passes": 10}
{"task_id": 417, "prompt": "Create a function to search for a shared starting element in the provided list of tuples.", "pass@10": true, "passes": 2}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": true, "passes": 4}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. The first sentence needs some clarification. You need to find the cubes of each of the first n natural numbers in this context. Then, you should calculate their average.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the provided tuples. The provided tuples will be given as inputs, and they are the data that you need to work with. Extract the elementwise operation results from these given two tuples.", "pass@10": true, "passes": 4}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. The function should accept a list of integers as its input argument. It will then process this list to merge all the integer elements together sequentially into one continuous integer value.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to carry out multiplication of tuple elements at corresponding indices in the provided two tuples.", "pass@10": true, "passes": 8}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements. You need to do this for each element present in a list.", "pass@10": true, "passes": 10}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": true, "passes": 8}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": true, "passes": 10}
{"task_id": 452, "prompt": "Write a function that gives loss amount on a sale if the given amount has loss else return 0. Ensure that the function handles input validation and edge cases effectively.", "pass@10": true, "passes": 1}
{"task_id": 456, "prompt": "Design a function that reverses each string in a provided list of string values.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 9}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.", "pass@10": true, "passes": 3}
{"task_id": 474, "prompt": "Write a function that takes a string and a set of character mappings as inputs. The function should identify specific characters in the input string. It should then replace those characters based on the given mappings. The result should be a new string with the characters altered according to the mappings. Make sure the function handles edge cases appropriately.", "pass@10": false, "passes": 0}
{"task_id": 476, "prompt": "Create a Python function that calculates the total of the maximum and minimum values in a specified array.", "pass@10": true, "passes": 9}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words that are separated by spaces in a given string. The process involves reversing the order of words while maintaining the spaces between them.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians. Ensure to validate the input to handle edge cases.", "pass@10": true, "passes": 9}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching substring, a start index and an end index. The function should handle cases where there is no match by returning a suitable indicator.", "pass@10": true, "passes": 9}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. A Bell number is a number that represents the number of partitions of a set. It essentially counts the ways a set with n elements can be divided into non-empty subsets.", "pass@10": true, "passes": 6}
{"task_id": 610, "prompt": "Provide a Python function that accepts a list and yields a list identical in elements, except for the k'th element which is omitted.", "pass@10": true, "passes": 5}
{"task_id": 611, "prompt": "Develop a function that, when provided a matrix expressed as a list of lists, returns the highest value of the n'th column.", "pass@10": true, "passes": 9}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Consider edge cases where elements might be zero to ensure the function handles them gracefully.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Ensure that the function handles division by zero gracefully without crashing.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number present in a list. You have to ensure the function iterates through all elements. Then, for each element, calculate its n-th power.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Create a Python function that identifies the smallest absent number in a sorted list of natural numbers.", "pass@10": false, "passes": 0}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": true, "passes": 4}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list. You are given a list that contains zeroes and other integers. Your task is to rearrange the list so that all zeroes are shifted to the end.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. Ensure your function accurately identifies scenarios where the amounts are equal, indicating neither profit nor loss.", "pass@10": true, "passes": 8}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius. Ensure your function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 4}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells. The path starts from the top-left cell. It moves only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 4}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Ensure that the function efficiently handles dictionaries with a large number of entries.", "pass@10": true, "passes": 2}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculates the sum of all digits of the base raised to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element is the product of t_i and t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. The function should handle lists of any length and apply element-wise addition.", "pass@10": true, "passes": 10}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h. Assume that the measurements are in units necessary for the formula and return the result with a precision up to two decimal places.", "pass@10": false, "passes": 0}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Ensure the function handles consecutive delimiters gracefully.", "pass@10": true, "passes": 8}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": false, "passes": 0}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Visit the link for more information: https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 5}
{"task_id": 738, "prompt": "Write a function to determine the geometric sum for n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": false, "passes": 0}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. A triangular number is a number which can be expressed as a sum of all consecutive integers.", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. The tetrahedron is a type of polyhedron, which has four triangular faces. It is a three-dimensional shape with four vertices and six edges.", "pass@10": true, "passes": 9}
{"task_id": 750, "prompt": "Write a function. The function should take two inputs: a tuple and a list. You need to add the given tuple to the given list.", "pass@10": true, "passes": 6}
{"task_id": 752, "prompt": "Write a function to determine the nth Jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 5}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. In this problem, you will receive a list of tuples as input. Implement your function so that it correctly extracts and returns the k smallest records. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 7}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where each list is changed to a tuple and the corresponding value of that tuple represents how many times it appears in the initial list.", "pass@10": true, "passes": 10}
{"task_id": 759, "prompt": "Create a function to determine if a specified string represents a decimal number with two decimal places.", "pass@10": false, "passes": 0}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are represented using numbers ranging from 1 to 12.", "pass@10": true, "passes": 7}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Ensure the input list contains at least two elements for meaningful output.", "pass@10": true, "passes": 10}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion takes as input a list of numbers. It also takes the sum as input.", "pass@10": false, "passes": 0}
{"task_id": 769, "prompt": "Write a python function to get the difference between two lists. Ensure that the function accounts for duplicate elements present in the lists.", "pass@10": true, "passes": 1}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Create a method that identifies the frequency and location of substrings inside a given string. Return None if there is no match.", "pass@10": true, "passes": 2}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements. These elements should be organized into sublists.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Create a function that calculates the total number of lists contained within another list. The function should return a dictionary, where each list is converted into a tuple, and the tuple's value represents the count of how often it appears.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/ Be sure to handle edge cases such as empty lists and tuples, and ensure the function is efficient for larger datasets.", "pass@10": true, "passes": 3}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php Ensure your solution optimizes for performance when dealing with large numbers.", "pass@10": true, "passes": 9}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 4}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. Make sure to handle cases where the string or list might be empty.", "pass@10": true, "passes": 6}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 9}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. A sorted array is an array where the elements are arranged in a non-decreasing order. It means that each element is less than or equal to the next one.", "pass@10": true, "passes": 8}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. This function should receive an array of numbers. It should then compute the sum of all the elements in the array.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit. The function should efficiently handle large numbers and edge cases to ensure robustness.", "pass@10": true, "passes": 9}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. Ensure your solution efficiently handles edge cases, such as when all integers are distinct or when all are the same.", "pass@10": true, "passes": 3}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not. If the product of numbers in a list is divisible by 2, then it is even. Otherwise, it is not even.", "pass@10": false, "passes": 0}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists. This list should be the one whose sum of elements is the highest.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers. You should also calculate the sum of the first n natural numbers separately.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs. The pairs should be such that their xor value is odd.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Develop a function to change the case of each character in a string.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": true, "passes": 9}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits. You have to calculate the sum of a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries. Ensure the function handles edge cases gracefully, such as when N is zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the numbers that are unique in a given list. The list will contain various numbers. Out of these numbers, you need to find those that are unique. Once you identify the unique numbers, calculate their product.", "pass@10": true, "passes": 3}
{"task_id": 576, "prompt": "Write a python function to check whether a list is sublist of another or not.", "pass@10": false, "passes": 0}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. Consider edge cases such as zero or negative numbers when implementing your solution.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples. Ensure your solution efficiently handles large tuples by leveraging set operations for quick membership tests and differences.", "pass@10": true, "passes": 5}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": true, "passes": 1}
{"task_id": 582, "prompt": "Create a function to determine whether a dictionary contains any elements.", "pass@10": true, "passes": 3}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Ensure your solution efficiently handles large datasets.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list. Ensure the function efficiently handles lists of varying sizes and data types.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to identify perfect squares between two specified numbers.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Create a function to calculate the byte size of the provided tuple.", "pass@10": true, "passes": 9}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits. In other words, it is a number that can be expressed as the sum of powers of its digits.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to determine if a given number has odd parity, ensuring the function handles both positive and negative numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. Ensure your solution efficiently handles edge cases. Such edge cases include situations when all integers are distinct or when all are the same.", "pass@10": true, "passes": 2}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists. Ensure your function efficiently handles cases where the lists vary significantly in size or contain complex data types. Consider edge cases such as empty lists or lists containing only dissimilar elements.", "pass@10": true, "passes": 6}
{"task_id": 582, "prompt": "Create a function to determine if a dictionary has any elements.", "pass@10": false, "passes": 0}
{"task_id": 786, "prompt": "Create a function that identifies the correct position for a given value in ascending order.", "pass@10": true, "passes": 4}
{"task_id": 67, "prompt": "Write a function to calculate the quantity of methods to divide a collection of Bell numbers. Consider optimizing the algorithm for cases where the numbers are large.", "pass@10": true, "passes": 5}
{"task_id": 2, "prompt": "Write a function to find the elements that are common between the two lists provided. This function should compare each element from the first list. It should then compare each of these elements with all elements in the second list.", "pass@10": true, "passes": 3}
{"task_id": 88, "prompt": "Create a function to determine how often each element appears in a list and represent the result as a dictionary. The function should handle lists containing any type of hashable elements efficiently and correctly.", "pass@10": true, "passes": 7}
{"task_id": 750, "prompt": "Write a function. The function should accept two inputs: a tuple and a list. You need to add the given tuple to the given list.", "pass@10": true, "passes": 10}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection. This means you need to find the common elements that appear in each of the given tuple list. This should be done irrespective of their order.", "pass@10": true, "passes": 1}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number. Ensure that edge cases are taken into account where there are no amicable numbers within the range.", "pass@10": true, "passes": 5}
{"task_id": 294, "prompt": "Create a function to identify the highest value within a provided heterogeneous list.", "pass@10": true, "passes": 9}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. Make sure that the function is versatile enough to handle any type of data that may be present in the tuples. Ensure that the function can handle cases where the tuples contain varying data types.", "pass@10": true, "passes": 9}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the order specified in the patterns array. Consider edge cases where the pattern array might be empty or have repetitive elements.", "pass@10": false, "passes": 0}
{"task_id": 580, "prompt": "Design a function to eliminate non-uniform components within the nested diverse tuple.", "pass@10": true, "passes": 1}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Your solution should handle different data types effectively and ensure that edge cases, such as empty input or strings without these characters, are also addressed.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 5}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. Make sure your function correctly determines situations where the amounts are identical, showing neither profit nor loss.", "pass@10": true, "passes": 8}
{"task_id": 18, "prompt": "Create a function that takes out characters from the first string that are found in the second string.", "pass@10": true, "passes": 9}
{"task_id": 769, "prompt": "Write a python function to get the difference between two lists. Make sure the function takes into consideration any repeated elements in the lists.", "pass@10": false, "passes": 0}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern, returning the matching substring, a start index and an end index. The function should handle cases where there is no match by returning a suitable indicator.", "pass@10": true, "passes": 7}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. The tetrahedron is a type of polyhedron. It has four triangular faces. It is a three-dimensional shape with four vertices and six edges.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that accepts two numbers and gives back a tuple containing the second number followed by the first number. Make sure the function handles all possible number inputs, including negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Create a Python function that calculates the total of the maximum and minimum values in a specified array. Ensure that the function handles both positive and negative numbers effectively.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure that your function handles cases where either list could be empty gracefully. Additionally, consider optimizing the function to handle large lists efficiently.", "pass@10": true, "passes": 7}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list. Ensure your solution efficiently handles large lists for optimal performance.", "pass@10": true, "passes": 9}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. Ensure that your function efficiently handles tuples of varying lengths. Make sure to handle cases where the tuples may contain nested empty tuples as well.", "pass@10": true, "passes": 6}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and determines the sum of the first n even natural numbers. The numbers are raised to the fifth power.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Create a function to compute the nearest smaller palindrome for a given integer, which should be outputted as an integer. The function needs to be time-efficient to process large integers appropriately.", "pass@10": false, "passes": 0}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells. The path starts from the top-left cell. It moves only right or down. The path ends on the bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 3}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.", "pass@10": true, "passes": 2}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character, ensuring to handle both uppercase and lowercase letters appropriately.", "pass@10": true, "passes": 8}
{"task_id": 456, "prompt": "Design a function that reverses each string. The function should operate on each string in a provided list of string values.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list. You need to iterate through the list to check positions. The function should identify numbers at those positions and only consider those that are even.", "pass@10": true, "passes": 7}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise, ensuring that the function handles division by zero gracefully without crashing.", "pass@10": true, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates. You need to ensure that your solution is robust. Your solution should also handle cases where the complex number is zero.", "pass@10": true, "passes": 3}
{"task_id": 296, "prompt": "Please write a Python function that calculates the number of inversions in an array. An inversion is a pair of indices (i, j) such that i < j and array[i] > array[j].", "pass@10": true, "passes": 5}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure that the function handles edge cases gracefully, such as when the list is empty or contains non-string elements.", "pass@10": true, "passes": 8}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. To achieve this, the function will scan through the list to identify the position where the value would be inserted. It essentially determines the index at which the value can be inserted while maintaining the sorted nature of the list. Visit the link for more information: https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 7}
{"task_id": 58, "prompt": "Create a Python function to determine if the two provided integers have reverse signs or not. Two integers have reverse signs when one is positive and the other is negative. This means that one number is greater than zero and the other is less than zero.", "pass@10": true, "passes": 9}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. A triangular number is a value that can be represented by the sum of consecutive integers.", "pass@10": true, "passes": 8}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements. These items should be grouped into sublists.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle. A right angled triangle is a triangle in which one of the angles measures 90 degrees.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Develop a function to change the case of each character in a string.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Create a function that calculates the volume of a cube based on its side length. Ensure that the function handles invalid inputs gracefully by returning an appropriate error message.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": true, "passes": 2}
{"task_id": 779, "prompt": "Create a function that calculates the total number of lists contained within another list. The function should return a dictionary, where each list is converted into a tuple, and the tuple's value represents the count of how often it appears. Be sure to account for lists that may contain other lists, processing them recursively if necessary.", "pass@10": true, "passes": 8}
{"task_id": 606, "prompt": "Create a function that transforms degrees into radians. Make sure to check the input to manage unusual cases.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. Consider edge cases like zero or negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/ Be sure to handle edge cases such as empty lists and tuples, and ensure the function is efficient for larger datasets. Test your function with a variety of inputs to verify its correctness.", "pass@10": true, "passes": 4}
{"task_id": 309, "prompt": "Create a Python method to determine the larger. It should be able to compare two values to find the one which is greater.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string to uppercase. Consider edge cases such as empty strings and strings with non-alphabet characters.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string. Ensure the function handles multiple spaces consecutively and preserves the original formatting of the string. Consider edge cases where the string might start or end with spaces.", "pass@10": true, "passes": 8}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, combining the terms n + (n-2) + (n-4)... until n-x =< 0.", "pass@10": true, "passes": 10}
{"task_id": 273, "prompt": "Define a function that takes two tuples as inputs and reduces the members of the first tuple by the corresponding values in the second tuple at the same indices.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 9}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Ensure that your solution handles tuples with various data types gracefully.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list, returning a dictionary where each list is changed to a tuple and the corresponding value of that tuple represents how many times it appears in the initial list.", "pass@10": true, "passes": 10}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments. The function should be able to calculate the sum of all digits of the base raised to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to identify all words in a string that have a length of 4 characters or more. The function should scan through each word carefully. Words shorter than four characters should not be included in the result. Ensure that the function handles punctuation correctly and ignores any non-alphabetic characters.", "pass@10": false, "passes": 0}
{"task_id": 452, "prompt": "Write a function that gives loss amount on a sale. It should determine the loss based on the given amount and whether it qualifies as a loss amount. If the given amount has loss else return 0.", "pass@10": true, "passes": 2}
{"task_id": 166, "prompt": "Create a function to count how many pairs of numbers in a list have an XOR result that is even. Consider edge cases where the list might be empty or contain only one element.", "pass@10": true, "passes": 4}
{"task_id": 292, "prompt": "Create a Python function that calculates the division of two numbers, making sure the quotient is floored to the closest integer.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Create a function that identifies the smallest value in a specified mixed list.", "pass@10": true, "passes": 5}
{"task_id": 4, "prompt": "Write a function to identify the n biggest numbers from a provided list of numbers, returned in descending order.", "pass@10": true, "passes": 6}
{"task_id": 579, "prompt": "Create a function to identify the differing components within the two provided tuples.", "pass@10": true, "passes": 3}
{"task_id": 98, "prompt": "Create a function to multiply all the numbers in an array and divide by the number of elements in the array. Ensure that the list is not empty to avoid division by zero errors.", "pass@10": true, "passes": 7}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": true, "passes": 3}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number present in a list. You have to ensure the function iterates through all elements. Then, for each element, calculate its n-th power. Ensure the output is a list of n-th powers corresponding to each input element.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers. You should also calculate the sum of the first n natural numbers separately. Make sure your solution handles large values of n efficiently.", "pass@10": true, "passes": 6}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Construct a Python function to compute the mean of the cubes of the first n natural numbers. You need to find the cubes of each of the first n natural numbers in this context. Then, you should calculate their average.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'. Ensure that your function handles both positive and negative exponents appropriately.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Create a function to determine the n-th star number. Ensure your function handles negative values gracefully and returns an appropriate message or error.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Construct a function to determine words from a given list that are longer than n characters in size.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists. The function should iterate through each list within the main list of lists. It should determine the size of each list as it iterates through them. After evaluating each list, the function should identify which one is the shortest.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product, calculating this product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 9}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number. Ensure your solution is efficient, especially for larger inputs. Consider using the Sieve of Eratosthenes algorithm to optimize the prime number counting process.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n. The sequences must have elements that are positive integers. Each element is greater than or equal to twice the previous element but less than or equal to m. Ensure your function efficiently handles cases where m or n is relatively large.", "pass@10": false, "passes": 0}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a list of lists that has been flattened, which can be achieved by taking each individual list and combining them into a single list, effectively removing any nested structures. The function should return the frequency of each element as a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists which should be the one whose sum of elements is the highest.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2. Specifically, it needs to be less than or equal to n. The power should not exceed the value of n.", "pass@10": true, "passes": 9}
{"task_id": 638, "prompt": "Create a function to compute the wind chill index, rounded to the nearest whole number, using the wind speed in kilometers per hour and temperature in degrees Celsius. Ensure your function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 3}
{"task_id": 127, "prompt": "Construct a function to compute the product of two whole numbers. Ensure that the function handles edge cases, such as zero, correctly.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. Ensure your function handles both positive and negative numbers, returning their squares correctly.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Ensure that the function handles edge cases where the string may be empty or contain all identical characters.", "pass@10": true, "passes": 5}
{"task_id": 224, "prompt": "Create a Python function that tallies the count of set bits (binary digits that are 1) in a specified number. Ensure that your solution effectively manages extremely large numbers.", "pass@10": true, "passes": 10}
{"task_id": 3, "prompt": "Create a Python function to detect numbers that are not prime.", "pass@10": true, "passes": 9}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n. The function should generate all combinations (with repetition) of the elements of the list and returning a list with a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. The function should accept a list of integers as its input argument and process this list to merge all the integer elements together sequentially into one continuous integer value.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Develop a function that, when provided a matrix expressed as a list of lists, returns the highest value of the n'th column. Ensure your function efficiently handles cases where the matrix has varying row lengths or is empty.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Create a function to calculate the total of the numerals in a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure that this sorting operation maintains the relative order of the rows which have the same sum. You should consider optimizing the function for matrices with a large number of rows to improve performance.", "pass@10": true, "passes": 8}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Consider edge cases where elements might be zero to ensure the function handles them gracefully. Ensure to document any assumptions or design choices made during the implementation of the function.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the sequence known as the Newman-Conway sequence. This sequence is an integer sequence with specific rules for generating it. The sequence starts with P(1) = 1 and P(2) = 1, and each subsequent term is defined recursively.", "pass@10": true, "passes": 4}
{"task_id": 308, "prompt": "Develop a function to find the specified number of largest products generated from two given lists, selecting one item from each list.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11. Consider edge cases where the number might be negative or zero.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to carry out multiplication of tuple elements at corresponding indices in the provided two tuples.\nEnsure that both tuples have the same length to avoid any index-related errors.", "pass@10": true, "passes": 7}
{"task_id": 232, "prompt": "Create a function that takes in a list and an integer n, and produces a list containing the n biggest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 417, "prompt": "Create a function to search for a shared starting element. It should be able to find a shared starting element in the provided list of tuples.", "pass@10": true, "passes": 1}
{"task_id": 588, "prompt": "Create a Python function to calculate the difference between the highest and lowest numbers in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Create a Python function that determines if any element in a sequence is present in another sequence. Consider optimizing for sequences containing a large number of elements.", "pass@10": true, "passes": 9}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element is the product of t_i and t_{i+1}. Ensure that your implementation efficiently handles tuples with a large number of elements.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string. Ensure the function can handle strings of varying lengths and characters efficiently.", "pass@10": true, "passes": 7}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel). Ensure all non-vowel characters remain in their original positions while reversing the order of vowels. Consider edge cases such as strings with no vowels and empty strings.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Create a Python function to calculate the addition of the fourth powers of the initial n odd integers.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. A Bell number is a number that represents the number of partitions of a set. It is a number that essentially counts the ways a set with n elements can be divided into non-empty subsets. This count includes all possible divisions.", "pass@10": true, "passes": 7}
{"task_id": 129, "prompt": "Write a function to determine if the matrix is a magic square. Ensure that your function considers all relevant properties of a magic square, including equal sums of its rows, columns, and diagonals.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Ensure the input list contains at least two elements for meaningful output. Consider edge cases where the list contains duplicate consecutive elements.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Create a function that finds perfect squares within a range defined by two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Write a function to transform multiple lists into a nested dictionary.", "pass@10": true, "passes": 8}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Ensure that the function handles all Unicode characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters from a given string. The characters to be removed are those which have odd index values.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to transform a tuple into a string. The function should handle tuples of varying lengths and data types, converting each element into its string representation.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a Python function to determine the length. It should specifically identify the length of the longest word.", "pass@10": true, "passes": 9}
{"task_id": 261, "prompt": "Write a function that receives two tuples and carries out mathematical division operation element-wise across the given tuples.", "pass@10": true, "passes": 1}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple. Ensure that the function handles different data types efficiently. The function should also return a boolean value indicating the presence of the element in the tuple.", "pass@10": true, "passes": 7}
{"task_id": 413, "prompt": "Create a function to retrieve the nth item from a specified list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure your solution efficiently handles nested lists and accounts for lists within lists.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. In this task, you are expected to derive and implement the formula for the nth octagonal number and ensure your function handles edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Compose a Python function to determine if the specified number can be expressed as the subtraction of two squared numbers or not.", "pass@10": true, "passes": 2}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is odd or even.", "pass@10": true, "passes": 4}
{"task_id": 92, "prompt": "Create a function to determine if the specified number is undulating.", "pass@10": false, "passes": 0}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. Ensure that edge cases, such as empty lists or tuples, are adequately handled.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty. The function should iterate over each dictionary in the list one by one. It will check if each dictionary is empty or contains any key-value pairs.", "pass@10": true, "passes": 7}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. Ensure the function is efficient and handles edge cases such as negative numbers and zero.", "pass@10": true, "passes": 4}
{"task_id": 227, "prompt": "Write a function to find the smallest number among three given numbers. You need to consider all three numbers and choose the one with the least value.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Verify the input to ensure it's a positive integer before proceeding with the calculations.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function that takes in an integer n and returns the sum of squares of the first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence. The goal is to ensure that at most 2 adjacent posts have the same color. This should be done for the given fence with n posts and k colors.", "pass@10": true, "passes": 2}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure. A nested list is a list that contains other lists as its elements. Your function should return a single-level list containing all the elements from the nested list.", "pass@10": true, "passes": 9}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. Each tuple in the list contains numeric values. The maximum aggregate is the highest sum that can be obtained by considering the sums of values in each tuple.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Consider edge cases where n is a small number or a power of 2, 3, 4, or 5.", "pass@10": true, "passes": 4}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. Ensure the function efficiently handles tuples of varying lengths and types.", "pass@10": true, "passes": 4}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure your solution handles both positive and negative numbers efficiently.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list. Ensure to handle edge cases where tuples may contain zero or negative values.", "pass@10": true, "passes": 9}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": true, "passes": 9}
{"task_id": 419, "prompt": "Create a function that rounds each number in a provided array of numbers, then display the sum total of the elements, multiplied by the array's length.", "pass@10": true, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": true, "passes": 9}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 9}
{"task_id": 464, "prompt": "Write a function to check if all values are same. It is crucial to ensure that the function accurately verifies uniformity across all items. It should perform this check within a provided dictionary.", "pass@10": true, "passes": 3}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary. Ensure the function returns a cleaned dictionary containing only non-empty items.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Consider edge cases where the array may have negative numbers or zero.", "pass@10": true, "passes": 1}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string. The function should ensure that all consecutive lowercase alphabets are identified and removed from the input string.", "pass@10": true, "passes": 3}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Ensure the function handles both positive and negative numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Create a function that calculates the nth number in the nonagonal series.", "pass@10": true, "passes": 2}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. Ensure your solution efficiently handles large integers to accommodate varying input sizes. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 6}
{"task_id": 737, "prompt": "Create a function to determine if the provided string commences with a vowel using regular expressions.", "pass@10": true, "passes": 6}
{"task_id": 745, "prompt": "Write a function to identify numbers in a specified interval from startnum to endnum where each number is divisible by each digit it includes. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Navigate to https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/. This page provides useful information on how to sort numeric strings in Python.", "pass@10": true, "passes": 5}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length from the provided input. The input is given as a string, which may contain multiple words.", "pass@10": true, "passes": 9}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Check the problem statement here: https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 791, "prompt": "Create a function designed to eliminate tuples from the specified tuple.", "pass@10": false, "passes": 0}
{"task_id": 796, "prompt": "Write a function to find the sum of all items in the given dictionary. Consider both keys and values to be of integer type.", "pass@10": true, "passes": 6}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square. Determine if it is not a perfect square. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 7}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": true, "passes": 5}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists. Ensure that the sorting is done in ascending order based on the lexicographical order of the strings.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Consider handling edge cases such as when the list is empty or has only one element.", "pass@10": true, "passes": 10}
{"task_id": 592, "prompt": "Create a Python function to determine the total of the multiplication of successive binomial coefficients.", "pass@10": true, "passes": 1}
{"task_id": 2, "prompt": "Write a function to find the elements that are common between the two lists provided. This function should compare each element from the first list. It needs to take each element one by one from the first list. Then, it should compare each of these elements with all elements in the second list.", "pass@10": true, "passes": 4}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. Ensure your function handles edge cases such as all three integers being different or all being equal.", "pass@10": true, "passes": 4}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists. Ensure your function efficiently handles cases where the lists vary significantly in size and contain complex data types. Consider edge cases such as empty lists or lists containing only dissimilar elements.", "pass@10": true, "passes": 3}
{"task_id": 84, "prompt": "Write a function to find the nth number in the sequence known as the Newman-Conway sequence. This sequence is an integer sequence with specific rules for generating it. The sequence starts with P(1) = 1 and P(2) = 1, and each subsequent term is defined recursively. Make sure to handle cases where the input number is less than 1 by providing an appropriate error message or behavior.", "pass@10": false, "passes": 0}
{"task_id": 786, "prompt": "Create a function that identifies the correct position for a given value in ascending order. The function should be able to efficiently find the location where the value needs to be inserted. This ensures that the list remains sorted as per the ascending order.", "pass@10": true, "passes": 4}
{"task_id": 166, "prompt": "Create a function to count how many pairs of numbers in a list have an XOR result that is even. Consider special situations where the list could be empty or have just a single element.", "pass@10": true, "passes": 1}
{"task_id": 141, "prompt": "Create a function to arrange a series of items. The function will sort the items in a specific order.", "pass@10": true, "passes": 7}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string. The function should ensure that all consecutive lowercase alphabets are identified. These lowercase alphabets should be removed from the input string.", "pass@10": false, "passes": 0}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. The function should handle lists efficiently and correctly. It should be able to manage lists containing any type of hashable elements.", "pass@10": true, "passes": 3}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is odd or even.", "pass@10": true, "passes": 3}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list. You are given a tuple. It should be added to the list.", "pass@10": true, "passes": 9}
{"task_id": 294, "prompt": "Create a function to identify the highest value within a provided heterogeneous list. Ensure that the function can handle various data types and return the highest numerical value.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Develop a function that removes characters from the first string that also appear in the second string.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Ensure that the function handles edge cases where the string may be empty or contain all identical characters. Consider testing the function with various input strings to validate its accuracy and performance.", "pass@10": true, "passes": 8}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number. Make sure to efficiently handle large inputs and edge cases.", "pass@10": true, "passes": 6}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the numbers that are unique in a given list. The list will contain various numbers. Out of these numbers, you need to find those that are unique. Once you identify the unique numbers, calculate their product. Make sure your function handles empty lists by returning a neutral product value.", "pass@10": true, "passes": 4}
{"task_id": 58, "prompt": "Create a Python function to determine if the two provided integers have reverse signs or not. Two integers have reverse signs when one is positive and the other is negative, meaning that one number is greater than zero and the other is less than zero.", "pass@10": true, "passes": 8}
{"task_id": 4, "prompt": "Develop a function to determine the n largest numbers from a given list of numbers, returned in descending order.", "pass@10": true, "passes": 9}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure that your function handles cases where either list could be empty gracefully, and consider optimizing the function to handle large lists efficiently.", "pass@10": true, "passes": 9}
{"task_id": 779, "prompt": "Create a function that calculates the total number of lists contained within another list. The function should return a dictionary, where each list is transformed into a tuple, and the tuple's value denotes the frequency of its occurrences. Be sure to account for lists that may contain other lists, processing them recursively if necessary.", "pass@10": true, "passes": 6}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon, ensuring that the function handles consecutive delimiters gracefully.", "pass@10": true, "passes": 4}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. Ensure your function accurately identifies scenarios where the amounts are equal, indicating neither profit nor loss. Your solution should be efficient and handle edge cases where amounts are zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Handle edge cases where the array might be empty or contain only one element gracefully.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": true, "passes": 3}
{"task_id": 592, "prompt": "Design a Python function to calculate the sum of the product of consecutive binomial coefficients.", "pass@10": true, "passes": 2}
{"task_id": 737, "prompt": "Create a function to determine if the provided string begins with a vowel by utilizing regular expressions.", "pass@10": true, "passes": 5}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. Make sure to handle cases where the string might be empty. Also, consider situations where the list might be empty.", "pass@10": true, "passes": 7}
{"task_id": 796, "prompt": "Write a function to find the sum of all items in the given dictionary. Consider both keys and values to be of integer type. You should ensure that the addition includes both keys and values. Calculate the sum of these integers.", "pass@10": true, "passes": 5}
{"task_id": 257, "prompt": "Write a function that accepts two numbers and gives back a tuple. The tuple should contain the second number followed by the first number. Make sure the function handles all possible number inputs, including negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells. The path starts from the top-left cell, which is located at position (0, 0) in the matrix. It moves only right or down. The path ends on the bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 6}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. The tetrahedron is a kind of polyhedron. It has four triangular faces. It is a three-dimensional shape with four vertices and six edges.", "pass@10": true, "passes": 10}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. Ensure that your solution efficiently handles large values of n without causing significant performance issues. Consider using mathematical properties or optimizations to improve the function's execution time.", "pass@10": true, "passes": 6}
{"task_id": 456, "prompt": "Design a function that reverses each string. The function should operate on each string in a provided list of string values. Ensure that the final output maintains the original order of the reversed strings within the list.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Consider edge cases where elements might be zero to ensure the function handles them gracefully. Ensure to document any assumptions or design choices made during the implementation of the function. It is important to handle division by zero errors by providing a meaningful default behavior or returning a clear error message.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Create a Python function that determines if any element in a sequence is present in another sequence. Focus on how to optimize the solution effectively. Ensure that the solution scales well for sequences containing a large number of elements.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Create a function that determines the third side of a right-angled triangle. A right angled triangle is a triangle in which one of the angles measures 90 degrees.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Compose a Python function to determine if the specified number can be expressed as the subtraction of two squared numbers or not. Consider edge cases where the number is zero or negative.", "pass@10": false, "passes": 0}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure that the function handles edge cases gracefully, such as when the list is empty or contains non-string elements. Consider ways to handle strings that are shorter or longer than the specified size in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple. Use a delimiter to separate the elements when concatenating.", "pass@10": true, "passes": 9}
{"task_id": 270, "prompt": "Create a Python function to calculate the sum of even integers located at even indices in a list.", "pass@10": true, "passes": 1}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2. Specifically, it needs to be less than or equal to n. It should find the maximum power of 2 that does not go beyond n. The power should not exceed the value of n.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary. The dictionary should map each unique tuple to the number of times it occurs in the list.", "pass@10": false, "passes": 0}
{"task_id": 445, "prompt": "Write a function to carry out multiplication of tuple elements at corresponding indices in the provided two tuples, ensuring both tuples have the same length to avoid any index-related errors.", "pass@10": true, "passes": 6}
{"task_id": 259, "prompt": "Write a function that will help to maximize these two tuples. The function should take two tuples as parameters. It should thoroughly analyze them to determine optimal transformations or calculations.", "pass@10": true, "passes": 1}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Each element in the first list should be divided by the corresponding element in the second list provided. You need to ensure that both lists have the same number of elements for accurate division.", "pass@10": true, "passes": 10}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square. Find out if it is not a perfect square. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 7}
{"task_id": 417, "prompt": "Create a function to search for a shared starting element. It should be able to find a shared starting element in the provided list of tuples. The function should efficiently identify the common initial element across all tuples in the list, if one exists.", "pass@10": true, "passes": 1}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Consult the provided link for further information: https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 6}
{"task_id": 268, "prompt": "Create a function to determine the n-th star number. Ensure your function is capable of handling negative values gracefully. The function should return an appropriate message or error.", "pass@10": true, "passes": 5}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Ensure that your solution handles tuples with various data types. It should handle them gracefully.", "pass@10": true, "passes": 9}
{"task_id": 452, "prompt": "Construct a function that returns the loss incurred on a sale if there is any; otherwise, return 0.", "pass@10": true, "passes": 2}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements. These items should be grouped into sublists. Each group of consecutive duplicates should be combined into one sublist. The sublist will then contain all of the duplicates that were consecutive.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Create a Python method to determine the larger. The method should compare two values to identify the one that is bigger.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Create a function that transforms degrees into radians. Make sure to check the input to manage unusual cases. Consider returning an error message for non-numeric inputs.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string to uppercase while considering edge cases such as empty strings and strings with non-alphabet characters.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. Consider edge cases like zero or numbers that are negative in value. You should ensure the function handles these cases properly.", "pass@10": true, "passes": 9}
{"task_id": 557, "prompt": "Create a method to transform the case of every letter within a text.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. Follow the detailed guide provided at https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/ for additional information. Review the guide carefully and apply its concepts to this task. Be sure to handle edge cases such as empty lists and tuples, and ensure the function is efficient for larger datasets. Test your function with a variety of inputs to verify its correctness.", "pass@10": true, "passes": 3}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Your task is to determine if a specified string can be found as a part of any element within the list. Ensure that the function accurately searches for the substring among all list entries.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11. To solve this problem, the function should return whether the given number meets the divisibility rule for 11, which involves taking the difference between the sum of the digits in odd positions and the sum of the digits in even positions.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n, considering edge cases such as negative numbers and zero when implementing your solution.", "pass@10": true, "passes": 9}
{"task_id": 273, "prompt": "Define a function that takes two tuples as inputs and reduces the members of the first tuple by the corresponding values in the second tuple at the same indices. Ensure that both tuples have the same length to avoid index errors during the reduction process.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n. The function should generate all combinations (with repetition) of the elements of the list, returning a list with a tuple for each combination.", "pass@10": true, "passes": 9}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 8}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, combining the terms n + (n-2) + (n-4)... until n-x =< 0. Ensure your function efficiently handles large inputs and edge cases.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists. Ensure that these lists are of the same length. Combine them into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. You need to find the cubes of each of the first n natural numbers in this context. Then, you should calculate their average. Make sure your solution is efficient for large values of n.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Create a function that identifies words from a provided list that exceed n characters in length.", "pass@10": true, "passes": 9}
{"task_id": 758, "prompt": "Write a function to count lists within a list, returning a dictionary where each list is changed to a tuple and the corresponding value of that tuple represents how many times it appears in the initial list. Ensure your solution efficiently handles large datasets and various data structures.", "pass@10": true, "passes": 9}
{"task_id": 93, "prompt": "Write a function to calculate 'a' to the power of 'b'.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function. The function will compute the sum and average of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Create a Python function to calculate the addition of the fourth powers. Calculate the addition of the fourth powers of the initial n odd integers.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. Ensure your function handles both positive and negative numbers, returning their squares correctly. Consider edge cases where the list might be empty or contain non-numeric elements.", "pass@10": true, "passes": 10}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments. The function should be able to calculate the sum of all digits of the base raised to the specified power. Ensure that the function can handle large numbers efficiently.", "pass@10": true, "passes": 8}
{"task_id": 232, "prompt": "Create a function that takes in a list and an integer n. The function should also produce a list containing the n biggest items from the original list.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Create a Python function to calculate the difference between the maximum and minimum values in a provided list. Ensure the function efficiently handles lists of varying sizes and data types.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Develop a function that, when provided a matrix expressed as a list of lists, returns the highest value of the n'th column. Ensure your function efficiently handles cases where the matrix has varying row lengths. It should also effectively process scenarios where the matrix is empty.", "pass@10": true, "passes": 9}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number present in a list. You have to ensure the function iterates through all elements. Then, for each element, calculate its n-th power. For every individual element in the list, compute its n-th power precisely. Ensure the output is a list of n-th powers corresponding to each input element.", "pass@10": true, "passes": 10}
{"task_id": 3, "prompt": "Write a python function to identify numbers that are not prime. You need to check each number. Check if it has divisors other than 1 and itself. If it has such divisors, it is considered a non-prime number.", "pass@10": true, "passes": 3}
{"task_id": 631, "prompt": "Create a function that converts spaces to underscores and underscores back to spaces in a provided string.", "pass@10": false, "passes": 0}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. The function should accept a list of integers as its input argument. It should process this list to merge all the integer elements together sequentially into one continuous integer value.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits. You are required to calculate the sum of a non-negative integer. The integer should not have any negative value.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Assume each element in the given input might be a list or any other data type, and focus on identifying and counting only the lists.", "pass@10": true, "passes": 8}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. A Bell number is a number that represents the number of partitions of a set. It is a number that essentially counts the ways a set with n elements can be divided into non-empty subsets. This count includes all possible divisions. The challenge is to implement an efficient solution that computes the nth Bell number accurately for a given n.", "pass@10": true, "passes": 7}
{"task_id": 406, "prompt": "Create a Python function to check if a specific number has odd parity, making sure the function correctly processes both positive and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a list of lists that has been flattened by taking each individual list and combining them into a single list, effectively removing any nested structures. The function should return the frequency of each element as a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. The list should have at least two elements to provide meaningful output. If the list has less than two elements, the function will not be able to return any meaningful pairs.", "pass@10": true, "passes": 7}
{"task_id": 120, "prompt": "Create a function that determines the highest absolute result from multiplying numbers in pairs of tuples within a specified list.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element is the product of t_i and t_{i+1}. Ensure that your implementation efficiently handles tuples with a large number of elements. Consider edge cases, such as tuples with zero elements, to ensure robustness in your function.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to determine if the matrix is a magic square by considering all relevant properties, including equal sums of its rows, columns, and diagonals.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Create a function that finds perfect squares within a range. This range is defined by two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Ensure your function handles empty strings and strings with very few characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Design a function to extract the nth element from a certain list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Develop a Python method to find out the length. It should specifically determine the length of the longest word.", "pass@10": true, "passes": 7}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Consider edge cases where n is a small number or a power of 2, 3, 4, or 5. Ensure your solution is optimized for both time and space complexity.", "pass@10": true, "passes": 4}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Ensure your solution efficiently handles large datasets. Large datasets can be challenging to process. You need to make sure your solution can handle these large volumes of data efficiently.", "pass@10": true, "passes": 9}
{"task_id": 164, "prompt": "Construct a function that checks if two integers have divisors whose sums are identical. Ensure the function is efficient and handles edge cases such as negative numbers and zero.", "pass@10": true, "passes": 3}
{"task_id": 287, "prompt": "Write a python function that takes in an integer n and returns the sum of squares of the first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Ensure the function handles both positive and negative numbers. The function should be able to process these types of numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Create a function that calculates the nth number in the nonagonal series. The function should efficiently determine the desired value. It will use a formula tailored to nonagonal numbers for accuracy.", "pass@10": true, "passes": 4}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. Ensure your solution efficiently handles large integers so that it can accommodate varying input sizes. Efficient handling means the function should process the integer without excessive computations or memory usage. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 5}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Ensure the function handles both positive and negative numbers appropriately to always return the highest possible product.", "pass@10": true, "passes": 10}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements. You need to do this for each element present in a list. Ensure your solution efficiently handles large datasets.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words that are separated by spaces in a given string. The method entails flipping the sequence of words while keeping the spaces between them intact.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. A sorted array is an array where the elements are arranged in a non-decreasing order. It means that each element is less than or equal to the next one. Make sure to consider edge cases where the element might not be present in the array.", "pass@10": true, "passes": 9}
{"task_id": 166, "prompt": "Create a function to count how many pairs of numbers in a list have an XOR result that is even. Think about unique cases where the list might be empty or contain only one element.", "pass@10": true, "passes": 3}
{"task_id": 274, "prompt": "Write a python function that receives a positive integer n and finds the sum of even index binomial coefficients. Verify the input to ensure it's a positive integer before proceeding with the calculations.", "pass@10": true, "passes": 8}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. This function should receive an array of numbers. It should then compute the sum of all the elements in the array. Make sure to handle both integer and floating-point numbers in the input array.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Create a Python function that calculates the quantity of pairs. These pairs must have an XOR result that is odd.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Consider edge cases where the array may have negative numbers or zero. Ensure that the function handles both positive and negative integers efficiently.", "pass@10": true, "passes": 3}
{"task_id": 299, "prompt": "Write a function to compute the maximum aggregate value from the list of tuples. The function should iterate over each tuple to determine the highest aggregate value.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Consider edge cases such as when the input string is empty or contains non-digit characters.", "pass@10": true, "passes": 1}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty. The function should iterate over each dictionary in the list one by one. It will check if each dictionary is empty or contains any key-value pairs. Make sure your implementation efficiently handles edge cases such as an empty list or dictionaries with nested structures.", "pass@10": true, "passes": 6}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Create a function to remove even numbers.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 9}
{"task_id": 745, "prompt": "Write a function to identify numbers in a specified interval from startnum to endnum where each number is divisible by each digit it includes. You need to ensure the numbers are divisible by each individual digit. Carefully check each digit in the number for divisibility. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to retrieve the smallest k records from a list of tuples. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 7}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. Ensure your solution optimizes for performance. This is particularly important when dealing with large numbers. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 4}
{"task_id": 596, "prompt": "Create a function to calculate the byte size of the provided tuple. Ensure that your implementation includes robust error handling to account for potential input anomalies.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists. Ensure that the function handles cases with duplicate elements gracefully.", "pass@10": true, "passes": 4}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. In geometry, a triangular prism is a three-sided polyhedron made by joining two triangular bases and three rectangular sides. The volume of a triangular prism can be calculated if we know its base area and height.", "pass@10": true, "passes": 3}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Ensure your solution handles positive integer inputs efficiently to maintain optimal performance.", "pass@10": true, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Ensure your implementation handles edge cases, such as empty lists, gracefully.", "pass@10": true, "passes": 10}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number. Consider edge cases where the input might be zero or a negative number, and ensure your function handles these appropriately.", "pass@10": true, "passes": 9}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. If multiple tuples share the smallest second value, return the first value of the first such tuple encountered.", "pass@10": true, "passes": 8}
{"task_id": 103, "prompt": "Compose a function to determine the Eulerian number a(n, m).", "pass@10": true, "passes": 1}
{"task_id": 108, "prompt": "Write a function to combine three lists into one sorted list.", "pass@10": true, "passes": 2}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list. This function should take two lists as input, with the first list being the source list. The second list will be the list containing elements to be removed from the source.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function for counting how many times the substring 'std' appears within a provided string.", "pass@10": true, "passes": 7}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string. Make sure your function handles an empty string correctly and accounts for edge cases like whitespace and special characters.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. Make sure your solution efficiently handles tuples of varying lengths and data types.", "pass@10": true, "passes": 7}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number. Ensure your solution handles large values of n efficiently.", "pass@10": true, "passes": 8}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort. Ensure the function handles both positive and negative numbers efficiently in the sorting process.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove substrings that are uppercase from a given string. These uppercase substrings can be any series of consecutive uppercase letters.", "pass@10": true, "passes": 7}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 3}
{"task_id": 633, "prompt": "Create a Python function to calculate the sum of the XOR of every pair of numbers within the provided list.", "pass@10": true, "passes": 6}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary. You should use adjacent elements for this conversion. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 7}
{"task_id": 755, "prompt": "Create a function to locate the second lowest number within an array.", "pass@10": true, "passes": 7}
{"task_id": 764, "prompt": "Compose a Python function that calculates the number of numerical digits present in an input string.", "pass@10": true, "passes": 10}
{"task_id": 797, "prompt": "Write a python function to find the sum of all odd natural numbers within the range l and r. Ensure that the function handles edge cases where l and r are themselves odd.", "pass@10": true, "passes": 4}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple. Consider edge cases where tuples are empty or contain different data types.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string. Ensure your function efficiently handles strings with multiple sets of quotation marks and varying levels of nested quotes.", "pass@10": true, "passes": 9}
{"task_id": 583, "prompt": "Create a function that outputs the nth Catalan number.", "pass@10": true, "passes": 9}
{"task_id": 270, "prompt": "Write a python function to determine the sum of even numbers situated at even indexes of a list. You need to iterate through the list to check positions. The function should identify numbers at those positions and only consider those that are even.", "pass@10": true, "passes": 5}
{"task_id": 79, "prompt": "Create a Python method to check whether the length of a given word is odd or even.", "pass@10": true, "passes": 1}
{"task_id": 786, "prompt": "Create a function that identifies the correct position for a given value in ascending order. The function should be able to efficiently find the location where the value needs to be inserted, ensuring that the list remains sorted as per the ascending order.", "pass@10": true, "passes": 8}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list. You are given a tuple. The tuple is provided as an input to your function. It should be added to the list.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Sorting is the process of arranging elements in a specific order. This order can be either ascending or descending, depending on the requirement.", "pass@10": true, "passes": 7}
{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists, ensuring that the function handles cases with duplicate elements gracefully.", "pass@10": true, "passes": 3}
{"task_id": 268, "prompt": "Create a function to determine the n-th star number. Make sure your function can handle negative values elegantly. The function should return an appropriate message or error.", "pass@10": true, "passes": 8}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number. Make sure to efficiently handle large inputs. Additionally, address edge cases carefully.", "pass@10": true, "passes": 6}
{"task_id": 88, "prompt": "Create a function to determine how often each element appears in a list and represent the result as a dictionary efficiently and correctly.", "pass@10": true, "passes": 4}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and determines the sum of the first n even natural numbers. The numbers are raised. Each number is raised to the fifth power.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Create a function that calculates the total number of lists contained within another list. The function should return a dictionary, where each list is transformed into a tuple. The tuple's value denotes the frequency of its occurrences, showing how often it appears in the main list. Be sure to account for lists that may contain other lists, processing them recursively if necessary.", "pass@10": true, "passes": 7}
{"task_id": 58, "prompt": "Create a Python function to determine if the two provided integers have reverse signs or not. Two integers have reverse signs when one is positive and the other is negative, signifying that one number is greater than zero and the other is less than zero.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Create a function that identifies the smallest value in a specified mixed list. The function takes a list as input. The list may contain integers, floats, and strings. You need to find and return the smallest numerical value, ignoring non-numeric items. Consider edge cases where the list might be empty. Return `None` if the list has no numeric values.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Develop a function that removes characters from the first string that also appear in the second string. Ensure that the function performs efficiently even for large input strings.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Ensure that the function handles edge cases where the string may be empty or contain all identical characters, and consider testing the function with various input strings to validate its accuracy and performance.", "pass@10": true, "passes": 5}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the numbers that are unique in a given list. The list will contain various numbers. Out of these numbers, you need to find those that are unique. Once you identify the unique numbers, calculate their product. Make sure your function handles empty lists by returning a neutral product value. Consider using a dictionary or a set to help identify unique numbers efficiently.", "pass@10": true, "passes": 2}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples. Make sure to consider edge cases where tuples may contain different types of elements.", "pass@10": true, "passes": 3}
{"task_id": 4, "prompt": "Develop a function to determine the n largest numbers from a given list of numbers, returned in descending order. Ensure that the solution efficiently handles edge cases such as an empty list or an n value larger than the list length.", "pass@10": true, "passes": 4}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Ensure the function handles edge cases where the list has fewer than two items.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure that your function handles cases where either list could be empty gracefully, considering optimizing the function to handle large lists efficiently.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss, accurately identifying scenarios where the amounts are equal, indicating neither profit nor loss.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple. Ensure the function correctly handles nested structures of varying depths and content.", "pass@10": true, "passes": 5}
{"task_id": 257, "prompt": "Write a function that accepts two numbers and returns a tuple. The tuple should contain the second number followed by the first number. Ensure the function deals with all possible number inputs, including negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 3, "prompt": "Create a Python function to detect numbers that are not prime. Make sure your function handles edge cases like 0 and 1 correctly by considering them as non-prime.", "pass@10": true, "passes": 2}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments. Ensure that the function can handle large numbers efficiently while calculating the sum of all digits of the base raised to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 592, "prompt": "Create a Python function that computes the total of the multiplication of successive binomial coefficients.", "pass@10": true, "passes": 1}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. Make sure to handle situations where the string is empty. In such case, you should not include the string in the tuple. Also, consider situations where the list might be empty.", "pass@10": true, "passes": 3}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells. The path starts from the top-left cell, which is located at position (0, 0) in the matrix. From this cell, you begin your journey through the matrix. It moves only right or down. The path ends on the bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 3}
{"task_id": 406, "prompt": "Create a Python function to check if a specific number has odd parity. Ensure that the function is capable of correctly processing both positive and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Create a function that determines the third side of a right-angled triangle. A triangle with a right angle is one where one of its angles equals 90 degrees.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers. You should also calculate the sum of the first n natural numbers separately. Make sure your solution handles large values of n efficiently. Consider edge cases such as n = 0 or negative values of n to ensure robustness of the function.", "pass@10": true, "passes": 5}
{"task_id": 90, "prompt": "Develop a Python method to find out the length. It is important to note that this method should specifically determine the length of a word. The focus is on identifying the longest word.", "pass@10": true, "passes": 6}
{"task_id": 445, "prompt": "Write a function to carry out multiplication of tuple elements at corresponding indices in the provided two tuples, ensuring both tuples have the same length to avoid any index-related errors. Pay special attention to edge cases where tuples may be empty or contain zeroes.", "pass@10": true, "passes": 2}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. The tetrahedron is a kind of polyhedron. You can think of it as a solid figure enclosed by four triangular faces. Each triangular face is contributing to the overall shape of the tetrahedron. It is a three-dimensional shape with four vertices and six edges.", "pass@10": true, "passes": 9}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": false, "passes": 0}
{"task_id": 452, "prompt": "Write a function that gives loss amount on a sale if the given amount has loss else return 0.", "pass@10": true, "passes": 2}
{"task_id": 255, "prompt": "Write a function that accepts a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 9}
{"task_id": 456, "prompt": "Design a function that reverses each string. The function should operate on each string in a provided list of string values. Ensure that the final output maintains the original order of the reversed strings within the list. Pay attention to edge cases such as empty strings or lists.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Create a function that applies a specified format string to each element within a list.", "pass@10": true, "passes": 10}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching substring along with a start index and an end index.", "pass@10": true, "passes": 9}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2. Specifically, it needs to be less than or equal to n. It should identify the maximum integer power of 2. This power should not go beyond n. The power should not exceed the value of n.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list, returning a dictionary where each list is converted to a tuple and the corresponding value of that tuple represents how many times it shows in the initial list. Ensure your solution efficiently handles large datasets and various data structures.", "pass@10": true, "passes": 8}
{"task_id": 459, "prompt": "Write a function to remove substrings that consist of uppercase letters from a given string. These uppercase substrings can be any series of consecutive uppercase letters.", "pass@10": true, "passes": 9}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. Follow the detailed guide provided at https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/ for more information. Review the guide carefully and apply its concepts to this task. Be sure to handle edge cases such as empty lists and tuples, and ensure the function is efficient for larger datasets. Test your function with a variety of inputs to verify its correctness.", "pass@10": true, "passes": 2}
{"task_id": 782, "prompt": "Create a Python function to calculate the total of all subarrays with odd lengths. Check the problem statement here: https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 9}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure that the function gracefully manages edge cases, like when the list is empty or includes non-string elements. Consider ways to handle strings that are shorter or longer than the specified size in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Ensure that both lists are of the same length and handle any division by zero scenarios gracefully.", "pass@10": true, "passes": 10}
{"task_id": 417, "prompt": "Create a function to search for a shared starting element. It should be able to find a shared starting element in the provided list of tuples. Make sure the function is efficient and handles edge cases such as empty lists or tuples gracefully.", "pass@10": true, "passes": 3}
{"task_id": 557, "prompt": "Develop a function to change the case of each character in a string.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Consult the provided link for further information: https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php Make sure to handle edge cases where the list is empty or the specified value is smaller or larger than all elements.", "pass@10": true, "passes": 5}
{"task_id": 611, "prompt": "Develop a function that, when provided a matrix expressed as a list of lists, returns the highest value of the n'th column. Ensure your function efficiently handles cases where the matrix has varying row lengths and effectively processes scenarios where the matrix is empty.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists, efficiently handling nested lists and accounting for lists within lists.", "pass@10": true, "passes": 8}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements. These items should be grouped into sublists, with each group of consecutive duplicates combined into one sublist that contains all of the duplicates that were consecutive.", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "\nPlease write a Python function that calculates the number of inversions in an array. An inversion is a pair of elements in the array such that the first element is greater than the second one and appears before it in the array.", "pass@10": true, "passes": 3}
{"task_id": 309, "prompt": "Create a Python method to determine the larger. The method should compare two values. It needs to identify the one that is bigger.", "pass@10": true, "passes": 9}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Your task is to determine if a specified string can be found as a part of any element within the list. You need to check through each item in the list one by one. Look for the substring in each item carefully. Ensure that the function accurately searches for the substring among all list entries.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Create a function that identifies words from a provided list. These words should be the ones that exceed n characters in length.", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to find the index of the smallest triangular number with n digits. Make sure to consider efficiency while solving the problem. Triangular numbers are numbers that can be arranged in the shape of an equilateral triangle.", "pass@10": true, "passes": 4}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11. To achieve this, the function should take an integer as input. It should then perform the necessary calculations to determine divisibility by 11.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Create a function that transforms degrees into radians. Make sure to check the input to manage unusual cases. Consider returning an error message for non-numeric inputs. Ensure your solution handles edge cases gracefully to maintain accuracy in conversions.", "pass@10": true, "passes": 9}
{"task_id": 166, "prompt": "Create a function to count how many pairs of numbers in a list have an XOR result that is even. Consider unique cases where the list might be empty or contain only one element.", "pass@10": true, "passes": 3}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string. The function should convert the string input to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Create a function that calculates the squares of each item in a list. Ensure your function handles both positive and negative numbers, returning their squares correctly. Consider edge cases where the list might be empty or contain non-numeric elements.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Create a function to identify the differing components within the two provided tuples. Ensure that the function handles tuples of varying lengths efficiently.", "pass@10": false, "passes": 0}
{"task_id": 232, "prompt": "Create a function that takes in a list and an integer n, producing a list containing the n biggest items from the list.", "pass@10": true, "passes": 9}
{"task_id": 422, "prompt": "Construct a Python function to compute the mean of the cubes of the first n natural numbers. You need to find the cubes of each of the first n natural numbers in this context. Each cube can be mathematically represented as raising the number to the power of three. Then, you should calculate their average.", "pass@10": true, "passes": 9}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number present in a list. You have to ensure the function iterates through all the elements in the list. Make sure no element is skipped during the iteration process. Then, for each element, calculate its n-th power.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists. Ensure that these lists are of the same length. Combine them into a single flat list. Consider utilizing a loop to iterate through each list simultaneously for effective interleaving.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n. Consider edge cases such as negative numbers and zero when implementing your solution. Take into account different scenarios where n could be less than or equal to zero.", "pass@10": true, "passes": 7}
{"task_id": 577, "prompt": "Write a python function to identify the final digit in the factorial of a provided number.", "pass@10": true, "passes": 5}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, combining the terms n + (n-2) + (n-4)... until n-x <= 0. Make sure your function effectively processes large inputs and considers exceptional cases.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Create a Python function to compute the sum of even numbers situated at even indices in a list.", "pass@10": true, "passes": 1}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'. Ensure that your function handles exponents in a versatile manner. The function should be able to deal with both positive and negative exponents effectively.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Create a Python function to calculate the difference between the highest and lowest numbers in a specified list. You need to determine the highest number present in the list. Additionally, you need to identify the lowest number in the same list.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. Ensure that the function handles large inputs efficiently using appropriate mathematical formulas or techniques.", "pass@10": true, "passes": 7}
{"task_id": 599, "prompt": "Write a function. The function will calculate the total and mean of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists. Ensure that the function is capable of handling cases with duplicate elements. It should perform this task gracefully.", "pass@10": true, "passes": 4}
{"task_id": 230, "prompt": "Design a function that receives a string and a character, substitutes empty spaces in the string with the given character, and outputs the string. Ensure the function handles multiple spaces consecutively and preserves the original formatting of the string. Consider edge cases where the string might start or end with spaces.", "pass@10": true, "passes": 5}
{"task_id": 164, "prompt": "Construct a function that checks if two integers have divisors whose sums are identical. Ensure the function is efficient and handles edge cases such as negative numbers and zero. Consider optimizing the solution for large integer inputs to improve performance.", "pass@10": true, "passes": 5}
{"task_id": 79, "prompt": "Create a Python function to determine if the length of a specified word is odd or even.", "pass@10": true, "passes": 8}
{"task_id": 753, "prompt": "Write a function to retrieve the smallest k records from a list of tuples. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case you need to include a verbatim copy of test cases. You should ensure that your test cases accurately reflect the examples provided in the original article.", "pass@10": true, "passes": 6}
{"task_id": 172, "prompt": "Write a function for counting how many times the substring 'std' appears within a provided string. You need to find the occurrences of the substring 'std'. It should be counted when 'std' appears as part of any word in the provided string.", "pass@10": true, "passes": 6}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation on each element of the tuples. The division should be carried out element-wise across the tuples.", "pass@10": true, "passes": 5}
{"task_id": 413, "prompt": "Design a function to extract the nth element from a certain list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 638, "prompt": "Design a function to calculate the wind chill index, rounded to the nearest integer, using the wind velocity in kilometers per hour and temperature in degrees Celsius. Ensure your function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 4}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}. Ensure your solution accounts for cases where the tuple contains negative numbers or zeros.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Ensure your function handles empty strings and strings with very few characters correctly. Consider the potential impact on performance and efficiency with very long strings as well.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Create a method to determine the occurrence count of every item in a single-level list derived from multiple lists, with the result provided as a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. The function should efficiently and accurately process lists. It should be able to manage lists containing any type of hashable elements.", "pass@10": true, "passes": 2}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates. You need to ensure that your solution is robust and should also handle cases where the complex number is zero.", "pass@10": true, "passes": 2}
{"task_id": 274, "prompt": "Design a Python function that accepts a positive integer n and calculates the sum of binomial coefficients located at even indices. Confirm the input is a positive integer prior to undertaking the computations.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Create a function that checks if the matrix forms a magic square by ensuring all pertinent characteristics, such as identical sums of rows, columns, and diagonals.", "pass@10": true, "passes": 9}
{"task_id": 392, "prompt": "Create a function to determine the highest sum achievable through the formula f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 8}
{"task_id": 477, "prompt": "Write a python function to convert the supplied string to lower case. Ensure that the function handles all Unicode characters correctly.", "pass@10": true, "passes": 9}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to determine if a given array of integers contains any duplicate elements.", "pass@10": true, "passes": 10}
{"task_id": 4, "prompt": "Create a function to find the n largest numbers from a given list, returned in descending order.", "pass@10": true, "passes": 7}
{"task_id": 292, "prompt": "Create a Python function that calculates the quotient of two numbers, making sure to round down the result to the nearest whole number.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Create a function that calculates the nth number in the nonagonal series. The function needs to effectively compute the required result. It will use a formula tailored to nonagonal numbers for accuracy.", "pass@10": false, "passes": 0}
{"task_id": 773, "prompt": "Create a method that identifies the frequency and location of substrings inside a given string. Return None if there is no match. Consider edge cases such as overlapping substrings or empty input strings.", "pass@10": true, "passes": 1}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number. Take into account edge cases where the input might be zero. It might also be a negative number, and ensure your function handles these appropriately.", "pass@10": true, "passes": 8}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 9}
{"task_id": 272, "prompt": "Create a function that accepts a list of tuples and returns a list including the last element of each tuple. Ensure the function handles empty tuples gracefully.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. Each tuple in the list contains numeric values. The maximum aggregate is the highest sum that can be obtained by considering the sums of values in each tuple. Ensure that the function efficiently handles large lists and tuples with varying lengths.", "pass@10": true, "passes": 9}
{"task_id": 287, "prompt": "Write a python function that takes in an integer n and returns the sum of squares of the first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure that the solution handles edge cases such as zero and negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Ensure the function handles both positive and negative numbers appropriately to always return the highest possible product. Consider edge cases where the array might have less than two numbers.", "pass@10": true, "passes": 5}
{"task_id": 604, "prompt": "Write a function to reverse words that are separated by spaces in a given string. The method involves reversing the order of words while maintaining the spaces between them.", "pass@10": true, "passes": 9}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Ensure the function handles both positive and negative numbers. Make sure that the function can properly identify and separate positive numbers from negative ones. The function should be able to process these types of numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Create a Python function that calculates the number of pairs. These pairs must have an XOR result that is odd.", "pass@10": true, "passes": 8}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements. You need to do this for each element present in a list. Ensure your solution efficiently handles large datasets. Consider edge cases such as empty lists or lists containing zero.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Create a function to remove even numbers.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. Verify that your solution proficiently works with large integers to allow for different input sizes. Efficient handling means the function should process the integer without excessive computations or memory usage. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 2}

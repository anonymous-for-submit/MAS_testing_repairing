{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": true, "passes": 9}
{"task_id": 3, "prompt": "Write a python function to identify non-prime numbers.", "pass@10": true, "passes": 3}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": true, "passes": 9}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": true, "passes": 9}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": true, "passes": 3}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": true, "passes": 5}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": true, "passes": 8}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": true, "passes": 9}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 8}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": true, "passes": 9}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 5}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": true, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 9}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": true, "passes": 4}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": true, "passes": 5}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": true, "passes": 9}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": true, "passes": 8}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 87, "prompt": "Write a function to merge three dictionaries into a single dictionary.", "pass@10": true, "passes": 1}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": true, "passes": 6}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": true, "passes": 7}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 9}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not.", "pass@10": true, "passes": 2}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": true, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m).", "pass@10": true, "passes": 2}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": true, "passes": 6}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": true, "passes": 5}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists.", "pass@10": true, "passes": 8}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": true, "passes": 8}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": true, "passes": 9}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.", "pass@10": true, "passes": 7}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": true, "passes": 1}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": true, "passes": 9}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 8}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": true, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": true, "passes": 8}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": true, "passes": 9}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 8}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": true, "passes": 8}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": true, "passes": 2}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": true, "passes": 4}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": true, "passes": 9}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 6}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": true, "passes": 10}
{"task_id": 223, "prompt": "Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)", "pass@10": true, "passes": 1}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.", "pass@10": true, "passes": 2}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": true, "passes": 3}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 4}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": true, "passes": 8}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number.", "pass@10": true, "passes": 4}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": true, "passes": 3}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": true, "passes": 6}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": true, "passes": 1}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": true, "passes": 1}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": true, "passes": 3}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.", "pass@10": true, "passes": 2}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": true, "passes": 1}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": true, "passes": 7}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": true, "passes": 9}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 273, "prompt": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": true, "passes": 5}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": true, "passes": 8}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number.", "pass@10": true, "passes": 2}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": true, "passes": 7}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 8}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": true, "passes": 5}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle.", "pass@10": true, "passes": 9}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number.", "pass@10": true, "passes": 2}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": true, "passes": 9}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": true, "passes": 1}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 4}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": true, "passes": 9}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": true, "passes": 3}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 8}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary.", "pass@10": true, "passes": 3}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 4}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": true, "passes": 6}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": true, "passes": 9}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": true, "passes": 9}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple.", "pass@10": true, "passes": 2}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 7}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": true, "passes": 3}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": true, "passes": 7}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 7}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": true, "passes": 1}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": true, "passes": 10}
{"task_id": 452, "prompt": "Write a function that gives loss amount on a sale if the given amount has loss else return 0.", "pass@10": true, "passes": 1}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": true, "passes": 6}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": true, "passes": 7}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": true, "passes": 4}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": true, "passes": 1}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": true, "passes": 7}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.", "pass@10": true, "passes": 8}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": true, "passes": 8}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 5}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": true, "passes": 7}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": true, "passes": 9}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": true, "passes": 7}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": true, "passes": 9}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": true, "passes": 5}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": true, "passes": 2}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": true, "passes": 8}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list.", "pass@10": true, "passes": 8}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": true, "passes": 8}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": true, "passes": 1}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": true, "passes": 4}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list.", "pass@10": true, "passes": 8}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": true, "passes": 9}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.", "pass@10": true, "passes": 2}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": true, "passes": 1}
{"task_id": 643, "prompt": "Write a function that checks if a strings contains 'z', except at the start and end of the word.", "pass@10": true, "passes": 1}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 5}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 5}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": true, "passes": 9}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h.", "pass@10": true, "passes": 6}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 3}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 1}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 7}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": true, "passes": 10}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": true, "passes": 1}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 4}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 9}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to caluclate the area of a tetrahedron.", "pass@10": true, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 8}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": true, "passes": 10}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 8}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 4}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list.", "pass@10": true, "passes": 6}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": true, "passes": 10}
{"task_id": 759, "prompt": "Write a function to check whether a given string is a decimal number with a precision of 2.", "pass@10": true, "passes": 1}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": true, "passes": 7}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": true, "passes": 9}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,", "pass@10": true, "passes": 1}
{"task_id": 769, "prompt": "Write a python function to get the difference between two lists.", "pass@10": true, "passes": 2}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.", "pass@10": true, "passes": 3}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 2}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 10}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 9}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": true, "passes": 1}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": true, "passes": 4}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 797, "prompt": "Write a python function to find the sum of all odd natural numbers within the range l and r.", "pass@10": true, "passes": 1}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.", "pass@10": true, "passes": 9}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": true, "passes": 9}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 10}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not.", "pass@10": true, "passes": 1}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": true, "passes": 9}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": true, "passes": 9}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": true, "passes": 5}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": true, "passes": 6}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": true, "passes": 2}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": true, "passes": 8}
{"task_id": 576, "prompt": "Write a python function to check whether a list is sublist of another or not.", "pass@10": true, "passes": 6}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": true, "passes": 8}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples.", "pass@10": true, "passes": 4}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": true, "passes": 3}
{"task_id": 582, "prompt": "Write a function to check if a dictionary is empty", "pass@10": true, "passes": 9}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 8}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 592, "prompt": "Write a python function to find the sum of the product of consecutive binomial co-efficients.", "pass@10": true, "passes": 4}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": true, "passes": 9}
{"task_id": 3, "prompt": "Write a python function to identify non-prime numbers. Non-prime numbers are numbers that are not prime, meaning they have factors other than 1 and themselves. Your function should take an integer as an input and return True if the number is non-prime and False otherwise. Use efficient algorithms to ensure your function works quickly for larger numbers.", "pass@10": true, "passes": 3}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers. The function should return these integers. They should be returned in descending order.", "pass@10": true, "passes": 8}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. Ensure that your solution efficiently handles large lists without performance degradation.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Make sure to handle both uppercase and lowercase letters effectively.", "pass@10": true, "passes": 3}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism can be found using its base area and height. First, you need to calculate the area of the base triangle. Then, multiply the base area by the height of the prism to get the volume.", "pass@10": true, "passes": 8}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not. This involves determining if one integer is positive while the other is negative. The goal is to compare their signs effectively.", "pass@10": true, "passes": 9}
{"task_id": 63, "prompt": "Write a function to discover the greatest difference among available pairs in the provided tuple list.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Create a function to arrange a list of tuples by the second element of each tuple.", "pass@10": true, "passes": 9}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements. Consider edge cases such as empty lists or lists with non-integer values.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to determine the count of ways to partition a collection of Bell numbers.", "pass@10": true, "passes": 7}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": true, "passes": 3}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. Ensure that your function accurately handles edge cases, such as empty arrays or arrays with differing lengths.", "pass@10": true, "passes": 1}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function. The function should be able to find the nth number in the Newman Conway sequence.", "pass@10": false, "passes": 0}
{"task_id": 87, "prompt": "Write a function to merge three dictionaries into a single dictionary. The function should take three dictionary inputs. It should then combine them into one comprehensive dictionary.", "pass@10": false, "passes": 0}
{"task_id": 89, "prompt": "Write a function to locate the nearest smaller number that is less than n. This should involve identifying the largest possible number that is still smaller than the given n.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function. The function should be capable of finding the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not. An undulating number is a number that has at least three digits and the digits alternate between two numbers. These numbers must appear in an alternating sequence, such as 121 or 343. For instance, in the number 121212, 1 and 2 alternate throughout the number making it undulating. Note that a number like 111 or 222 is not considered undulating because the digits do not alternate. Implement the function taking a single integer as input and returning a boolean value as output indicating if the number is undulating or not.", "pass@10": true, "passes": 2}
{"task_id": 93, "prompt": "Create a function that computes the exponentiation of 'a' raised to 'b'.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists. Ensure that your solution is efficient, even with large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. The function should handle lists containing various data types, including integers, strings, and floats.", "pass@10": true, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m). The Eulerian number is a significant concept in combinatorics, representing the number of permutations of n elements with exactly m permutation ascents.", "pass@10": false, "passes": 0}
{"task_id": 106, "prompt": "Create a function that adds the specified list to the provided tuples.", "pass@10": true, "passes": 10}
{"task_id": 111, "prompt": "Write a function to find the common elements. The function should identify the elements that appear in all provided nested lists. It should determine those that are present across all given nested lists.", "pass@10": true, "passes": 3}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer. Ensure that the function efficiently handles tuples of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Craft a function to compute the total of all amicable numbers ranging from 1 to a specified numeral.", "pass@10": true, "passes": 7}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string. Consider edge cases such as strings composed entirely of 0s or 1s for a comprehensive solution.", "pass@10": false, "passes": 0}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Ensure the input list is not modified during the process.", "pass@10": true, "passes": 3}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string. Remember that y is not considered a vowel in this problem.", "pass@10": true, "passes": 9}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Ensure that the function handles both numerical and string data types efficiently.", "pass@10": true, "passes": 9}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Ensure your solution is efficient and handles large values of n.", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Create a function to check if two integers have divisors whose sums are identical.", "pass@10": true, "passes": 7}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number. Ensure that your solution is efficient in terms of time complexity.", "pass@10": true, "passes": 9}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n. Consider edge cases where n is very small or very large to ensure the function handles these inputs efficiently and correctly.", "pass@10": true, "passes": 5}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits. These are binary digits with value 1. This needs to be done in a given number.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": true, "passes": 9}
{"task_id": 230, "prompt": "Write a function that takes in a string and character. This function should replace blank spaces in the string with the character. Then, it returns the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that accepts a list of elements and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 8}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length. Be sure to handle edge cases where the side length is zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list. Be sure to consider edge cases such as an empty list or a list with all identical tuples.", "pass@10": false, "passes": 0}
{"task_id": 238, "prompt": "Create a Python function that determines the quantity of non-empty substrings in a specified string.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer. Each element is greater than or equal to twice the previous element. Each element should also be less than or equal to m.", "pass@10": true, "passes": 3}
{"task_id": 240, "prompt": "Write a function that takes in two lists. It should replace the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 5}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number. Ensure to handle large input values efficiently.", "pass@10": true, "passes": 2}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers. You need to convert them to polar coordinates.", "pass@10": true, "passes": 5}
{"task_id": 255, "prompt": "Write a function that accepts a list and a number n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples. This function should determine which tuple has the greatest sum of its elements. It should return the tuple with the largest sum.", "pass@10": false, "passes": 0}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": true, "passes": 2}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": true, "passes": 2}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L. The second part will contain the remaining elements after the split. The function should return the resulting lists in a tuple.", "pass@10": true, "passes": 4}
{"task_id": 264, "prompt": "Design a function to determine a dog's age in canine years.", "pass@10": false, "passes": 0}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": true, "passes": 9}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": true, "passes": 6}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. Ensure your solution has an optimal time complexity for large values of n.", "pass@10": true, "passes": 8}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples. The function should then return a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 273, "prompt": "Write a function that receives two tuples and subtracts the elements of the first tuple from those of the second tuple at the corresponding index.", "pass@10": true, "passes": 8}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Assume that n is a non-negative integer for all inputs.", "pass@10": true, "passes": 1}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the provided tuple. The task involves identifying the position of a given element within the tuple. This will help in determining how many elements precede it.", "pass@10": false, "passes": 0}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number. Ensure that your implementation efficiently handles large values of n without significant performance degradation.", "pass@10": true, "passes": 1}
{"task_id": 282, "prompt": "Write a function to subtract two lists. Perform the subtraction element-wise by iterating over the lists.", "pass@10": true, "passes": 9}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 9}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. If the list is empty, the function should return False.", "pass@10": true, "passes": 8}
{"task_id": 287, "prompt": "Write a python function accepts an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 7}
{"task_id": 292, "prompt": "Write a python function to find the quotient of two numbers rounded down to the nearest integer.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Create a function to determine the third side of a right-angled triangle.", "pass@10": true, "passes": 9}
{"task_id": 294, "prompt": "Create a function to identify the largest value in a provided heterogeneous list.", "pass@10": true, "passes": 9}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors. The divisors under consideration are those of a given number.", "pass@10": true, "passes": 1}
{"task_id": 296, "prompt": "Write a python function. You need to count inversions in an array.", "pass@10": true, "passes": 7}
{"task_id": 299, "prompt": "Develop a function to compute the maximum total from the list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 3}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists. The function will need to select one factor from each list in order to calculate the products.", "pass@10": true, "passes": 9}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": true, "passes": 3}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2. This power should be less than or equal to n.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list into a nested dictionary. A nested dictionary is a dictionary where each key points to another dictionary. The function should take in multiple lists as input. Each list will represent a level in the nested dictionary.", "pass@10": true, "passes": 2}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Ensure that your solution efficiently handles large values of n by utilizing memoization or dynamic programming techniques.", "pass@10": true, "passes": 1}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": true, "passes": 5}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. Consider edge cases such as tuples of different lengths or containing non-numeric values.", "pass@10": true, "passes": 7}
{"task_id": 404, "prompt": "Write a python function to find which of two numbers is smaller. It should be capable of determining which number has a lesser value.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to determine if the parity of a given number is odd.", "pass@10": true, "passes": 8}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Make sure your function handles cases where the list contains different data types.", "pass@10": true, "passes": 9}
{"task_id": 413, "prompt": "Create a function to retrieve the nth item from a specified list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Your task is to identify a pair of numbers from the array that yield the highest multiplication result. The function should return the pair of integers.", "pass@10": true, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers. Ensure your function accurately handles edge cases such as n being zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter. Consider edge cases where the tuple might be empty or contain non-string elements.", "pass@10": true, "passes": 2}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that the order of the integers is preserved in the final result.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to determine the surface area of a cube. The cube will have a surface area based on its size. It is specifically defined by a given size.", "pass@10": true, "passes": 9}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 6}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements. The elements are present in a list.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Create a function that eliminates all spaces from the provided string.", "pass@10": true, "passes": 10}
{"task_id": 452, "prompt": "Write a function that returns 0 when there is no loss, but gives the loss amount on a sale when the specified amount shows a deficit.", "pass@10": true, "passes": 4}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": true, "passes": 3}
{"task_id": 456, "prompt": "Write a function to reverse each string in a list. You need to create a function that can take a list of string values as input. Then, it should reverse each string in that list.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure your function handles non-integer inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are the same in a dictionary.", "pass@10": true, "passes": 3}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Draft a Python function to determine if the specified list includes consecutive numbers.", "pass@10": true, "passes": 1}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of components in the provided tuple list regardless of their sequence.", "pass@10": true, "passes": 7}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Ensure that the function efficiently handles both ASCII and Unicode characters for broader applicability.", "pass@10": true, "passes": 10}
{"task_id": 475, "prompt": "Create a function that arranges a dictionary in order based on its values.", "pass@10": true, "passes": 3}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Make sure to handle any special characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function. It should be able to determine the first digit of a given number.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Create a function that reverses words divided by spaces in a provided string.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": true, "passes": 10}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function needs to return the substring that matches, along with the start index and the end index.", "pass@10": true, "passes": 6}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": true, "passes": 1}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": true, "passes": 6}
{"task_id": 618, "prompt": "Write a function that takes two lists as input. Ensure that both lists are of equal length. The function should iterate over both lists, dividing each corresponding pair of elements. For each pair of elements, the first element should be divided by the second element. Make sure to handle division by zero, returning NaN or an appropriate value in such cases. Return a new list containing the results of the element-wise division.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list. Make sure to handle both positive and negative integers in the list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to identify the lowest absent number in a sorted list of natural numbers.", "pass@10": false, "passes": 0}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss.", "pass@10": true, "passes": 10}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index. The result should be rounded to the next integer given the wind velocity in km/h. Additionally, a temperature in celsius must be provided.", "pass@10": false, "passes": 0}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number. The nonagonal number is part of a sequence of numbers. These numbers are part of the pattern or sequence known as nonagonal numbers.", "pass@10": true, "passes": 7}
{"task_id": 643, "prompt": "Write a function that checks if a strings contains 'z'. It should not be at the start and end of the word.", "pass@10": false, "passes": 0}
{"task_id": 721, "prompt": "Given a square matrix of dimensions N*N represented as a list of lists, where each cell is linked with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 3}
{"task_id": 722, "prompt": "The task involves a dictionary where each key is a student's name and each value is a tuple containing a float representing the student's height and weight, along with a minimal height and minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 4}
{"task_id": 724, "prompt": "Write a function that receives base and power as inputs and calculate the sum of all digits of the base to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n]. The function returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "\nWrite a function to remove consecutive duplicates of a given list. Ensure your implementation handles edge cases, such as when the list is empty or contains only one element.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": false, "passes": 0}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number. This should be done except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": false, "passes": 0}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php Ensure that your solution efficiently handles large data sets.", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not. You need to use regex to determine if the first character is a vowel.", "pass@10": true, "passes": 4}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. You can find more details about the problem at this link. The link provided is https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php.", "pass@10": false, "passes": 0}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. Triangular number is a number of the form Tm = m*(m+1)/2. ", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. This is the task you need to accomplish. You will achieve this by pairing elements that are next to each other. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 8}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. A tetrahedron is a three-dimensional shape with four triangular faces. It is one of the simplest types of polyhedra.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum to endnum. These numbers must meet the condition where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list. Make sure to preserve the original order of the elements in the list after adding the tuple.", "pass@10": true, "passes": 8}
{"task_id": 753, "prompt": "Write a function to uncover the smallest k entries from a list of tuples. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index, so write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 7}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should produce a dictionary where each list is transformed into a tuple, and the value of this tuple indicates how many times it appears in the original list.", "pass@10": true, "passes": 10}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12. Ensure your solution accounts for both valid and invalid inputs.", "pass@10": true, "passes": 4}
{"task_id": 769, "prompt": "Write a python function to get the difference between two lists.", "pass@10": false, "passes": 0}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string.Return None if there is no match.", "pass@10": true, "passes": 7}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists. Consider edge cases where the list is empty or contains a single element, as these may require special handling.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list, returning a dictionary where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 9}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. Ensure your function efficiently handles multiple tuple combinations to provide optimal performance for large datasets. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 5}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. You should ensure your solution is efficient for numbers up to 10^6. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 3}
{"task_id": 786, "prompt": "Write a function to find the appropriate position to insert a given value in an ordered sequence.", "pass@10": false, "passes": 0}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": true, "passes": 9}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 9}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. You need to identify where the element appears last. The element may appear more than once in the array.", "pass@10": true, "passes": 4}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string. Ensure the function handles multiple types of whitespace characters, such as spaces, tabs, and newlines.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers. The function should take three given integers as its input parameters.", "pass@10": true, "passes": 7}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not. The function should take a list as input, and it must determine if the product is even. If the product is even, the function should return True, otherwise it should return False.", "pass@10": false, "passes": 0}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers. Ensure your function handles edge cases where n is zero or negative gracefully.", "pass@10": true, "passes": 7}
{"task_id": 559, "prompt": "Create a function to calculate the sum of the largest continuous sublist within the provided list.", "pass@10": true, "passes": 9}
{"task_id": 565, "prompt": "Create a Python function to divide a string into individual characters.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer. Make sure your function handles edge cases, such as when the input is zero, correctly.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product. It should calculate the product of only the unique numbers. The unique numbers should be in a given list.", "pass@10": true, "passes": 10}
{"task_id": 576, "prompt": "Write a python function to determine if one list is a sublist of another.", "pass@10": true, "passes": 2}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. Ensure your solution efficiently computes the result even for large numbers.", "pass@10": true, "passes": 7}
{"task_id": 578, "prompt": "Create a function that combines three lists of identical lengths into one continuous list by alternating their elements.", "pass@10": true, "passes": 9}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples. Ensure your solution efficiently handles the comparison for tuples of significant size.", "pass@10": true, "passes": 9}
{"task_id": 580, "prompt": "Design a function to eliminate the non-uniform elements in the mixed nested tuple.", "pass@10": true, "passes": 1}
{"task_id": 582, "prompt": "Write a function to check if a dictionary is empty. Ensure your function handles cases where the input might not be a dictionary at all.", "pass@10": true, "passes": 9}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": true, "passes": 9}
{"task_id": 588, "prompt": "Write a python function to determine the difference between the maximum and minimum value in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 9}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits. Basically, it is the same as a narcissistic number.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Create a function to calculate the sum and average of the initial n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. A function should analyze the number provided as input. It will then determine if this input number is divisible by two.", "pass@10": true, "passes": 10}
{"task_id": 111, "prompt": "Write a function to find the common elements. The function should identify the elements that appear in all provided nested lists. It should determine those that are present across all given nested lists. Consider edge cases where some lists might be empty or contain duplicate elements.", "pass@10": true, "passes": 2}
{"task_id": 472, "prompt": "Draft a Python function to determine if the specified list includes numbers that follow each other in order without any gaps. You need to check if the list has numbers arranged consecutively, meaning they increase by one step each time.", "pass@10": false, "passes": 0}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. Ensure that your function accurately handles edge cases, such as empty arrays or arrays with differing lengths. Pay special attention to correctly matching all elements in the sequence without assuming consistency unless explicitly stated by the pattern.", "pass@10": true, "passes": 8}
{"task_id": 576, "prompt": "Develop a Python function to ascertain if one list is contained within another as a sublist.", "pass@10": true, "passes": 5}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Ensure that your solution efficiently handles large values of n by utilizing memoization or dynamic programming techniques. Consider edge cases, such as when n is 0 or 1, to ensure the function behaves correctly for all inputs.", "pass@10": true, "passes": 2}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function needs to return the substring that matches, along with the start index and the end index. Ensure the function handles cases where no match is found gracefully.", "pass@10": true, "passes": 9}
{"task_id": 232, "prompt": "Write a function that accepts a list of elements and an integer n and returns a list containing the n largest items from the list. Ensure that the elements in the returned list are ordered in descending order.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Create a function that receives a list and an element, and verifies if each item in the list matches the specified element. If the list contains no items, the function should yield a result of False.", "pass@10": true, "passes": 8}
{"task_id": 273, "prompt": "Create a function that takes in two tuples and deducts the elements of the first tuple from the corresponding elements of the second tuple.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers. The function should take three given integers as its input parameters. Consider all possible cases where two or all three integers might be equal.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Consider a matrix where each element is structured as a row within these lists. The function should be able to evaluate each column separately, identifying the maximum value in the specified column.", "pass@10": true, "passes": 9}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. Ensure your solution has an optimal time complexity for large values of n. Assume n is a positive integer.", "pass@10": true, "passes": 6}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n, considering edge cases where n is very small or very large to ensure the function handles these inputs efficiently and correctly.", "pass@10": true, "passes": 3}
{"task_id": 578, "prompt": "Create a function that combines three lists of identical lengths into one continuous list by alternating their elements. Ensure that the final list maintains the order of elements as they appear in the original lists.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter, considering edge cases where the tuple might be empty or contain non-string elements.", "pass@10": true, "passes": 1}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers. The function should return these integers. They should be returned in descending order. Ensure that the input list contains at least n elements to find the n largest numbers reliably.", "pass@10": true, "passes": 5}
{"task_id": 64, "prompt": "Create a function to arrange a list of tuples by the second element of each tuple.", "pass@10": true, "passes": 9}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not. An undulating number is a number that has at least three digits and the digits alternate between two numbers. These digits must appear in a pattern that alternates, such as 121 or 343. For instance, in the number 121212, 1 and 2 alternate throughout the number making it undulating. Note that a number like 111 or 222 is not considered undulating because the digits do not alternate. Implement the function taking a single integer as input and returning a boolean value as output indicating if the number is undulating or not.", "pass@10": true, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 5}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Ensure your function handles edge cases, such as when n is larger than the dataset size or when there are items with the same price.", "pass@10": true, "passes": 9}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list, ensuring it handles cases where the list contains different data types.", "pass@10": true, "passes": 7}
{"task_id": 739, "prompt": "Write a python function to determine the index of the smallest triangular number containing n digits. Triangular number is a number of the form Tm = m*(m+1)/2.", "pass@10": true, "passes": 6}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Make sure that the function effectively manages both ASCII and Unicode characters for wider applicability.", "pass@10": true, "passes": 7}
{"task_id": 294, "prompt": "Create a function to identify the largest value in a provided list. The list can contain elements of different data types, such as integers and strings. More specifically, it's a heterogeneous list.", "pass@10": true, "passes": 7}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism can be determined using the area of its base and its height. First, you need to calculate the area of the base triangle. Then, multiply the base area by the height of the prism to get the volume.", "pass@10": true, "passes": 7}
{"task_id": 406, "prompt": "Write a python function to determine if the parity of a given number is odd. Ensure that your solution handles both positive and negative integers correctly.", "pass@10": true, "passes": 2}
{"task_id": 721, "prompt": "Given a square matrix of dimensions N*N represented as a list of lists, where each cell is linked with a specific cost. A path constitutes an ordered sequence of cells beginning at the top-left cell, allowing movement solely to the right or downward, and ending at the bottom-right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 1}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list. Make sure to preserve the original order of the elements in the list after adding the tuple. Consider edge cases where the list or tuple might be empty.", "pass@10": true, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers. Ensure that your function handles edge cases gracefully.", "pass@10": true, "passes": 9}
{"task_id": 637, "prompt": "Write a function to verify if the specified amount results in neither a profit nor a loss.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists. The function should take these lists as input parameters. It should replace the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 5}
{"task_id": 89, "prompt": "Write a function to locate the nearest smaller number that is less than n. This should involve identifying the largest possible number that is still smaller than the given n. Make sure your function efficiently finds this number even for large inputs of n.", "pass@10": true, "passes": 8}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. Make sure your function processes multiple tuple combinations efficiently to achieve optimal performance for large datasets. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 5}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string. Ensure that your solution is efficient and handles edge cases appropriately.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Design a function to compute the sum and average of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should produce a dictionary transforming each list into a tuple with the value indicating how many times it appears in the original list.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Create a function to locate the common elements from the provided two lists.", "pass@10": true, "passes": 8}
{"task_id": 618, "prompt": "Write a function that takes two lists as input. Make sure that both lists have the same number of elements. The function should iterate over both lists, dividing each corresponding pair of elements. For each pair of elements, the first element should be divided by the second element. Make sure to handle division by zero, returning NaN or an appropriate value in such cases. Return a new list containing the results of the element-wise division.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Define a function that computes the squares of each item in a list. Ensure that your solution efficiently manages extensive lists without a drop in performance.", "pass@10": true, "passes": 9}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) needed such that the result is the same as the original string. It is important to ensure that the function handles this efficiently. Make sure to handle both uppercase and lowercase letters effectively.", "pass@10": false, "passes": 0}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number. Ensure that your solution is efficient in terms of time complexity. Consider edge cases where the list might be empty or contain duplicate elements.", "pass@10": true, "passes": 8}
{"task_id": 456, "prompt": "Write a function to reverse each string in a list. You are required to write a function that can accept a list containing string values as input. Then, it should reverse each string in that list.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find which of two numbers is smaller, determining which number has a lesser value.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to uncover the smallest k entries from a list of tuples. You should refer to the following link for the complete description of the problem: https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/. The function should accept a list of tuples and an integer k. Your task is to find and return the smallest k tuples from the list in ascending order. You would be able to achieve this by sorting the list and slicing the first k elements.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Design a function that flips words segmented by spaces in a given string.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and should return a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Create a function to determine the third side of a right-angled triangle. Ensure that your function handles various input types gracefully and performs necessary validations.", "pass@10": true, "passes": 8}
{"task_id": 724, "prompt": "Write a function that receives base and power as inputs to calculate the sum of all digits of the base raised to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character. This function should replace blank spaces, which are the gaps between words, in the string with the character. The character acts as a substitute for the spaces. Then, it returns the string.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists. The function will need to select one factor from each list in order to calculate the products. Ensure your solution efficiently handles lists of varying lengths and values.", "pass@10": true, "passes": 8}
{"task_id": 106, "prompt": "Create a function that adds the specified list to the provided tuples. You need to design a function that is capable of receiving tuples. The function should be able to append the list to these input tuples.", "pass@10": true, "passes": 9}
{"task_id": 773, "prompt": "Write a function to find the occurrence and location of the substrings within a string. Return None if there is no match.", "pass@10": true, "passes": 7}
{"task_id": 255, "prompt": "Write a function that accepts a list and a number n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Ensure that the input list may contain any data type.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number. The Lucas numbers form a sequence similar to the Fibonacci sequence, but they start with different initial values. Each subsequent number in the Lucas sequence is the sum of its two immediate previous numbers.", "pass@10": true, "passes": 9}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements. The elements are present in a list. You are given a list that contains these elements. Your task is to compute the cube of each element individually.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number. Ensure your solution accounts for both integer and floating-point inputs.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2. This power should be less than or equal to n. Ensure your solution efficiently handles large values of n.", "pass@10": true, "passes": 9}
{"task_id": 439, "prompt": "Develop a procedure to combine a list of several integers into one cohesive integer. Make sure that the sequence of the integers is maintained in the resulting integer.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Ensure your solution is efficient and handles large values of n. Consider edge cases such as when n is negative or zero.", "pass@10": true, "passes": 7}
{"task_id": 164, "prompt": "Create a function to check if two integers have divisors. Determine if their sums are identical.", "pass@10": true, "passes": 2}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Create a function that computes the exponentiation of 'a' raised to 'b'. Exponentiation is a mathematical operation. It involves two numbers, the base 'a' and the power 'b'.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Create a function to calculate the sum of the largest continuous sublist within the provided list. Consider edge cases where the list may contain all negative numbers, or where all numbers are positive.", "pass@10": false, "passes": 0}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11. Ensure that your function is efficient and handles both positive and negative input values appropriately.", "pass@10": true, "passes": 9}
{"task_id": 413, "prompt": "Develop a function to obtain the nth element from a designated list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m. Consider edge cases where n is very large or m is very small.", "pass@10": true, "passes": 1}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php Ensure that your solution efficiently handles large data sets. Consider edge cases where the list may be empty or contain duplicate values.", "pass@10": true, "passes": 8}
{"task_id": 238, "prompt": "Create a Python function that determines the quantity of non-empty substrings in a specified string. Ensure that the function handles edge cases where the string is empty or consists of a single character.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits. These are binary digits with value 1. This needs to be done in a given number. Ensure your solution is efficient for large input values.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Create a Python function that transforms the provided string to lowercase. Ensure special characters are managed properly.", "pass@10": true, "passes": 9}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples. Ensure your solution efficiently handles the comparison for tuples of significant size. Consider edge cases where one or both tuples are empty.", "pass@10": true, "passes": 6}
{"task_id": 606, "prompt": "Write a function to change degrees into radians.", "pass@10": true, "passes": 8}
{"task_id": 623, "prompt": "Write a function to determine the n-th power of every element in a list. Make sure to handle both positive and negative integers in the list.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Create a Python function to divide a string into individual characters. Ensure that the function handles both regular and empty strings gracefully.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. You have to determine where the element shows up at the last time. The element may appear more than once in the array.", "pass@10": true, "passes": 3}
{"task_id": 451, "prompt": "Create a function that eliminates all spaces from the provided string. Ensure the function handles multiple consecutive spaces and leading or trailing spaces correctly.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the largest difference among possible pairs in the given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise sum of the neighboring elements of the given tuple. Iterate through the tuple, adding each element with its neighbor.", "pass@10": true, "passes": 9}
{"task_id": 123, "prompt": "Craft a function to compute the total of all amicable numbers. These are numbers ranging from 1 to a specified numeral.", "pass@10": true, "passes": 4}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. When you receive a list, treat each element as a string. Convert each element to an integer.", "pass@10": true, "passes": 9}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Your task is to identify a pair of numbers from the array. These numbers should yield the highest multiplication result. The function should return the pair of integers.", "pass@10": true, "passes": 9}
{"task_id": 452, "prompt": "Write a function that returns 0 when there is no loss. However, it should give the loss amount on a sale when the specified amount shows a deficit.", "pass@10": true, "passes": 3}
{"task_id": 282, "prompt": "Write a function to subtract two lists. Perform the subtraction element-wise by iterating over the lists. Ensure that both lists are of the same length before performing the subtraction.", "pass@10": true, "passes": 10}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, while the second part will contain the remaining elements after the split. The function should return the resulting lists in a tuple.", "pass@10": true, "passes": 2}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. Ensure that the list has at least one element before attempting the interchange.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Develop a Python function to calculate the sum of the fourth power of the first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers. Ensure that the function handles an empty list by returning a sum of 0.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can indeed be represented as the difference of two squares. The difference of squares here refers to a number that can be expressed as a - b, where a and b are perfect squares.", "pass@10": true, "passes": 1}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Make sure your function handles both uppercase and lowercase letters appropriately.", "pass@10": true, "passes": 9}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers. You need to convert them to polar coordinates. Ensure that the function accurately handles both the magnitude and the phase.", "pass@10": false, "passes": 0}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list. Ensure that your solution handles both empty lists and lists with no even numbers gracefully.", "pass@10": true, "passes": 5}
{"task_id": 464, "prompt": "Write a function to check if all values are the same in a dictionary. Ensure that the function handles both empty dictionaries and those with non-comparable values gracefully.", "pass@10": false, "passes": 0}
{"task_id": 473, "prompt": "Write a function to find the intersection of tuple components present in the provided tuple list, irrespective of their sequence.", "pass@10": true, "passes": 2}
{"task_id": 722, "prompt": "The task involves a dictionary where each key is a student's name and each value is a tuple containing a float representing the student's height and weight, along with a minimal height and minimal weight. Write a function to filter students that have height and weight above the minimum. Ensure that the function handles edge cases, such as empty dictionaries, gracefully.", "pass@10": true, "passes": 8}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary where every list is turned to a tuple. The value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. Ensure that the elements of the tuple are arranged with the string elements first, followed by the list elements.", "pass@10": true, "passes": 3}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. Ensure your solution efficiently computes the result even for large numbers.", "pass@10": true, "passes": 5}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not. Ensure that your solution accounts for edge cases, such as negative numbers and zero values.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure to handle multiple spaces and punctuation correctly.", "pass@10": true, "passes": 4}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Ensure that the function handles edge cases such as zero or negative side lengths gracefully.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball. The function should take a number as input and determine if it meets the criteria to be considered a woodball.", "pass@10": true, "passes": 3}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. Octagonal numbers are a figurate number system representing octagons, and it's crucial to consider edge cases where n is non-positive.", "pass@10": true, "passes": 5}
{"task_id": 68, "prompt": "Write a python function. This function should check whether the given array is monotonic or not.", "pass@10": true, "passes": 9}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": true, "passes": 8}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. Ensure to handle cases where the input list might be empty gracefully and return an empty dictionary in such scenarios.", "pass@10": true, "passes": 8}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring. It should be able to identify this presence within a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to determine the count of divisors for a specified integer.", "pass@10": true, "passes": 9}
{"task_id": 100, "prompt": "Write a function to identify the next smallest palindrome number of a given integer, returned as an integer.", "pass@10": true, "passes": 9}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": true, "passes": 4}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Ensure that your solution handles both positive and negative numbers efficiently.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Create a function to identify the element that appears most frequently in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). Consider edge cases where the string is empty or has no alphabetic characters.", "pass@10": true, "passes": 5}
{"task_id": 172, "prompt": "Write a function to count the number of occurrence of the string 'std' in a given string. You should also consider overlapping occurrences in your count.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not. Ensure that the function efficiently handles tuples with mixed and nested data types.", "pass@10": true, "passes": 9}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occurrences of the element in the tuple. Ensure your function handles tuples of varying lengths and element types.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Create a function that receives a list and an element, then inserts the element prior to every item in the list, and returns the modified list.", "pass@10": true, "passes": 1}
{"task_id": 253, "prompt": "Create a Python function that outputs the count of numeric elements in a specified list.", "pass@10": false, "passes": 0}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 9}
{"task_id": 269, "prompt": "Create a function that obtains the ASCII code of a character.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Create a function to convert a provided nested list into a single-level list.", "pass@10": true, "passes": 4}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers. Ensure your function handles both negative and positive integer inputs effectively.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": true, "passes": 9}
{"task_id": 405, "prompt": "Write a function to determine if an element is present within a tuple. You need to check each value in the tuple individually. This means iterating over each element.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence. You need to determine if any value from the first sequence can be found in the second sequence.", "pass@10": true, "passes": 10}
{"task_id": 419, "prompt": "Write a function to round each digit in a provided list of numbers and print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 8}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Ensure that your solution handles both positive and zero input values effectively.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers. A function is a block of organized, reusable code that is used to perform a single, related action. It should accept an array of integers and return a new array containing only the odd numbers from the input array.", "pass@10": true, "passes": 10}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases, such as empty strings or invalid size parameters.", "pass@10": true, "passes": 9}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Ensure that your solution efficiently handles both positive and negative integers in the array.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string. Ensure that the function handles edge cases such as strings with no lowercase characters or completely lowercase strings.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The Bell number is a magic number in combinatorial mathematics. It represents the number of ways to partition a set of n elements into non-empty subsets.", "pass@10": true, "passes": 3}
{"task_id": 624, "prompt": "Write a python function. The function should convert a given string to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first element in a given list with the last element. The last element should also be swapped with the first element in the list.", "pass@10": true, "passes": 10}
{"task_id": 632, "prompt": "Write a python function to relocate all zeroes to the end of the provided list.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N, with the i-th element of the tuple being equal to t_i * t_{i+1}.", "pass@10": true, "passes": 9}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list. Ensure that the list contains at least two distinct numbers.", "pass@10": false, "passes": 0}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a string that is provided. The function should be able to handle cases where the string is empty or contains no digits.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. You need to ensure that the words are exactly k length. It is important to consider word boundaries to avoid removing partial matches.", "pass@10": true, "passes": 6}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Ensure that your solution is both optimal and easy to understand.", "pass@10": true, "passes": 7}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple. Ensure that your solution handles edge cases, such as an empty input tuple or tuples with only one element.", "pass@10": false, "passes": 0}
{"task_id": 797, "prompt": "Write a python function to find the sum of all odd natural numbers within the range l and r. Ensure that the function handles cases where l and r are both even numbers efficiently.", "pass@10": true, "passes": 2}
{"task_id": 798, "prompt": "Write a python function to calculate the sum of an array. You need to implement this function using a loop structure. The function should iterate through each element of the array and add it to a total sum variable.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. Let's assume the number is 32 bits.", "pass@10": true, "passes": 10}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/ Consider edge cases such as negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Create a function that verifies if every element of the second tuple is less than its corresponding element in the first tuple.", "pass@10": true, "passes": 6}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs. For these pairs, determine those whose xor value is odd.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Develop a Python function that determines the length of the longest sublists.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted. You need to determine if the elements are in a non-decreasing order or are organized in some form of sorted sequence. It is crucial for the function to accurately assess the order of list elements.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Design a function to organize each sublist of strings in an input list of lists.", "pass@10": true, "passes": 2}
{"task_id": 587, "prompt": "Write a function. The function should convert a list to a tuple.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": true, "passes": 9}
{"task_id": 406, "prompt": "Write a python function to determine if the parity of a given number is odd, and ensure that your solution handles both positive and negative integers correctly.", "pass@10": true, "passes": 4}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Ensure the input list is not modified during the process. Consider edge cases where the list might contain empty strings or non-string elements.", "pass@10": false, "passes": 0}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": true, "passes": 9}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. You should ensure your solution is efficient for numbers up to 10^6. Make sure to test your function with a variety of numbers. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 1}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the sequence provided in the patterns array. Ensure that your function accurately handles edge cases, such as empty arrays or arrays with differing lengths. Pay special attention to correctly matching all elements in the sequence without assuming consistency unless explicitly stated by the pattern.", "pass@10": true, "passes": 4}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure to handle multiple spaces and punctuation correctly. The function should also be able to process strings that contain a mix of uppercase and lowercase letters.", "pass@10": true, "passes": 6}
{"task_id": 576, "prompt": "Develop a Python function to ascertain if one list is contained within another as a sublist. Consider edge cases such as empty lists or lists with duplicate elements for comprehensive testing.", "pass@10": true, "passes": 2}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers. The function should return these integers. They should be returned in descending order. Ensure that the input list contains at least n elements to find the n largest numbers reliably. Make sure to handle edge cases where the list might contain duplicate numbers efficiently.", "pass@10": true, "passes": 7}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Make sure that the function handles substitution of both ASCII and Unicode characters properly. This will ensure the function's applicability across different types of text data.", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Create a function to check if two integers have divisors. You will need to ascertain if the sums of these divisors are identical. Determine if their sums are identical.", "pass@10": true, "passes": 1}
{"task_id": 739, "prompt": "Write a python function to determine the index of the smallest triangular number containing n digits. A triangular number is a number of the form Tm = m*(m+1)/2. It is generated by the formula m*(m+1)/2 where m is a positive integer.", "pass@10": true, "passes": 9}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n, considering edge cases where n is very small or very large, and ensure the function handles these inputs efficiently and correctly.", "pass@10": true, "passes": 4}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern, returning the substring that matches, along with the start index and the end index. Ensure the function handles cases where no match is found gracefully.", "pass@10": true, "passes": 8}
{"task_id": 284, "prompt": "Compose a function that accepts a list along with an element and verifies if every item within the list matches the specified element.", "pass@10": false, "passes": 0}
{"task_id": 772, "prompt": "Write a function to eliminate all the words with k length in the provided string. You need to ensure that the words are exactly k length. It is important to consider word boundaries to avoid removing partial matches.", "pass@10": true, "passes": 3}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Ensure that your solution efficiently handles large values of n by utilizing memoization or dynamic programming techniques. Consider edge cases, such as when n is 0 or 1, to ensure the function behaves correctly for all inputs. Pay careful attention to integer division when implementing the recursive solution to avoid any unexpected results.", "pass@10": true, "passes": 2}
{"task_id": 232, "prompt": "Write a function that accepts a list of elements and an integer n and returns a list containing the n largest items from the list. Ensure that the elements in the returned list are ordered in descending order. If two elements have the same value, their relative order in the original list should be preserved.", "pass@10": true, "passes": 9}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball. The function should take a number as input and determine if it meets the criteria to be considered a woodball. Consider edge cases where the given number might be zero or negative.", "pass@10": true, "passes": 2}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Ensure your solution is efficient and handles large values of n. Pay careful attention to edge cases such as negative and zero values for n.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list, ensuring it handles cases where the list contains different data types.", "pass@10": true, "passes": 8}
{"task_id": 294, "prompt": "Create a function to identify the largest value in a provided list. The list can contain elements of different data types, such as integers and strings. To clarify, the list is not homogeneous. More specifically, it's a heterogeneous list.", "pass@10": true, "passes": 3}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum. It should compute the sum of the first n even natural numbers. These even natural numbers are to be raised to the fifth power.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and greater than or equal to twice the previous element. Each element should also be less than or equal to m.", "pass@10": false, "passes": 0}
{"task_id": 273, "prompt": "Create a function that takes in two tuples and deducts the elements of the first tuple from the corresponding elements of the second tuple.", "pass@10": true, "passes": 9}
{"task_id": 445, "prompt": "Create a function to execute element-wise multiplication of tuple elements in the specified pair of tuples.", "pass@10": true, "passes": 6}
{"task_id": 611, "prompt": "Create a function that takes a matrix, formatted as a list of lists, and returns the maximum value in the n'th column.", "pass@10": true, "passes": 7}
{"task_id": 762, "prompt": "Write a function to verify if the specified month number has 30 days. Months are given as number from 1 to 12. Ensure your solution accounts for both valid and invalid inputs.", "pass@10": true, "passes": 2}
{"task_id": 606, "prompt": "Write a function to change degrees into radians.", "pass@10": true, "passes": 9}
{"task_id": 2, "prompt": "Create a function to locate the common elements from the provided two lists. Make sure to test your function with multiple test cases to ensure its correctness.", "pass@10": true, "passes": 7}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L. The purpose of this function is to split the given list into two parts where the length of the first part of the list is L, while the second part will contain the remaining elements after the split. The function should return the resulting lists in a tuple.", "pass@10": true, "passes": 2}
{"task_id": 123, "prompt": "Craft a function to compute the total of all amicable numbers, which are numbers ranging from 1 to a specified numeral.", "pass@10": true, "passes": 6}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can indeed be represented as the difference of two squares. The difference of squares here refers to a number that can be expressed as a - b. In this expression, a and b are perfect squares.", "pass@10": true, "passes": 1}
{"task_id": 293, "prompt": "Create a function to determine the third side of a right-angled triangle and ensure it handles various input types gracefully while performing necessary validations.", "pass@10": true, "passes": 7}
{"task_id": 585, "prompt": "Write a function to identify the n most expensive items present in a given dataset. Expensive items are those with the highest price.", "pass@10": true, "passes": 8}
{"task_id": 578, "prompt": "Create a function that combines three lists of identical lengths into one continuous list by alternating their elements, ensuring that the final list maintains the order of elements as they appear in the original lists.", "pass@10": true, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise sum of the neighboring elements of the given tuple. Iterate through the tuple. Add each element with its neighbor.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Write a function to locate the nearest smaller number that is less than n. This should involve identifying the largest possible number that is still smaller than the given n. Make sure your function efficiently finds this number even for large inputs of n. Consider edge cases where n is a very small or a very large integer to ensure robust handling across scenarios.", "pass@10": true, "passes": 8}
{"task_id": 240, "prompt": "Write a function that takes in two lists. The function should take these lists as input parameters and replace the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 7}
{"task_id": 64, "prompt": "Design a function to sort a list of tuples based on the second element in each tuple.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Design a function to compute the sum and average of a sequence of numbers. The sequence consists of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not. An undulating number is a number that has at least three digits. The digits alternate between two numbers. These numbers must appear in an alternating sequence, such as 121 or 343. For instance, in the number 121212, 1 and 2 alternate throughout the number making it undulating. Note that a number like 111 or 222 is not considered undulating because the digits do not alternate. Implement the function taking a single integer as input and returning a boolean value as output indicating if the number is undulating or not.", "pass@10": true, "passes": 1}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number. Ensure to handle large input values efficiently. Consider edge cases where the input number is very close to the next perfect square.", "pass@10": true, "passes": 2}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. Ensure your function swiftly handles multiple tuple combinations for peak performance with sizable datasets. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 4}
{"task_id": 67, "prompt": "Write a function to determine the count of ways. Look into the different methods to partition a collection of Bell numbers.", "pass@10": true, "passes": 4}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Ensure that your solution is both optimal and easy to understand. Try to incorporate comments within the code to enhance readability and comprehension.", "pass@10": true, "passes": 7}
{"task_id": 809, "prompt": "Create a function that verifies if every element of the second tuple is less than its corresponding element in the first tuple. Ensure to handle tuples of varying lengths by comparing elements only up to the length of the shorter tuple.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Create a Python function that transforms the provided string to lowercase. Ensure special characters are managed properly. Pay attention to handling characters that may not have lowercase equivalents. This is important for a thorough transformation.", "pass@10": true, "passes": 5}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers. Ensure that your solution handles all possible input cases correctly and efficiently.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a list. You are required to write a function that can accept a list containing string values as input. Then, it should reverse each string in that list. Ensure that the function handles an empty list gracefully by returning an empty list.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number. Ensure your solution accounts for both integer inputs, and also consider floating-point inputs.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Create a function to eliminate the letters from the initial string that are found in the second string. Ensure that your solution is efficient and handles edge cases appropriately.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function that takes two lists as input. Ensure that both lists are of equal length. The function should iterate over both lists, dividing each corresponding pair of elements. For each pair of elements, the first element should be divided by the second element. Make sure to handle division by zero, returning NaN or an appropriate value in such cases. Return a new list containing the results of the element-wise division. Test the function with sample input lists to verify its correctness.", "pass@10": true, "passes": 10}
{"task_id": 773, "prompt": "Write a function to find the occurrence and location of the substrings within a string. Return None if there is no match. Ensure that your function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 5}
{"task_id": 724, "prompt": "Write a function that receives base and power as inputs to calculate the sum of all digits of the base raised to the specified power. The function should take two arguments. These arguments are the base and the power.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n], returning [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 6}
{"task_id": 565, "prompt": "Design a Python function to split a string into separate characters. Ensure that the function handles both regular and empty strings gracefully.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Design a function that accepts a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N, with the i-th element of the tuple being the product of t_i and t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Create a function that locates perfect squares within a specified range of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Create a function that takes in a list and a number n, and produces all possible combinations (allowing repetition) of the list's elements and returns a list containing a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'. Ensure that your implementation handles edge cases, such as negative exponents and large values of 'b', efficiently.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Make sure your function handles both uppercase. It should also handle lowercase letters appropriately.", "pass@10": true, "passes": 10}
{"task_id": 3, "prompt": "Write a python function to identify non-prime numbers. Non-prime numbers refer to numbers that aren't prime, meaning they have factors other than 1 and themselves. Your function should take an integer as an input and return True if the number is non-prime and False otherwise. Utilize efficient algorithms to ensure your function works quickly for larger numbers.", "pass@10": true, "passes": 8}
{"task_id": 770, "prompt": "Create a Python function that computes the sum of the fourth power for the first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists. Ensure your implementation handles edge cases like empty lists or lists with no duplicates effectively.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11. Ensure that your function is efficient and handles both positive and negative input values appropriately. Test your function with a variety of edge cases to validate its correctness.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Create a Python function to swap the initial and final elements in a list. Ensure that the list contains at least one element before trying the exchange.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the largest difference among possible pairs. You need to consider pairs in the given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 722, "prompt": "The task involves a dictionary where each key is a student's name and each value is a tuple containing a float representing the student's height and weight. The dictionary also includes a minimal height and minimal weight. Write a function to filter students that have height and weight above the minimum. Ensure that the function handles edge cases, such as empty dictionaries, gracefully.", "pass@10": true, "passes": 3}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. You have to determine where the element shows up at the last time. The element may appear more than once in the array. Make sure to handle edge cases where the array is empty or the element is not present.", "pass@10": true, "passes": 1}
{"task_id": 251, "prompt": "Write a function that takes an element and a list, and inserts the element in front of every item in the list, and returns the resulting list.", "pass@10": false, "passes": 0}
{"task_id": 580, "prompt": "Write a function to remove uneven elements. Make sure to remove all elements that do not have uniform sizes across layers of nesting. Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": true, "passes": 1}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary where every list is turned to a tuple with the value of the tuple being the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Whenever you receive a list, treat each element as a string. For each element, you should convert it to an integer. Convert each element to an integer.", "pass@10": true, "passes": 8}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers. Make sure that the function can properly handle the case of an empty list. In such a scenario, it should return a sum of 0.", "pass@10": true, "passes": 9}
{"task_id": 422, "prompt": "Create a Python function to compute the average of the cubes of the first n natural numbers. Ensure that your solution handles both positive and zero input values effectively.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. Handle cases where the input list might be empty gracefully by returning an empty dictionary in such scenarios.", "pass@10": true, "passes": 8}
{"task_id": 625, "prompt": "Write a python function to interchange the first element in a given list with the last element.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). Consider edge cases such as empty strings or strings with non-alphabetic characters.", "pass@10": true, "passes": 5}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Ensure that your solution efficiently handles both positive and negative integers in the array. Your function should be able to find and sum the largest and smallest values efficiently. It should work well regardless of whether the integers are positive or negative.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Make certain that the function deals with special cases such as zero or negative side lengths smoothly.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to determine the larger of two numbers. Ensure your function handles both negative and positive integer inputs effectively.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers. A function should accept an array of integers and return a new array containing only the odd numbers from the input array.", "pass@10": true, "passes": 8}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers. Make certain your function properly deals with scenarios where n is zero or negative.", "pass@10": true, "passes": 6}
{"task_id": 74, "prompt": "Write a function to confirm if it follows the order given in the patterns array. Ensure that your function accurately handles edge cases, such as empty arrays or arrays with differing lengths. Pay special attention to correctly matching all elements in the sequence without assuming consistency unless explicitly stated by the pattern.", "pass@10": true, "passes": 6}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length. Be sure to handle edge cases where the side length is zero or negative. Consider optimizing your solution for maximum efficiency when handling extremely large input values.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Create a function that determines the occurrence of each item in a merged list of sublists, and return the result as a dictionary. The function should handle lists containing various data types, including integers, strings, and floats.", "pass@10": true, "passes": 9}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring within a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Create a function to determine the element that occurs most often in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list. Ensure your implementation handles edge cases, such as when the list is empty or contains only one element. Consider optimizing the solution for large lists by minimizing additional space usage.", "pass@10": true, "passes": 9}
{"task_id": 269, "prompt": "Create a function that obtains the ASCII code of a character. Ensure the function handles both uppercase and lowercase letters gracefully.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence. It's necessary to figure out if any element from the first sequence is present in the second sequence.", "pass@10": true, "passes": 7}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. A function should examine the number provided as input. It will then determine if this input number is divisible by two.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function. The function should convert a given string to uppercase. Ensure that the function handles both lowercase and mixed-case strings effectively.", "pass@10": true, "passes": 10}
{"task_id": 797, "prompt": "Write a python function to find the sum of all odd natural numbers within the range l and r. Ensure that the function handles cases where l and r are both even numbers efficiently. Consider edge cases such as when l and r are equal or when the range contains no odd numbers.", "pass@10": true, "passes": 1}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not, ensuring that your solution accounts for edge cases, such as negative numbers and zero values.", "pass@10": true, "passes": 8}
{"task_id": 582, "prompt": "Create a function to determine whether a dictionary is empty. Make sure your function is capable of dealing with situations where the input may not be a dictionary.", "pass@10": true, "passes": 9}
{"task_id": 419, "prompt": "Create a function to round off each digit in a supplied list of numbers and print the overall sum times the length of the list.", "pass@10": true, "passes": 5}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs. For these pairs, determine those whose xor value is odd. Ensure your solution is optimized for large input sizes.", "pass@10": true, "passes": 6}
{"task_id": 573, "prompt": "Write a python function to calculate the product. It should calculate the product of only the unique numbers. The unique numbers should be in a given list. Ensure that the function handles both positive and negative integers correctly.", "pass@10": true, "passes": 7}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure your function handles non-integer inputs gracefully. Consider edge cases where one or both dimensions might be zero.", "pass@10": true, "passes": 10}
{"task_id": 260, "prompt": "Create a function to determine the nth prime number in the Newman\u2013Shanks\u2013Williams sequence.", "pass@10": false, "passes": 0}
{"task_id": 299, "prompt": "Create a function to calculate the highest sum from the list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not, which involves determining if one integer is positive while the other is negative, with the goal to compare their signs effectively.", "pass@10": true, "passes": 6}
{"task_id": 96, "prompt": "Craft a python function that computes the number of divisors for a given integer.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not. Ensure that the function efficiently handles tuples with a variety of data types. It should also be able to manage nested data types in the tuples that it processes.", "pass@10": true, "passes": 8}
{"task_id": 287, "prompt": "Write a python function accepts an integer n. It should determine the sum of squares of the first n even natural numbers. Returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 4}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors. The divisors being considered are those of a specified number.", "pass@10": true, "passes": 2}
{"task_id": 301, "prompt": "Problem Statement:\nWrite a function to find the depth of a dictionary.\nThe depth of a dictionary is defined as the maximum level of nested dictionaries within it.\nConsider both direct and indirect (nested within nested) levels of dictionaries inside the given dictionary.\nThe dictionary might not have nested dictionaries.\nYour function should be able to handle cases where the dictionary depth is zero, which means the dictionary has no nested dictionaries.\nThis exercise helps in understanding how to traverse and evaluate recursive data structures, which are common in programming.", "pass@10": true, "passes": 2}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": false, "passes": 0}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the elements contained within the given tuple. Each element's size should be considered in bytes.", "pass@10": false, "passes": 0}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd. Ensure your implementation handles both positive and negative integers correctly.", "pass@10": true, "passes": 3}
{"task_id": 576, "prompt": "Develop a Python function. The function should ascertain if one list is contained within another as a sublist.", "pass@10": true, "passes": 3}
{"task_id": 19, "prompt": "Create a function to determine if a specified list of integers has any repeated number.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Develop a Python function to calculate the quantity of substrings where the sum of digits matches their length.", "pass@10": true, "passes": 7}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": true, "passes": 9}
{"task_id": 80, "prompt": "Create a function that computes the nth number in the tetrahedral sequence.", "pass@10": true, "passes": 10}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number. Centered hexagonal numbers are integers representing a hexagon with a dot in the center and all other surrounding dots forming hexagonal layers.", "pass@10": true, "passes": 9}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list. Then, divide the product with the length of the list.", "pass@10": true, "passes": 9}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of these lists. The lists are given as input to the function, and they should be compared simultaneously. This will help identify the number of identical items present at the same index across the lists.", "pass@10": true, "passes": 7}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list. Ensure your solution is optimized for large datasets and minimal memory usage.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Create a function to calculate the overall number of characters within a string.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. A star number is a figurate number representing a centered hexagram. It consists of alternating triangles arranged in a star shape.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to calculate the number of all binary sequences of length 2n so that the sum of the initial n bits equals the sum of the final n bits.", "pass@10": false, "passes": 0}
{"task_id": 393, "prompt": "Create a function that identifies the list with the greatest number of elements.", "pass@10": true, "passes": 8}
{"task_id": 409, "prompt": "Write a function to locate the smallest product from the pairs of tuples inside a specified list.", "pass@10": true, "passes": 9}
{"task_id": 417, "prompt": "Write a function to find common first element. You need to find this in a given list of tuples.", "pass@10": false, "passes": 0}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple. Ensure that the function handles empty strings gracefully by returning an empty string for such cases.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Create a method to obtain the items and pairs from the provided two tuples.", "pass@10": false, "passes": 0}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number. Ensure your solution handles negative numbers correctly by returning the last digit as if the number were positive.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers. A Perrin number sequence starts with the values 3, 0, and 2, and each subsequent number in the sequence is the sum of the preceding two numbers with the number preceding those two. This sequence is used in mathematical contexts to illustrate a peculiar recurrence relation. The sequence progressively builds by following this unique pattern. Your function should take a non-negative integer n and return the sum of the first n Perrin numbers.", "pass@10": false, "passes": 0}
{"task_id": 635, "prompt": "Create a function that organizes the provided array in order.", "pass@10": true, "passes": 9}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not. Ensure your implementation can handle both uppercase and lowercase characters appropriately.", "pass@10": true, "passes": 10}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. The sequence of Jacobsthal numbers is illustrated at this link: https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/. The Jacobsthal numbers start as follows: 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 9}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Ensure that the function handles edge cases, such as lists with less than two elements, appropriately by returning an empty list.", "pass@10": true, "passes": 2}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest. Ensure to handle cases with negative integers efficiently as well.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. Make sure your implementation handles both uppercase and lowercase letters accurately.", "pass@10": true, "passes": 10}
{"task_id": 592, "prompt": "Write a python function to find the sum of the product of consecutive binomial co-efficients. Consider optimizing the approach for larger inputs to ensure efficiency.", "pass@10": true, "passes": 3}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd. Ensure your implementation handles both positive and negative integers. Your solution should work correctly regardless of whether the integers are positive or negative.", "pass@10": true, "passes": 7}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string. The function should also make use of the given list for the tuple creation.", "pass@10": true, "passes": 7}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure to handle multiple spaces and punctuation correctly. It is important that your function accounts for these formatting elements. The function should also be able to process strings that contain a mix of uppercase and lowercase letters.", "pass@10": true, "passes": 3}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers. The function should return these integers. They should be returned in descending order. Ensure that the input list contains at least n elements to find the n largest numbers reliably. Your implementation should handle edge cases, such as when all numbers are the same, gracefully.", "pass@10": true, "passes": 4}
{"task_id": 739, "prompt": "Write a python function to determine the index of the smallest triangular number containing n digits. A triangular number is a number of the form Tm = m*(m+1)/2. This number is generated by the formula given above. The formula m*(m+1)/2 where m is a positive integer will produce the desired number.", "pass@10": true, "passes": 8}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Make sure that the function handles substitution of both ASCII and Unicode characters properly. This will ensure the function's applicability across different types of text data. Consider edge cases such as an empty string, strings with special characters, and very large strings.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that accepts a list of elements and an integer n and returns a list containing the n largest items from the list. Ensure that the elements in the returned list are ordered in descending order. If two elements have the same value, their relative order in the original list should be preserved. Your solution should efficiently handle lists with a large number of elements.", "pass@10": true, "passes": 7}
{"task_id": 67, "prompt": "Create a method to determine how many different ways there are to divide a collection of Bell numbers into partitions.", "pass@10": true, "passes": 9}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. Consider edge cases where one or both integers might be zero or negative, and ensure your implementation handles these appropriately.", "pass@10": true, "passes": 3}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum. It should compute the sum of the first n even natural numbers. These even natural numbers are to be raised to the fifth power. Ensure your solution is efficient and handles large inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n, considering edge cases where n is very small or very large, and ensure the function handles these inputs efficiently and correctly.", "pass@10": true, "passes": 7}
{"task_id": 2, "prompt": "Create a function to locate the common elements from the provided two lists. Make sure to thoroughly test your function with multiple test cases. This will help to ensure its correctness.", "pass@10": true, "passes": 6}
{"task_id": 273, "prompt": "Create a function that takes in two tuples and deducts the elements of the first tuple from the corresponding elements of the second tuple. The function should iterate over each element of the tuples. It should subtract each element in the first tuple from the corresponding element in the second tuple.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "\nWrite a function to find the minimum value in a given heterogeneous list, ensuring it handles cases where the list contains different data types. Ensure the function can distinguish between numeric and non-numeric values.", "pass@10": true, "passes": 10}
{"task_id": 473, "prompt": "Write a function to find the intersection of tuple components present in the provided tuple list, irrespective of their sequence.", "pass@10": true, "passes": 1}
{"task_id": 445, "prompt": "Create a function to perform component-wise multiplication of elements within the designated pair of tuples.", "pass@10": true, "passes": 7}
{"task_id": 580, "prompt": "Write a function to remove uneven elements. Make sure to remove all elements that do not have uniform sizes across layers of nesting. Ensure your function is efficient with regards to time and space complexity, especially for deeply nested structures. Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": false, "passes": 0}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Ensure that the input matrix contains valid numbers and that the column index is within the bounds of the matrix.", "pass@10": true, "passes": 7}
{"task_id": 773, "prompt": "Write a function to identify the frequency and position of the substrings within a string. Return None if there is no match. Ensure that your function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 1}
{"task_id": 606, "prompt": "Create a function to convert degrees to radians.", "pass@10": true, "passes": 9}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L. The purpose of this function is to split the given list into two parts. The length of the first part of the list is L. The second part will contain the remaining elements after the split. The function should return the resulting lists in a tuple.", "pass@10": true, "passes": 1}
{"task_id": 287, "prompt": "Write a python function accepts an integer n. It should determine the sum of squares of the first n even natural numbers. Returns the sum of squares of first n even natural numbers. Ensure your function is efficient and handles large integers gracefully.", "pass@10": true, "passes": 8}
{"task_id": 89, "prompt": "Write a function to locate the nearest smaller number that is less than n, involving identifying the largest possible number that is still smaller than the given n. Make sure your function efficiently finds this number even for large inputs of n. Consider edge cases where n is a very small or a very large integer to ensure robust handling across scenarios.", "pass@10": true, "passes": 7}
{"task_id": 123, "prompt": "Craft a function to compute the total of all amicable numbers. Amicable numbers are numbers ranging from 1 to a specified numeral.", "pass@10": true, "passes": 8}
{"task_id": 470, "prompt": "Write a function to find the pairwise sum of the adjacent elements of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Create a function to combine three lists of identical length into a unified flat list by alternating their elements.", "pass@10": true, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers. Ensure that your function handles edge cases gracefully. Make sure to include appropriate error handling and validation for the input values.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists. It should replace the last element of the first list. The replacement should be done with the elements of the second list.", "pass@10": true, "passes": 4}
{"task_id": 599, "prompt": "Create a function to calculate the sum and average of the initial n natural numbers. The function should take n as its parameter. It should then compute the sum of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers. This function should take three given integers as its input parameters, considering all possible cases where two or all three integers might be equal.", "pass@10": true, "passes": 8}
{"task_id": 726, "prompt": "Design a function that accepts a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N with the i-th element of the tuple being the product of t_i and t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers, ensuring that your solution handles all possible input cases correctly and efficiently.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Create a Python function to determine the next perfect square larger than a specified number. Ensure to handle large input values efficiently. Take into account edge cases where the input number is very close to the subsequent perfect square.", "pass@10": true, "passes": 2}
{"task_id": 401, "prompt": "Craft a method to conduct element-wise addition based on indexes within the provided two nested tuples. Take into account potential scenarios like tuples of varying lengths or having non-numeric elements.", "pass@10": true, "passes": 5}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists. Ensure your implementation effectively handles edge cases like empty lists. Also, make sure it works well for lists with no duplicates.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not. An undulating number is a number that has at least three digits with the digits alternating between two numbers appearing in a pattern such as 121 or 343. For instance, in the number 121212, 1 and 2 alternate throughout the number making it undulating. Note that a number like 111 or 222 is not considered undulating because the digits do not alternate. Implement the function taking a single integer as input and returning a boolean value as output indicating if the number is undulating or not.", "pass@10": true, "passes": 2}
{"task_id": 782, "prompt": "Design a Python function that calculates the total sum of all subarrays with odd lengths. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Ensure that your solution is both optimal and easy to understand. Try to incorporate comments within the code to enhance readability and comprehension.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. Octagonal numbers are a figurate number system representing octagons, and it's crucial to consider edge cases where n is non-positive. Ensure that your solution is optimized for large values of n.", "pass@10": true, "passes": 9}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list, ensuring your function swiftly handles multiple tuple combinations for peak performance with sizable datasets. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 3}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples, ensuring your solution efficiently handles the comparison for tuples of significant size. Consider edge cases where one or both tuples are empty.", "pass@10": true, "passes": 4}
{"task_id": 618, "prompt": "Create a function that receives two lists as input. Ensure that both lists contain the same amount of elements. The function needs to loop through both lists, dividing each corresponding pair of elements. For each pair, the first element should be divided by the second element. Ensure division by zero is handled, returning NaN or a suitable value in such instances. Return a new list comprising the results of the element-wise division.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product. It must compute the multiplication of only distinct numbers. The unique numbers should be in a given list.", "pass@10": true, "passes": 9}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples. It should return a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list, ensuring that the elements of the tuple are arranged with the string elements first, followed by the list elements.", "pass@10": false, "passes": 0}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'. Ensure that your implementation handles edge cases carefully. It should also efficiently manage scenarios such as negative exponents and large values of 'b'.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Create a function to eliminate the letters from the initial string that are found in the second string, ensuring that your solution is efficient and handles edge cases appropriately.", "pass@10": true, "passes": 10}
{"task_id": 797, "prompt": "Write a python function to find the sum of all odd natural numbers within the range l and r. Ensure that the function handles cases where l and r are both even numbers efficiently and consider edge cases such as when l and r are equal or when the range contains no odd numbers.", "pass@10": true, "passes": 1}
{"task_id": 724, "prompt": "Write a function that receives base and power as inputs to calculate the sum of all digits of the base raised to the specified power. The function should take two arguments, which are the base and the power.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure to handle multiple spaces and punctuation correctly. It is important that your function accounts for these formatting elements. The function should also be able to process strings that contain a mix of uppercase and lowercase letters. Make sure to consider edge cases, such as strings with no valid words or strings without spaces.", "pass@10": true, "passes": 4}
{"task_id": 565, "prompt": "Create a Python function to break a string into individual characters.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Create a Python function that computes the sum of the fourth power for the first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Make sure your function handles both uppercase and lowercase letters appropriately.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers. A function should accept an array of integers. It should return a new array containing only the odd numbers from the input array.", "pass@10": true, "passes": 8}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd. Ensure your implementation handles both positive and negative integers. Your solution should work for integers regardless of their sign. It should accurately determine parity whether the integers are positive or negative.", "pass@10": true, "passes": 2}
{"task_id": 422, "prompt": "Create a Python function to compute the average of the cubes of the first n natural numbers. Ensure that your solution handles both positive and zero input values effectively. Test your function with multiple cases to validate its accuracy.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of these lists. The lists are provided to the function as input parameters. The lists should be compared simultaneously. This will help identify the number of identical items present at the same index across the lists.", "pass@10": true, "passes": 8}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Make sure to handle invalid inputs gracefully.", "pass@10": true, "passes": 4}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers. Ensure your function handles both negative and positive integer inputs effectively. Consider edge cases where both numbers may be equal, and return the appropriate result.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the largest difference among possible pairs. You are required to look at pairs in the provided list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary where every list is turned to a tuple with the value of the tuple being the number of its occurrences. Ensure your solution handles nested lists appropriately while flattening and counting the occurrences.", "pass@10": true, "passes": 9}
{"task_id": 230, "prompt": "Write a function that takes in a string and character. This function should replace blank spaces, which are the gaps between words, in the string with the character. The character acts as a substitute for the spaces. Then, it returns the string. Ensure the function handles edge cases such as multiple consecutive spaces, spaces at the beginning, or end of the string.", "pass@10": true, "passes": 9}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should produce a dictionary. This dictionary should transform each list into a tuple with the value indicating how many times it appears in the original list.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. When you receive a list, treat each element as a string. Convert each element to an integer. Ensure that your function handles edge cases where the list might be empty or contain non-numeric strings.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. Handle cases where the input list might be empty gracefully by returning an empty dictionary in such scenarios. Ensure that the solution is efficient and works well with large datasets.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Ensure that your solution efficiently handles both positive and negative integers in the array. Your function should be able to find and sum the largest and smallest values efficiently. It should work well regardless of whether the integers are positive or negative. Consider edge cases such as arrays with repeating elements or a single element.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Create a method that reverses words separated by spaces within a provided string.", "pass@10": true, "passes": 9}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases, such as empty strings or invalid size parameters. Consider adding test cases to validate the function's robustness across different scenarios.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Create a function to calculate the highest sum from the list of tuples. Consider edge cases where the list of tuples might be empty or contain negative numbers.", "pass@10": true, "passes": 9}
{"task_id": 625, "prompt": "Write a python function to interchange the first element in a given list with the last element. Ensure the function handles edge cases like lists with a single element or empty lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to uncover the smallest k entries from a list of tuples. You should refer to the following link for the complete description of the problem: https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/. The function should accept a list of tuples and an integer k. Your task is to find and return the smallest k tuples from the list in ascending order. You would be able to achieve this by sorting the list and slicing the first k elements. Ensure the function handles edge cases such as when k is greater than the length of the list or when the list is empty.", "pass@10": true, "passes": 5}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number. Ensure that your solution is efficient in terms of time complexity and consider edge cases where the list might be empty or contain duplicate elements.", "pass@10": true, "passes": 7}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n. Ensure your solution handles edge cases where n is very small or very large effectively.", "pass@10": true, "passes": 9}
{"task_id": 234, "prompt": "Write a function to compute the volume of a cube using its side length. Be sure to handle edge cases where the side length is zero or negative. Consider optimizing your solution for maximum efficiency when handling extremely large input values.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Create a function that obtains the ASCII code of a character. Make sure that the function handles both uppercase letters properly. Ensure the function handles lowercase letters gracefully.", "pass@10": true, "passes": 8}
{"task_id": 582, "prompt": "Create a function to determine whether a dictionary is empty. Ensure your function can handle cases where the input might not be a dictionary.", "pass@10": true, "passes": 9}
{"task_id": 282, "prompt": "Write a function to subtract two lists. Perform the subtraction element-wise by iterating over the lists. Iterate over the lists one element at a time. Ensure that both lists are of the same length before performing the subtraction.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. A function should examine the number provided as input and determine if it is divisible by two.", "pass@10": true, "passes": 10}
{"task_id": 592, "prompt": "Write a python function to find the sum of the product of consecutive binomial co-efficients, considering the approach optimization for larger inputs to ensure efficiency.", "pass@10": true, "passes": 1}
{"task_id": 391, "prompt": "Write a function to convert more than one list into a nested dictionary. A nested dictionary is a dictionary where each key points to another dictionary. The function is expected to receive several lists as input. Each list will represent a level in the nested dictionary.", "pass@10": true, "passes": 1}
{"task_id": 458, "prompt": "Write a function to calculate the area of a rectangle. Ensure your function handles non-integer inputs gracefully. Consider edge cases where one or both dimensions might be zero.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to determine the n-th power of every element in a list. You must ensure that your function handles both positive and negative integers. It is important to handle integers correctly regardless of their sign.", "pass@10": true, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors. The divisors being considered are those of a specified number. Consider edge cases such as when the input number is zero or negative.", "pass@10": true, "passes": 1}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": true, "passes": 7}
{"task_id": 393, "prompt": "Create a function that identifies the list with the greatest number of elements. Make sure to consider edge cases such as lists with equal length.", "pass@10": true, "passes": 1}
{"task_id": 452, "prompt": "Write a function that returns 0 when there is no loss. The function should provide the loss amount on a sale when the specified amount shows a deficit.", "pass@10": true, "passes": 6}
{"task_id": 393, "prompt": "Create a function that identifies the list with the greatest number of elements, and make sure to consider edge cases such as lists with equal length.", "pass@10": true, "passes": 1}

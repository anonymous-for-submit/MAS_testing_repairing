{"source_file": "Benchmark Questions Verification V2.ipynb", "task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r. The function should also take the height h as an input parameter.", "code": "import math\ndef lateralsurface_cone(r,h):\n  l = math.sqrt(r * r + h * h)\n  LSA = math.pi * r  * l\n  return LSA", "test_imports": [], "test_list": ["assert lateralsurface_cone(5,12)==204.20352248333654", "assert lateralsurface_cone(10,15)==566.3586699569488", "assert lateralsurface_cone(19,17)==1521.8090132193388", "assert lateralsurface_cone(4, 10) == 135.3439535717124", "assert lateralsurface_cone(8, 11) == 341.84223862609196", "assert lateralsurface_cone(10, 14) == 540.5000372546194", "assert lateralsurface_cone(10, 17) == 619.6189241803191", "assert lateralsurface_cone(2, 17) == 107.55080826324239", "assert lateralsurface_cone(1, 11) == 34.700025027842585", "assert lateralsurface_cone(10, 17) == 619.6189241803191", "assert lateralsurface_cone(3, 12) == 116.5780650907367", "assert lateralsurface_cone(1, 15) == 47.22849346153437", "assert lateralsurface_cone(9, 14) == 470.5787011194216", "assert lateralsurface_cone(7, 8) == 233.76911594312833", "assert lateralsurface_cone(6, 12) == 252.89333031746617", "assert lateralsurface_cone(10, 13) == 515.25950586991", "assert lateralsurface_cone(9, 7) == 322.3770065365564", "assert lateralsurface_cone(9, 14) == 470.5787011194216", "assert lateralsurface_cone(9, 15) == 494.59884217959996", "assert lateralsurface_cone(10, 9) == 422.6580647044575", "assert lateralsurface_cone(5, 17) == 278.3458182702795", "assert lateralsurface_cone(6, 15) == 304.52389553635294", "assert lateralsurface_cone(4, 12) == 158.95341225273762", "assert lateralsurface_cone(6, 9) == 203.88912118450162", "assert lateralsurface_cone(8, 16) == 449.5881427866065", "assert lateralsurface_cone(9, 11) == 401.85378834922545", "assert lateralsurface_cone(8, 8) == 284.34450804213543", "assert lateralsurface_cone(1, 10) == 31.572615420804546", "assert lateralsurface_cone(6, 17) == 339.8152019741693", "assert lateralsurface_cone(1, 14) == 44.09435413989645", "assert lateralsurface_cone(5, 7) == 135.12500931365486", "assert lateralsurface_cone(1, 13) == 40.9613567668991", "assert lateralsurface_cone(1, 10) == 31.572615420804546", "assert lateralsurface_cone(1, 13) == 40.9613567668991", "assert lateralsurface_cone(4, 7) == 101.31331885360844", "assert lateralsurface_cone(8, 9) == 302.63828052992443", "assert lateralsurface_cone(7, 10) == 268.43617813616964", "assert lateralsurface_cone(14, 16) == 935.0764637725133", "assert lateralsurface_cone(6, 12) == 252.89333031746617", "assert lateralsurface_cone(6, 17) == 339.8152019741693", "assert lateralsurface_cone(6, 14) == 287.1078820894653", "assert lateralsurface_cone(6, 20) == 393.59028275542903", "assert lateralsurface_cone(6, 18) == 357.6451775686596", "assert lateralsurface_cone(11, 19) == 758.6929997570384", "assert lateralsurface_cone(13, 15) == 810.6648374334094", "assert lateralsurface_cone(15, 11) == 876.5550197362436", "assert lateralsurface_cone(11, 12) == 562.5556551319436", "assert lateralsurface_cone(11, 20) == 788.7900424378303", "assert lateralsurface_cone(14, 12) == 810.9934878213232", "assert lateralsurface_cone(9, 18) == 569.0099932142988", "assert lateralsurface_cone(14, 12) == 810.9934878213232", "assert lateralsurface_cone(9, 13) == 447.0564719608245", "assert lateralsurface_cone(9, 18) == 569.0099932142988", "assert lateralsurface_cone(12, 16) == 753.9822368615503", "assert lateralsurface_cone(10, 11) == 467.03132364336636", "assert lateralsurface_cone(14, 18) == 1002.9506870026199", "assert lateralsurface_cone(15, 10) == 849.5380049354233", "assert lateralsurface_cone(14, 10) == 756.7000521564672", "assert lateralsurface_cone(14, 17) == 968.6096191797571", "assert lateralsurface_cone(11, 12) == 562.5556551319436", "assert lateralsurface_cone(14, 10) == 756.7000521564672", "assert lateralsurface_cone(13, 16) == 841.9526923219875", "assert lateralsurface_cone(5, 13) == 218.78661143973912", "assert lateralsurface_cone(12, 11) == 613.6970783257566", "assert lateralsurface_cone(12, 11) == 613.6970783257566", "assert lateralsurface_cone(8, 20) == 541.3758142868496", "assert lateralsurface_cone(9, 16) == 519.0477736553122", "assert lateralsurface_cone(7, 20) == 465.98408387880266", "assert lateralsurface_cone(13, 19) == 940.2236256367811", "assert lateralsurface_cone(19, 22) == 1735.1292385670592", "assert lateralsurface_cone(22, 16) == 1880.1323124435057", "assert lateralsurface_cone(22, 19) == 2009.0970130776475", "assert lateralsurface_cone(24, 13) == 2057.9710009121764", "assert lateralsurface_cone(14, 16) == 935.0764637725133", "assert lateralsurface_cone(22, 18) == 1964.6185208184352", "assert lateralsurface_cone(19, 15) == 1444.9482110556244", "assert lateralsurface_cone(21, 19) == 1868.3418915675168", "assert lateralsurface_cone(15, 12) == 905.2203628953802", "assert lateralsurface_cone(15, 19) == 1140.748587675493", "assert lateralsurface_cone(21, 16) == 1741.7489463162146", "assert lateralsurface_cone(17, 15) == 1210.8221402684294", "assert lateralsurface_cone(22, 12) == 1732.0178974017306", "assert lateralsurface_cone(22, 22) == 2150.355342068649", "assert lateralsurface_cone(17, 16) == 1246.8007223263787", "assert lateralsurface_cone(24, 16) == 2174.8172926346833", "assert lateralsurface_cone(16, 20) == 1287.4245161178742", "assert lateralsurface_cone(17, 12) == 1111.3292428165107", "assert lateralsurface_cone(23, 12) == 1874.4991197817697", "assert lateralsurface_cone(19, 17) == 1521.8090132193388", "assert lateralsurface_cone(20, 19) == 1733.2938526665353", "assert lateralsurface_cone(16, 15) == 1102.4080948235726", "assert lateralsurface_cone(24, 22) == 2454.7883133030264", "assert lateralsurface_cone(15, 22) == 1254.7703543213713", "assert lateralsurface_cone(17, 20) == 1401.8721403713373", "assert lateralsurface_cone(16, 14) == 1068.6588157400154", "assert lateralsurface_cone(15, 19) == 1140.748587675493", "assert lateralsurface_cone(19, 17) == 1521.8090132193388", "assert lateralsurface_cone(20, 15) == 1570.7963267948965", "assert lateralsurface_cone(17, 17) == 1283.9931691277677", "assert lateralsurface_cone(17, 21) == 1442.9797089695412", "assert lateralsurface_cone(24, 13) == 2057.9710009121764", "assert lateralsurface_cone(15, 16) == 1033.5075888970994"], "entry_point": "lateralsurface_cone", "repair_prompt": ["Write a function lateralsurface_cone to find the lateral surface area of a cone given radius r. The function should also take the height h as an input parameter.\nlateralsurface_cone(5,12)==204.20352248333654\n"], "completions": ["from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Validate inputs\n    if r < 0 or h < 0:\n        raise ValueError(\"Radius and height must be non-negative.\")\n\n    # Calculate the slant height of the cone\n    l = math.sqrt(r**2 + h**2)\n\n    # Calculate the lateral surface area\n    A = math.pi * r * l\n\n    return A\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n\n    Raises:\n        ValueError: If the radius or height is negative.\n    \"\"\"\n    if r < 0 or h < 0:\n        raise ValueError(\"Radius and height must be non-negative.\")\n    \n    l = math.sqrt(r**2 + h**2)  # Calculate the slant height\n    lateral_surface_area = math.pi * r * l  # Calculate the lateral surface area\n    \n    return lateral_surface_area\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Calculate the slant height of the cone\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return lateral_surface_area\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Calculate the slant height using the Pythagorean theorem\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return round(lateral_surface_area, 2)\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Calculate the slant height of the cone\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area\n    A = math.pi * r * l\n    \n    return A\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Calculate the slant height of the cone\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return lateral_surface_area\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculates the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Calculate the slant height of the cone\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return lateral_surface_area\n", "from typing import List\n## main.py\n\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Calculate the slant height of the cone\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return lateral_surface_area\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Calculate the slant height of the cone\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return lateral_surface_area\n", "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Validate inputs\n    if r < 0 or h < 0:\n        raise ValueError(\"Radius and height must be non-negative.\")\n    \n    # Calculate the slant height using the Pythagorean theorem\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return lateral_surface_area\n"], "plans": ["requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2).\nrequirement pool:\n- Implement the function to calculate the lateral surface area of a cone.\n- Ensure the function takes radius and height as input parameters.\n- Return the calculated lateral surface area with the given radius and height.\n- Include error handling for invalid inputs such as negative values for radius or height.\n- Optimize the function for performance and scalability.\nTo implement the function for calculating the lateral surface area of a cone, we will use Python's math library to handle the mathematical operations. The function will take two parameters: radius (r) and height (h). The lateral surface area (A) of a cone is given by the formula \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). We will include error handling to ensure that the inputs are valid (non-negative numbers).\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem as \u221a(r^2 + h^2).\nrequirement pool:\n- Implement the function to calculate the lateral surface area of a cone.\n- Ensure the function takes radius and height as input parameters.\n- Return the calculated lateral surface area with the given radius and height.\n- Include error handling for invalid inputs such as negative values for radius or height.\n- Optimize the function for performance and scalability.\nWe will use the Python programming language to implement the function. The function will calculate the lateral surface area of a cone using the formula \u03c0 * r * l, where r is the radius and l is the slant height. The slant height will be calculated using the Pythagorean theorem as \u221a(r^2 + h^2). The function will handle basic error checking for invalid inputs such as negative values for radius or height.\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). The function should return the calculated lateral surface area, rounded to a reasonable number of decimal places.\nrequirement pool:\n- The main code should accurately calculate the lateral surface area of a cone using the given radius and height.\n- The function should be easy to understand and use, with clear instructions and comments.\n- The function should handle edge cases, such as negative values for radius or height.\n- The function should include error handling to manage invalid inputs gracefully.\n- The function should be optimized for performance and scalability, ensuring it can handle large inputs efficiently.\nTo create a function that calculates the lateral surface area of a cone, we will use the formula \u03c0 * r * l, where r is the radius and l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). We will ensure the function is easy to understand and use, with clear instructions and comments. The function will handle edge cases and invalid inputs gracefully, and it will be optimized for performance and scalability.\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2).\nrequirement pool:\n- The main code should accurately calculate the lateral surface area of a cone using the given radius and height.\n- The function should be able to handle both integer and floating-point inputs for radius and height.\n- The function should return a result with an appropriate number of decimal places, ensuring accuracy.\n- The function should include appropriate error handling to manage invalid inputs gracefully.\n- The function should be documented with clear instructions and examples to aid user understanding.\nTo create a function that calculates the lateral surface area of a cone, we will use the formula \u03c0 * r * l, where r is the radius and l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). We will ensure the function handles both integer and floating-point inputs and returns results with an appropriate number of decimal places for accuracy.\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). The function should return the calculated lateral surface area.\nrequirement pool:\n- Implement the function to calculate the lateral surface area of a cone.\n- Ensure the function takes radius and height as input parameters.\n- Return the calculated lateral surface area using the formula \u03c0 * r * l.\n- Include error handling for invalid inputs such as negative values for radius or height.\n- Optimize the function for performance and scalability.\nTo implement the function for calculating the lateral surface area of a cone, we will use Python's math library to handle the mathematical operations. The function will take two parameters: radius (r) and height (h). The lateral surface area (A) of a cone is given by the formula \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). The function will return the calculated lateral surface area.\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem as \u221a(r^2 + h^2).\nrequirement pool:\n- Implement the function to calculate the lateral surface area of a cone.\n- Ensure the function takes radius and height as input parameters.\n- Return the calculated lateral surface area with the given radius and height.\n- Include error handling for invalid inputs such as negative values for radius or height.\n- Optimize the function for performance and scalability.\nTo implement the function for calculating the lateral surface area of a cone, we will use Python's math library to handle the mathematical operations. The function will take two parameters: radius (r) and height (h). The lateral surface area (LSA) of a cone is given by the formula \u03c0 * r * l, where l is the slant height calculated using the Pythagorean theorem as \u221a(r^2 + h^2).\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). The function should return the calculated lateral surface area.\nrequirement pool:\n- The main code should accurately calculate the lateral surface area of a cone using the given radius and height.\n- The function should be easy to understand and use, with clear instructions or documentation.\n- The application should provide instant results for the lateral surface area calculation.\n- The user interface should be simple and intuitive, with clear input fields and a straightforward output display.\n- The function should handle both small and large inputs efficiently, ensuring optimal performance.\nTo create a function that calculates the lateral surface area of a cone, we will use the formula \u03c0 * r * l, where r is the radius and l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). We will ensure the function is easy to understand and use, with clear instructions and a simple UI.\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2).\nrequirement pool:\n- The main code should accurately calculate the lateral surface area of a cone using the given radius and height.\n- The function should be easy to use and understand, with clear documentation.\n- The application should handle edge cases, such as negative values for radius or height.\n- The function should be optimized for performance and should handle large inputs efficiently.\n- The UI should be clean and simple, with clear labels and instructions.\nTo create a function that calculates the lateral surface area of a cone, we will use Python's math library to handle the mathematical operations. The function will take two parameters: radius (r) and height (h). The lateral surface area (A) of a cone is given by the formula \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). We will ensure the function is easy to understand and use, with clear documentation.\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2). The function should return the calculated lateral surface area.\nrequirement pool:\n- The main code should accurately calculate the lateral surface area of a cone using the given radius and height.\n- The function should be easy to understand and use, with clear documentation or comments.\n- The function should handle edge cases, such as when the radius or height is zero or negative.\n- The function should be optimized for performance and should handle large inputs efficiently.\n- The function should be integrated into a larger application if necessary, with minimal impact on performance.\nTo create a function that calculates the lateral surface area of a cone, we will use the formula \u03c0 * r * l, where r is the radius and l is the slant height. The slant height can be calculated using the Pythagorean theorem: l = sqrt(r^2 + h^2), where h is the height of the cone. We will ensure the function is easy to understand and use, with clear documentation and comments.\n", "requirement analysis:\nThe requirement is to create a function that calculates the lateral surface area of a cone. The function should take two parameters: radius (r) and height (h). The formula for the lateral surface area of a cone is \u03c0 * r * l, where l is the slant height. The slant height can be calculated using the Pythagorean theorem as \u221a(r^2 + h^2).\nrequirement pool:\n- Implement the function to calculate the lateral surface area of a cone.\n- Ensure the function takes radius and height as input parameters.\n- Return the calculated lateral surface area with the given radius and height.\n- Include error handling for invalid inputs such as negative values for radius or height.\n- Optimize the function for performance and scalability.\nWe will use the Python programming language to implement the function. The function will calculate the lateral surface area of a cone using the formula \u03c0 * r * l, where r is the radius and l is the slant height. The slant height will be calculated using the Pythagorean theorem as \u221a(r^2 + h^2). The function will handle basic error checking for invalid inputs such as negative values for radius or height.\n"], "test": ["def check(lateralsurface_cone):\n\tassert lateralsurface_cone(5,12)==204.20352248333654", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(10,15)==566.3586699569488", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(19,17)==1521.8090132193388", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(4, 10) == 135.3439535717124", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(8, 11) == 341.84223862609196", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(10, 14) == 540.5000372546194", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(10, 17) == 619.6189241803191", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(2, 17) == 107.55080826324239", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(1, 11) == 34.700025027842585", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(10, 17) == 619.6189241803191", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(3, 12) == 116.5780650907367", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(1, 15) == 47.22849346153437", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 14) == 470.5787011194216", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(7, 8) == 233.76911594312833", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 12) == 252.89333031746617", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(10, 13) == 515.25950586991", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 7) == 322.3770065365564", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 14) == 470.5787011194216", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 15) == 494.59884217959996", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(10, 9) == 422.6580647044575", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(5, 17) == 278.3458182702795", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 15) == 304.52389553635294", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(4, 12) == 158.95341225273762", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 9) == 203.88912118450162", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(8, 16) == 449.5881427866065", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 11) == 401.85378834922545", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(8, 8) == 284.34450804213543", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(1, 10) == 31.572615420804546", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 17) == 339.8152019741693", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(1, 14) == 44.09435413989645", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(5, 7) == 135.12500931365486", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(1, 13) == 40.9613567668991", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(1, 10) == 31.572615420804546", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(1, 13) == 40.9613567668991", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(4, 7) == 101.31331885360844", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(8, 9) == 302.63828052992443", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(7, 10) == 268.43617813616964", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 16) == 935.0764637725133", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 12) == 252.89333031746617", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 17) == 339.8152019741693", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 14) == 287.1078820894653", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 20) == 393.59028275542903", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(6, 18) == 357.6451775686596", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(11, 19) == 758.6929997570384", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(13, 15) == 810.6648374334094", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(15, 11) == 876.5550197362436", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(11, 12) == 562.5556551319436", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(11, 20) == 788.7900424378303", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 12) == 810.9934878213232", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 18) == 569.0099932142988", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 12) == 810.9934878213232", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 13) == 447.0564719608245", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 18) == 569.0099932142988", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(12, 16) == 753.9822368615503", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(10, 11) == 467.03132364336636", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 18) == 1002.9506870026199", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(15, 10) == 849.5380049354233", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 10) == 756.7000521564672", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 17) == 968.6096191797571", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(11, 12) == 562.5556551319436", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 10) == 756.7000521564672", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(13, 16) == 841.9526923219875", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(5, 13) == 218.78661143973912", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(12, 11) == 613.6970783257566", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(12, 11) == 613.6970783257566", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(8, 20) == 541.3758142868496", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(9, 16) == 519.0477736553122", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(7, 20) == 465.98408387880266", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(13, 19) == 940.2236256367811", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(19, 22) == 1735.1292385670592", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(22, 16) == 1880.1323124435057", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(22, 19) == 2009.0970130776475", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(24, 13) == 2057.9710009121764", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(14, 16) == 935.0764637725133", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(22, 18) == 1964.6185208184352", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(19, 15) == 1444.9482110556244", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(21, 19) == 1868.3418915675168", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(15, 12) == 905.2203628953802", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(15, 19) == 1140.748587675493", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(21, 16) == 1741.7489463162146", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(17, 15) == 1210.8221402684294", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(22, 12) == 1732.0178974017306", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(22, 22) == 2150.355342068649", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(17, 16) == 1246.8007223263787", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(24, 16) == 2174.8172926346833", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(16, 20) == 1287.4245161178742", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(17, 12) == 1111.3292428165107", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(23, 12) == 1874.4991197817697", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(19, 17) == 1521.8090132193388", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(20, 19) == 1733.2938526665353", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(16, 15) == 1102.4080948235726", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(24, 22) == 2454.7883133030264", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(15, 22) == 1254.7703543213713", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(17, 20) == 1401.8721403713373", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(16, 14) == 1068.6588157400154", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(15, 19) == 1140.748587675493", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(19, 17) == 1521.8090132193388", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(20, 15) == 1570.7963267948965", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(17, 17) == 1283.9931691277677", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(17, 21) == 1442.9797089695412", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(24, 13) == 2057.9710009121764", "def check(lateralsurface_cone):\n\tassert lateralsurface_cone(15, 16) == 1033.5075888970994"], "scores": [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "pass_results": [true, true, true, false, true, true, true, true, true, true], "pass_test_cases_num": [102, 102, 102, 0, 102, 102, 102, 102, 102, 102], "completion": "from typing import List\nimport math\n\ndef lateralsurface_cone(r: float, h: float) -> float:\n    \"\"\"\n    Calculate the lateral surface area of a cone.\n\n    Args:\n        r (float): The radius of the base of the cone.\n        h (float): The height of the cone.\n\n    Returns:\n        float: The lateral surface area of the cone.\n    \"\"\"\n    # Validate inputs\n    if r < 0 or h < 0:\n        raise ValueError(\"Radius and height must be non-negative.\")\n    \n    # Calculate the slant height using the Pythagorean theorem\n    l = math.sqrt(r**2 + h**2)\n    \n    # Calculate the lateral surface area using the formula \u03c0 * r * l\n    lateral_surface_area = math.pi * r * l\n    \n    return lateral_surface_area\n", "passed": true, "pass": true, "pass_num": 9, "round": 214, "mutate_method": "expand_one2two", "parent_index": 214}

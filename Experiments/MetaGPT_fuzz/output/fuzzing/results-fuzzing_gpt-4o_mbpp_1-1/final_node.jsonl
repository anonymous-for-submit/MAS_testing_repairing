{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": true, "passes": 5}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": true, "passes": 8}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": true, "passes": 1}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": true, "passes": 7}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 7}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 9}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": true, "passes": 9}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": true, "passes": 10}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": true, "passes": 5}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": true, "passes": 9}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": true, "passes": 8}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": true, "passes": 9}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 7}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": true, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m).", "pass@10": true, "passes": 1}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": true, "passes": 10}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists.", "pass@10": true, "passes": 2}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": true, "passes": 9}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": true, "passes": 4}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": true, "passes": 8}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": true, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 140, "prompt": "Write a function to flatten the list of lists into a single set of numbers.", "pass@10": true, "passes": 2}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": true, "passes": 10}
{"task_id": 163, "prompt": "Write a function to calculate the area of a regular polygon given the length and number of its sides.", "pass@10": true, "passes": 3}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": true, "passes": 1}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": true, "passes": 6}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 7}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices.", "pass@10": true, "passes": 6}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string.", "pass@10": true, "passes": 9}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": true, "passes": 5}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.", "pass@10": true, "passes": 1}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": true, "passes": 8}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number.", "pass@10": true, "passes": 1}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": true, "passes": 10}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": true, "passes": 8}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": true, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": true, "passes": 5}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 8}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": true, "passes": 7}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": true, "passes": 6}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.", "pass@10": true, "passes": 9}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": true, "passes": 7}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": true, "passes": 7}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": true, "passes": 1}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number.", "pass@10": true, "passes": 10}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": true, "passes": 9}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle.", "pass@10": true, "passes": 5}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number.", "pass@10": true, "passes": 4}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": true, "passes": 2}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 5}
{"task_id": 306, "prompt": "Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .", "pass@10": true, "passes": 1}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple.", "pass@10": true, "passes": 3}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": true, "passes": 1}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 3}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": true, "passes": 9}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples in the given list.", "pass@10": true, "passes": 5}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": true, "passes": 8}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd.", "pass@10": true, "passes": 1}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": true, "passes": 1}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple.", "pass@10": true, "passes": 10}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": true, "passes": 4}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ration of positive numbers in an array of integers.", "pass@10": true, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 9}
{"task_id": 446, "prompt": "Write a python function to count the occurence of all elements of list in a tuple.", "pass@10": true, "passes": 1}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": true, "passes": 9}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": true, "passes": 4}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": true, "passes": 8}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": true, "passes": 7}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 471, "prompt": "Write a python function to find the product of the array multiplication modulo n.", "pass@10": true, "passes": 1}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": true, "passes": 3}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.", "pass@10": true, "passes": 4}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": true, "passes": 9}
{"task_id": 603, "prompt": "Write a function to get all lucid numbers smaller than or equal to a given integer.", "pass@10": true, "passes": 1}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": true, "passes": 10}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": true, "passes": 2}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple.", "pass@10": true, "passes": 5}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": true, "passes": 7}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list.", "pass@10": true, "passes": 8}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": true, "passes": 10}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.", "pass@10": true, "passes": 3}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position.", "pass@10": true, "passes": 6}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 2}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 10}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.", "pass@10": true, "passes": 3}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": true, "passes": 10}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h.", "pass@10": true, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 9}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 8}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to caluclate the area of a tetrahedron.", "pass@10": true, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 2}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 4}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 9}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": true, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": true, "passes": 1}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": true, "passes": 9}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": true, "passes": 10}
{"task_id": 765, "prompt": "Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": true, "passes": 9}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 5}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": true, "passes": 1}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": true, "passes": 9}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": true, "passes": 2}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.", "pass@10": true, "passes": 9}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": true, "passes": 10}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 9}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not.", "pass@10": true, "passes": 4}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": true, "passes": 10}
{"task_id": 554, "prompt": "Write a python function which takes a list of integers and only returns the odd ones.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": true, "passes": 5}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 8}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": true, "passes": 9}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": true, "passes": 9}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples.", "pass@10": true, "passes": 9}
{"task_id": 582, "prompt": "Write a function to check if a dictionary is empty", "pass@10": true, "passes": 8}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": true, "passes": 9}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists. Make sure to handle cases where the lists might be empty or contain duplicate values efficiently.", "pass@10": true, "passes": 9}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure your solution is efficient and handles edge cases such as punctuation and numbers.", "pass@10": true, "passes": 2}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": true, "passes": 8}
{"task_id": 14, "prompt": "Develop a Python function to calculate the volume of a triangular prism.", "pass@10": true, "passes": 5}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. The function should handle edge cases where the side length is zero or negative gracefully.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Create a Python function to determine if the two provided integers have signs that differ.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings where the sum of digits is equal to the length of that substring. You need to find substrings where the total of the digits matches the length and count them.", "pass@10": true, "passes": 5}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Ensure your function handles lists with both positive and negative numbers as well as possible duplicate values.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers. Ensure that your solution optimally handles the computation of Bell numbers for large sets.", "pass@10": true, "passes": 6}
{"task_id": 72, "prompt": "Construct a Python function to determine if the provided number can be expressed as the difference of two squares.", "pass@10": true, "passes": 6}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. The function should take two parameters as input, one the string and the other the patterns array. It should return a boolean value. The boolean will indicate if the sequence in the patterns array matches the string or not.", "pass@10": true, "passes": 8}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd. Determine if the length of the word is an odd number or an even number.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. Ensure your solution is efficient for large values of n.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": true, "passes": 3}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number. A centered hexagonal number is a figurate number that represents a hexagon with a dot in the center.", "pass@10": true, "passes": 8}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n. Ensure that your function efficiently finds the closest smaller number, taking into consideration edge cases such as negative numbers or zero.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Make sure to handle different cases and special characters efficiently.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer. The function should return the next smallest palindrome as an integer.", "pass@10": true, "passes": 9}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list. Ensure that the final merged list maintains the sorting order.", "pass@10": true, "passes": 9}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 9}
{"task_id": 140, "prompt": "Write a function to collapse the list of lists into one set of numbers.", "pass@10": true, "passes": 4}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. You should ensure the function is able to handle both numerical and string data types within the list. The ability to sort strings means alphabetic sorting should occur, while sorting numbers should be done in ascending order.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists. Ensure that your solution efficiently handles lists of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 163, "prompt": "Write a function to calculate the area of a regular polygon given the length and number of its sides. Assume all input values are positive numbers and handle any edge cases accordingly.", "pass@10": false, "passes": 0}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that appear at the identical position in the string as in the English alphabet (case insensitive).", "pass@10": true, "passes": 9}
{"task_id": 166, "prompt": "Create a function to determine how many pairs of integers in a list result in an even number when XOR'd.", "pass@10": true, "passes": 4}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list. Ensure your solution handles edge cases such as empty lists and lists with no occurrences of the target number.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices.", "pass@10": true, "passes": 1}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string. The function should iterate through the string to find matches. Each match should be counted separately.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not. Consider edge cases such as an empty tuple or singleton tuple, where the check should still succeed.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length. Ensure that your solution handles edge cases such as zero or negative side lengths appropriately.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Create a function that accepts a list of tuples and outputs a dictionary that associates each distinct tuple with its frequency of occurrence in the list.", "pass@10": false, "passes": 0}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer. Each element should be greater than or equal to twice the previous element. The elements must be less than or equal to m.", "pass@10": true, "passes": 6}
{"task_id": 244, "prompt": "Create a Python function to determine the next perfect square larger than a specified number.", "pass@10": true, "passes": 3}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string. Consider edge cases such as an empty string or a string with one character.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that accepts a list and an element and inserts the element prior to each element in the list, and returns the resulting list.", "pass@10": true, "passes": 9}
{"task_id": 255, "prompt": "Write a function that receives a list and an integer n, and produces every possible combination (including repeated elements) of the list items, returning a list containing a tuple for each unique combination.", "pass@10": true, "passes": 2}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples. The task is to compare the elements of the two tuples. Identify which element from the first tuple is larger or equal to the corresponding element in the second tuple. Select the larger of each pair to create a new tuple.", "pass@10": true, "passes": 9}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. The newman\u2013shanks\u2013williams primes are a special sequence of prime numbers. These primes are generated based on a specific mathematical formula.", "pass@10": true, "passes": 2}
{"task_id": 264, "prompt": "Create a function to determine a dog's age in dog years.", "pass@10": true, "passes": 5}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n. The function should then split the list for every nth element. It will return a list of the resulting lists.", "pass@10": true, "passes": 6}
{"task_id": 270, "prompt": "Create a Python function that calculates the total of even integers at even indices within a list.", "pass@10": false, "passes": 0}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check if the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer). Ensure your function handles division by zero by returning a specific message or value.", "pass@10": true, "passes": 5}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle. Ensure that your solution handles both integer and floating-point input values accurately.", "pass@10": true, "passes": 4}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list. Ensure your solution handles nested lists and non-numeric values gracefully.", "pass@10": true, "passes": 10}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple. Ensure that your function handles edge cases gracefully.", "pass@10": true, "passes": 3}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers. Ensure your solution handles both integer and floating-point inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to determine the largest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 7}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number. You should ensure that the function handles edge cases effectively, such as when n is 0 or negative.", "pass@10": true, "passes": 9}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length. Ensure your solution efficiently handles lists with large sizes.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Create a function that determines the median value among three given numbers.", "pass@10": true, "passes": 10}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples in the given list. Be sure to consider the scenario where the list might contain duplicates and account for them accordingly.", "pass@10": true, "passes": 2}
{"task_id": 404, "prompt": "Write a python function to find which of the two numbers is smaller. You need to determine which number has the least value compared to the other.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple. Your function should efficiently determine the presence of the element without using external libraries.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with the highest product from a given array of integers. The product is calculated by multiplying two numbers together. Find the pair such that their product is greater than any other pair's product.", "pass@10": false, "passes": 0}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple. Ensure your function handles edge cases such as empty lists and tuples.", "pass@10": true, "passes": 8}
{"task_id": 426, "prompt": "Write a function to filter numbers that are odd in a given list. The function should iterate through each element to identify odd numbers. Return a list containing only the odd numbers.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Create a function that retrieves the elements individually and pairs from the specified two tuples.", "pass@10": true, "passes": 1}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure the function handles leading zeros appropriately.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 5}
{"task_id": 446, "prompt": "Write a python function to count how many times each element from a list appears in a tuple.", "pass@10": false, "passes": 0}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Consider the uniqueness of February when determining if a month contains 31 days.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": true, "passes": 9}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist. Make sure your function handles empty sublists appropriately.", "pass@10": true, "passes": 7}
{"task_id": 471, "prompt": "Write a python function to find the product of the elements present in the array. After finding the normal product, it should then compute the modulo with respect to n.", "pass@10": false, "passes": 0}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Consider edge cases such as empty lists or tuples with no common elements.", "pass@10": true, "passes": 3}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. The input to the function will be a string and a dictionary. A dictionary will map characters to their replacements.", "pass@10": false, "passes": 0}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 8}
{"task_id": 479, "prompt": "Write a python function. The purpose of this function is to find the first digit of a given number.", "pass@10": true, "passes": 1}
{"task_id": 603, "prompt": "Write a function to get all lucid numbers. Make sure the function returns numbers that are smaller than or equal to a given integer.", "pass@10": false, "passes": 0}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching substring, a start index and an end index. Ensure your solution handles edge cases like overlapping patterns and empty strings efficiently.", "pass@10": true, "passes": 4}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The nth Bell number is a specific number in a sequence known as Bell numbers. These numbers count the possible partitions of a set with n elements.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Create a function that relocates all the numbers to the end of the given string.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers. Assume the list may contain duplicates, but is always sorted in non-decreasing order.", "pass@10": true, "passes": 1}
{"task_id": 629, "prompt": "Write a python function. This function should identify and return even numbers from a list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple.", "pass@10": true, "passes": 3}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": true, "passes": 6}
{"task_id": 633, "prompt": "Write a python function to determine the total sum of XOR operation for every pair of numbers in the provided list.", "pass@10": true, "passes": 6}
{"task_id": 637, "prompt": "Write a function to verify that the given amount yields neither profit nor loss.", "pass@10": true, "passes": 10}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.", "pass@10": true, "passes": 2}
{"task_id": 644, "prompt": "Write a python function to reverse an array. Reverse the array only up to a given position.", "pass@10": true, "passes": 1}
{"task_id": 722, "prompt": "The input is provided as - a dictionary containing a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 7}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.", "pass@10": true, "passes": 1}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string. You need to ensure that the function accurately identifies and retrieves the values. It should handle strings with multiple sets of quotation marks effectively.", "pass@10": true, "passes": 9}
{"task_id": 733, "prompt": "Write a function to find the index of a given number in a sorted array. The aim is to identify the point at which the number first appears.", "pass@10": true, "passes": 8}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. Make sure to consider edge cases where the list might be empty or contain only one element. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 5}
{"task_id": 735, "prompt": "Write a python function to switch bits of the number except the initial and the final bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 7}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ Ensure that the sorting is performed in ascending order.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not.", "pass@10": true, "passes": 1}
{"task_id": 752, "prompt": "Write a function to compute the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 5}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. This function takes two arguments: a list of tuples where each tuple contains records stored in pair and k which is the number of smallest records we need. A minimum record is the record for which the first element of the tuple within list is minimum. If multiple tuples have minimum records then select first appeared tuple. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": false, "passes": 0}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary with every list converted to a tuple and its value representing the number of its occurrences in the original list.", "pass@10": true, "passes": 9}
{"task_id": 760, "prompt": "Write a python function to verify if a list of numbers has just one unique element or not.", "pass@10": true, "passes": 1}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12. Remember to account for edge cases where the input might not correspond to a valid month number.", "pass@10": true, "passes": 3}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length from the given string. You should identify the words in the string that have a length of k. Next, remove these words from the string to achieve the desired result.", "pass@10": true, "passes": 10}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. Consider edge cases where the number could be zero or negative. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 8}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. This conversion can be useful in various applications, such as image processing.", "pass@10": false, "passes": 0}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure your function can handle nested lists effectively.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string. Ensure your solution is efficient even for large strings.", "pass@10": true, "passes": 10}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/ Ensure your solution considers edge cases such as negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not.", "pass@10": true, "passes": 2}
{"task_id": 554, "prompt": "Write a python function which takes a list of integers and only returns the odd ones. The function should handle empty lists by returning an empty list.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers. Ensure that the function handles reasonably large values of n efficiently.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. The function should iterate through the list to identify sublists. Once these sublists are identified, it should then determine the one with the largest sum.", "pass@10": true, "passes": 9}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Ensure that your solution efficiently handles nested lists of varying sizes.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 9}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer. Ensure your solution is efficient and handles large inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not. Ensure that your solution handles both ascending and descending order checks.", "pass@10": true, "passes": 6}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists. Consider how you would handle the edge case where a sublist is empty or contains elements that are not strings.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function. The function should find the last digit in factorial of a given number.", "pass@10": true, "passes": 5}
{"task_id": 579, "prompt": "Write a function to find the elements that are not similar in the given two tuples. The function should consider elements unique in each tuple as dissimilar elements and return them.", "pass@10": true, "passes": 4}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. Ensure that the function is efficient and handles large inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure your solution is efficient and handles edge cases such as punctuation and numbers. Consider using regular expressions for parsing the string to efficiently identify the words.", "pass@10": true, "passes": 4}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12, and remember to account for edge cases where the input might not correspond to a valid month number.", "pass@10": true, "passes": 1}
{"task_id": 72, "prompt": "Construct a Python function to determine if the provided number can be expressed as the difference of two squares. Consider edge cases such as negative numbers or zero in your implementation.", "pass@10": true, "passes": 5}
{"task_id": 170, "prompt": "Create a function to calculate the total of numbers in a list between a range defined by two indices.", "pass@10": false, "passes": 0}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. The function should take two parameters as input, one the string and the other the patterns array, and return a boolean value. The boolean will indicate if the sequence in the patterns array matches the string or not.", "pass@10": true, "passes": 6}
{"task_id": 166, "prompt": "Create a function to determine how many pairs of integers in a list result in an even number when XOR'd. Consider optimizing your solution for time complexity to handle large input sizes efficiently.", "pass@10": true, "passes": 1}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples in the given list, considering the scenario where the list might contain duplicates and account for them accordingly.", "pass@10": false, "passes": 0}
{"task_id": 722, "prompt": "The input is provided as - a dictionary containing a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Ensure the function handles the edge case where the dictionary might be empty.", "pass@10": true, "passes": 8}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. Consider edge cases where the list might be empty or contain only one element. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 2}
{"task_id": 751, "prompt": "Create a function to determine whether the specified array embodies a min heap.", "pass@10": false, "passes": 0}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings where the sum of digits is equal to the length of that substring. You need to identify substrings where the total of the digits matches the length first. After finding them, you must count these matching substrings.", "pass@10": true, "passes": 4}
{"task_id": 417, "prompt": "Write a function to identify shared first elements in a provided list of tuples. Guarantee that your function properly addresses edge cases including empty lists and tuples.", "pass@10": true, "passes": 7}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple. Ensure your implementation can handle edge cases involving grid boundaries.", "pass@10": false, "passes": 0}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not. Ensure that your function can handle both negative and positive integers efficiently.", "pass@10": false, "passes": 0}
{"task_id": 140, "prompt": "Write a function to collapse the list of lists into one set of numbers. Ensure your solution efficiently handles large input sizes without compromising on performance.", "pass@10": false, "passes": 0}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n. Consider edge cases where n could be zero or negative, and handle them appropriately in your solution.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists and ensure to handle cases where the lists might be empty or contain duplicate values efficiently.", "pass@10": true, "passes": 7}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure your function can handle nested lists effectively. Consider cases where lists might be deeply nested within other data structures.", "pass@10": true, "passes": 8}
{"task_id": 637, "prompt": "Write a function to verify that the given amount yields neither profit nor loss. Ensure the function can handle edge cases such as zero values or very large numbers.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Create a Python function. Your task is to determine the next perfect square larger than a specified number.", "pass@10": false, "passes": 0}
{"task_id": 554, "prompt": "Write a python function which takes a list of integers and only returns the odd ones. The function should handle empty lists by returning an empty list. Ensure that the function efficiently processes lists of any size without performance issues.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist. Make sure your function handles empty sublists appropriately. Ensure your function is efficient and handles all edge cases gracefully.", "pass@10": true, "passes": 3}
{"task_id": 619, "prompt": "Create a function that relocates all the numbers to the end of the given string. The function should maintain the relative order of the non-numeric characters and numbers in their respective groups.", "pass@10": true, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to verify if a list of numbers has just one unique element or not. You need to determine if the list contains a single unique number. In other words, check that all numbers in the list are identical.", "pass@10": false, "passes": 0}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure the function handles leading zeros appropriately. The solution should correctly format negative integers without altering their sign.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Create a function that determines the median value among three given numbers.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. Ensure that the function handles large values of n efficiently.", "pass@10": true, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Ensure your function handles lists with both positive and negative numbers as well as possible duplicate values. Make sure to account for edge cases such as an empty list or a list with only one element.", "pass@10": true, "passes": 10}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple. Ensure that the function handles edge cases, such as empty tuples, gracefully.", "pass@10": true, "passes": 1}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11. Ensure your function returns a boolean value: True if the number is divisible by 11, otherwise False.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to determine the largest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 5}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple. Your function should efficiently determine the presence of the element without using external libraries. Use Python's in-built mechanisms to achieve optimal performance in your solution.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": true, "passes": 4}
{"task_id": 58, "prompt": "Create a Python function to determine if the two provided integers have signs that differ. Signs refer to the mathematical property of being positive or negative. Ensure that one number is positive and the other is negative for them to have differing signs.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": true, "passes": 9}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself. Make sure the function returns a boolean value indicating the result.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd. Determine if the length of the word is an odd number or an even number. Ensure your solution handles both uppercase and lowercase inputs effectively.", "pass@10": true, "passes": 10}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number. A centered hexagonal number is a figurate number that represents a hexagon with a dot in the center. Each concentric layer of the hexagon consists of 6 additional dots.", "pass@10": true, "passes": 6}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Consider edge cases such as empty lists or tuples with no common elements. Ensure your solution efficiently handles larger datasets.", "pass@10": true, "passes": 2}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers. Assume the list may contain duplicates, but is always sorted in non-decreasing order. Consider edge cases where the list is empty or contains only repetitive numbers.", "pass@10": false, "passes": 0}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore. Similarly, replace underscores with whitespaces in a given string.", "pass@10": true, "passes": 4}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius. Ensure that the function handles and returns correct values for a variety of input scenarios, including edge cases.", "pass@10": true, "passes": 4}
{"task_id": 733, "prompt": "Write a function to find the index of a given number in a sorted array. The aim is to identify the point at which the number first appears. Ensure your solution is efficient and handles edge cases appropriately.", "pass@10": true, "passes": 4}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary with every list converted to a tuple and its value representing the number of its occurrences in the original list. Consider edge cases where the input list may contain non-list elements.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. The function should iterate through the list to identify sublists. Once these sublists are identified, it should then determine the one with the largest sum. Consider edge cases with negative numbers and empty lists.", "pass@10": true, "passes": 2}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": false, "passes": 0}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word. Ensure that the function is efficient and handles different edge cases, such as empty strings or strings with multiple spaces.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure that your solution is optimized for large numbers.", "pass@10": true, "passes": 10}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure that your solution handles both positive and negative integers accurately.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words. Ensure the function handles edge cases such as an empty list or n being non-positive.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list. Ensure that the function maintains the order of the elements in the original list.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Ensure that your implementation efficiently handles long strings without excessive memory usage.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": true, "passes": 9}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates. Ensure the function handles edge cases where the real or imaginary part is zero.", "pass@10": true, "passes": 1}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Make sure to consider the edge cases where the input might be zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. Ensure your function handles large input values efficiently by considering optimization techniques.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Ensure your solution handles an empty list gracefully.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Consider edge cases such as n being zero or one while implementing the function.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Create a function that accepts a list and an element, and verifies if every item in the list matches the specified element.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Create a Python function that accepts an integer n and gives back the sum of squares of the first n even numbers in nature.", "pass@10": true, "passes": 9}
{"task_id": 295, "prompt": "Create a function that calculates and returns the total of all divisors of a given number.", "pass@10": false, "passes": 0}
{"task_id": 299, "prompt": "Write a function to determine the highest total from the list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 306, "prompt": "Write a function to find the maximum sum of increasing subsequence from prefix until ith index and additionally including a specified element at position k which occurs after i, that is, k > i.", "pass@10": false, "passes": 0}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers. The function should then print the total sum of the rounded numbers. Multiply this sum by the length of the list.", "pass@10": true, "passes": 4}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element. Ensure your solution efficiently handles large lists and considers edge cases where the list is empty or the element is not present.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Write a python function to determine the last digit of a given number. The function should take the input number and extract its last digit, which represents the one's place in the numeric value.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ratio of positive numbers in an array of integers. Ensure that the function also handles empty arrays by returning a ratio of zero.", "pass@10": false, "passes": 0}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers. The function should ideally be designed to be efficient and reliable. It should also ensure that the calculations are accurate at each step.", "pass@10": true, "passes": 8}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases where strings may be shorter than the specified size.", "pass@10": true, "passes": 1}
{"task_id": 458, "prompt": "\nWrite a function to find the area of a rectangle. Ensure your function handles inputs of various data types gracefully.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not. Ensure that the function handles both sorted and unsorted lists efficiently.", "pass@10": true, "passes": 4}
{"task_id": 476, "prompt": "Create a Python function that calculates the total of the maximum and minimum values in a specified array.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number that is in a list. The list contains numbers that need to be raised to the power of n.", "pass@10": true, "passes": 9}
{"task_id": 635, "prompt": "Write a function to sort the given list. Ensure that the function handles both numerical and string inputs gracefully.", "pass@10": true, "passes": 9}
{"task_id": 724, "prompt": "Create a function that accepts base and power as parameters and computes the total of all digits of the base raised to the given power.", "pass@10": true, "passes": 9}
{"task_id": 730, "prompt": "Create a function to eliminate sequential duplicate elements from a specified list.", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": true, "passes": 9}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ To solve this problem efficiently, consider optimizing the algorithm to handle larger values of n.", "pass@10": true, "passes": 9}
{"task_id": 741, "prompt": "Construct a Python method to determine if all characters are identical or vary.", "pass@10": false, "passes": 0}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. Make sure to include detailed comments explaining each step of your solution.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string. Ensure to handle strings that may include special characters or spaces efficiently.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. Ensure that the function handles cases where n is zero, returning zero as the result.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count how many lists are inside another list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 8}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Odd length subarrays are those subarrays with an odd number of elements. Specifically, these subarrays contain elements numbering 1, 3, 5, and so on. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 9}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple. A tuple is enclosed within parentheses and can contain different types of elements. Sometimes, tuples may be nested, containing other tuples within them.", "pass@10": true, "passes": 5}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array. The array should already be in ascending order for the function to work correctly. Any deviation from an ascending order may result in incorrect outcomes.", "pass@10": false, "passes": 0}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary. Ensure your solution handles both integer and float values efficiently.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": true, "passes": 9}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest. Consider handling edge cases where the input might be empty or contain lists of different lengths.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. Ensure that the function is efficient and handles a large number of tuples effectively.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Construct a Python function that takes multiple lists as input and eliminates repeated numbers within them.", "pass@10": true, "passes": 10}
{"task_id": 582, "prompt": "Create a function that verifies if a dictionary has no elements.", "pass@10": true, "passes": 7}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple. Ensure your function is efficient and handles edge cases such as empty lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Create a function that determines the byte size of the specified tuple.", "pass@10": true, "passes": 7}
{"task_id": 429, "prompt": "Create a function that retrieves the elements individually. The function should also retrieve pairs from the specified two tuples.", "pass@10": false, "passes": 0}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases where strings may be shorter than the specified size. Consider implementing additional checks to handle scenarios where the input list is empty or contains non-string elements.", "pass@10": true, "passes": 6}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12. Remember to account for edge cases. Ensure that inputs that do not correspond to a valid month number are handled appropriately.", "pass@10": false, "passes": 0}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. The function should iterate through the list to identify sublists. Once these sublists are identified, it should then determine the one with the largest sum. Consider edge cases with negative numbers and empty lists. Ensure your function is optimized for time complexity.", "pass@10": true, "passes": 4}
{"task_id": 166, "prompt": "Create a function to determine how many pairs of integers in a list result in an even number when XOR'd while optimizing your solution for time complexity to handle large input sizes efficiently.", "pass@10": false, "passes": 0}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer). Ensure your function handles division by zero by returning a specific message or value. Test your function with both positive and negative integers to ensure robustness.", "pass@10": true, "passes": 6}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. The function should take two parameters as input, one the string and the other the patterns array, and return a boolean value. The boolean will indicate if the sequence in the patterns array matches the string or not. Ensure that the function handles edge cases such as empty inputs effectively.", "pass@10": true, "passes": 7}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples. The task is to compare the elements of the two tuples and identify which element from the first tuple is larger or equal to the corresponding element in the second tuple. Select the larger of each pair to create a new tuple.", "pass@10": true, "passes": 8}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": true, "passes": 3}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple. A tuple is surrounded by parentheses and can hold various elements. Occasionally, tuples might be nested, with other tuples inside them.", "pass@10": true, "passes": 4}
{"task_id": 396, "prompt": "Write a function to determine if the specified string begins and concludes with the identical character or not.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to verify that the given amount yields neither profit nor loss. Make sure the function can properly handle edge cases. It should be able to manage scenarios such as zero values or very large numbers.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to determine the largest power of 2 that is less than or equal to n. The function should efficiently handle edge cases such as n being a negative number or zero.", "pass@10": true, "passes": 9}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings where the sum of digits is equal to the length of that substring. You need to identify substrings where the total of the digits matches the length first. After finding them, you must count these matching substrings. Ensure that the function handles edge cases such as empty strings or strings without digits gracefully.", "pass@10": false, "passes": 0}
{"task_id": 417, "prompt": "Write a function to identify shared first elements in a provided list of tuples. Guarantee that your function properly addresses edge cases including empty lists and tuples. Ensure your implementation handles all potential input variations effectively.", "pass@10": true, "passes": 4}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore. Similarly, replace underscores with spaces wherever they appear in a given string. Make sure every underscore encountered is turned into a space.\n", "pass@10": true, "passes": 2}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Create a function to pull values encased in quotation marks \" \" within the provided string. You must guarantee that the function effectively recognizes and acquires the values. It should handle strings with multiple sets of quotation marks effectively.", "pass@10": true, "passes": 9}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11. Your task is to ensure your function returns a boolean value. Return True if the number is divisible by 11, otherwise return False.", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. To solve this problem efficiently, optimize the algorithm to handle larger values of n.", "pass@10": true, "passes": 10}
{"task_id": 638, "prompt": "Create a function that computes the wind chill index rounded to the nearest whole number, given the wind speed in km/h and a temperature in celsius.", "pass@10": false, "passes": 0}
{"task_id": 283, "prompt": "Write a python function that takes in an integer and checks if the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not. Ensure your function handles different input scenarios robustly, including edge cases like empty strings.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Create a function that determines the median value among three given numbers. Ensure that your solution handles all possible edge cases efficiently.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the sequence known as the Newman-Conway sequence. A function is a block of organized, reusable code that is used to perform a single, related action.", "pass@10": false, "passes": 0}
{"task_id": 633, "prompt": "Write a python function to determine the total sum of XOR operation for every pair of numbers in the provided list. Ensure your solution is optimized for large input sizes to handle performance efficiently.", "pass@10": true, "passes": 5}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Ensure that your solution is efficient in terms of both time and space complexity.", "pass@10": true, "passes": 5}
{"task_id": 779, "prompt": "Create a function to tally the quantity of lists contained in another list. The function should return a dictionary, where each list is converted into a tuple, and the value of the tuple represents the count of how often it appears.", "pass@10": true, "passes": 10}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the provided list of tuples regardless of their order. Consider edge cases such as empty lists or tuples with no common elements. Make sure your solution is efficient for handling larger datasets.", "pass@10": true, "passes": 1}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases where strings may be shorter than the specified size, and consider implementing additional checks to handle scenarios where the input list is empty or contains non-string elements.", "pass@10": true, "passes": 2}
{"task_id": 572, "prompt": "Construct a Python function that accepts several lists as input and removes duplicate numbers from them.", "pass@10": true, "passes": 6}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure your function handles inputs of various data types. It should gracefully process these inputs and provide a valid output.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to determine the highest total from the list of tuples. Make sure to consider tuples of varying lengths and handle the possibility of negative numbers appropriately.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. The function should handle edge cases where the side length is zero or negative gracefully. Ensure that the function returns appropriate values or messages for invalid input cases.", "pass@10": false, "passes": 0}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer. Ensure that your solution is efficient when dealing with large numbers. This means it should not take too long to compute the answer.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Create a function that calculates the n'th star number. Ensure that you handle edge cases where the input may be zero or negative appropriately.", "pass@10": true, "passes": 9}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists and ensure that your solution efficiently handles nested lists of varying sizes.", "pass@10": true, "passes": 9}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Visit the website located at this link: https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/. This link contains relevant resources and information. Ensure that the sorting is performed in ascending order.", "pass@10": true, "passes": 9}
{"task_id": 271, "prompt": "Design a Python function that processes an integer n to determine the sum of the first n even natural numbers raised to the power of five. Ensure your function handles large input values efficiently by considering optimization techniques.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Write a python function to determine the last digit of a given number. The function should take the input number and extract its last digit, which represents the one's place in the numeric value. If the input is negative, treat the number as positive and find the last digit accordingly.", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Design a method to remove consecutive duplicate items from a designated list.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 9}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not. Ensure that the function handles both sorted and unsorted lists efficiently. Consider edge cases where the list may have duplicate numbers or may be empty.", "pass@10": true, "passes": 1}
{"task_id": 805, "prompt": "Create a function to identify and return the sublist whose aggregate value of elements is the greatest within a collection of lists. Consider dealing with edge scenarios where the input could be vacant or include lists of varying sizes.", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. Ensure you provide comprehensive comments expounding on every stage of your solution.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. The function should efficiently compute the coefficients and sum them without constructing the entire binomial expansion.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not. Consider edge cases such as an empty tuple or singleton tuple, where the check should still succeed. Make sure the function is efficient even for large tuples.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to determine the subsequent smallest palindrome of a given integer. The function should return the next smallest palindrome as an integer.", "pass@10": true, "passes": 8}
{"task_id": 108, "prompt": "Create a function that combines three lists into one sorted list while preserving the order of the sorted list in the result.", "pass@10": true, "passes": 5}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n. The function should then split the list for every nth element. This process involves iterating through the list and breaking it at intervals defined by n. It will return a list of the resulting lists.", "pass@10": true, "passes": 4}
{"task_id": 287, "prompt": "Create a Python function that takes an integer n and returns the sum of squares of the first n even numbers in nature.", "pass@10": true, "passes": 7}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string. Ensure that the function handles strings with mixed character cases efficiently.", "pass@10": true, "passes": 10}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order. Consider edge cases where n is larger than the list length or n is zero.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string. Ensure that the resulting string maintains the original order of characters that were not removed.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 9}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Consider edge cases such as empty lists and lists containing non-integer values, ensuring your function handles these scenarios gracefully.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. Ensure that the function maintains the order of the tuples and appends each element from the list to each tuple in the given order.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. You should check if all rows, columns, and diagonals sum up to the same number. This means checking every row's sum and comparing it to the column sums. Additionally, ensure that both diagonals have the correct summed value.", "pass@10": true, "passes": 9}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list. Ensure that the function handles cases where multiple items have the same maximum frequency by returning any one of them.", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Create a function to check if the totals of the factors of two numbers are identical.", "pass@10": false, "passes": 0}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure. Consider handling edge cases such as empty lists or non-list elements.", "pass@10": true, "passes": 9}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary. The depth of the dictionary refers to the maximum level of nested dictionaries within it. In other words, measure how deep the structure goes with nested dictionaries inside the main dictionary.", "pass@10": true, "passes": 4}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list. A format string is comprised of various placeholders or patterns that help specify how to display data. Using this string, you can transform each element into a formatted output.", "pass@10": true, "passes": 9}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd. In other words, determine if the number is not divisible by two. This means checking if the remainder when divided by two is not zero.", "pass@10": false, "passes": 0}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. Ensure your solution handles edge cases such as lists that contain only non-numeric types or empty lists.", "pass@10": true, "passes": 6}
{"task_id": 420, "prompt": "Write a python function to find the cube sum. The cube sum should be calculated for the first n even natural numbers.", "pass@10": true, "passes": 9}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Ensure the function efficiently handles arrays of large sizes.", "pass@10": true, "passes": 4}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Ensure that the function handles international characters correctly.", "pass@10": true, "passes": 9}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians. Make sure to handle edge cases such as very large or very small degree values.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length. Ensure that the tuples are of equal length before proceeding with the operation. Then, performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Ensure that the function handles any dictionary input gracefully and retains the order of elements in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Locate the exact position where the given value should be inserted within the list. Ensure the list remains in sorted order after insertion. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. This function should take a list of tuples as input and compute all possible combination sums from the elements of the tuples. You can refer to the article at https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/ for more details on how to implement such a function.", "pass@10": true, "passes": 2}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order. The function should determine the correct position where this value fits. It should ensure that the order remains sorted after insertion.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. The tuple should contain the elements of the list followed by the characters of the string.", "pass@10": true, "passes": 2}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. Ensure that your function efficiently handles large arrays and edge cases such as empty arrays.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Ensure that your solution handles large inputs efficiently.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list. Ensure that the function handles cases where the list might be empty by returning an appropriate message or value.", "pass@10": false, "passes": 0}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Make sure to handle both positive and negative numbers in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. The function should iterate through the list to identify sublists and then determine the one with the largest sum. Consider edge cases with negative numbers and empty lists. Ensure your function is optimized for time complexity.", "pass@10": true, "passes": 3}
{"task_id": 255, "prompt": "Write a function that receives a list and an integer n, and produces every possible combination (including repeated elements) of the list items, returning a list containing a tuple for each unique combination. Make sure the function handles edge cases, such as an empty list or zero as the integer input, gracefully.", "pass@10": true, "passes": 7}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": true, "passes": 5}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the provided string and list. The tuple needs to contain the components of the list succeeded by the letters of the string.", "pass@10": true, "passes": 1}
{"task_id": 72, "prompt": "Construct a Python function to determine if the provided number can be expressed as the difference of two squares. Consider edge cases such as negative numbers or zero in your implementation. Ensure to handle scenarios where the number may be very large efficiently.", "pass@10": true, "passes": 3}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. The function should take two parameters as input. One will be the string, and the other will be the patterns array. It should return a boolean value. The boolean will indicate if the sequence in the patterns array matches the string or not. Ensure that the function handles edge cases such as empty inputs effectively.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Construct a Python function that accepts several lists as input. The function should be able to handle multiple lists effectively. It removes duplicate numbers from them.", "pass@10": true, "passes": 5}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You should consider edge cases where the list might be empty. Also, consider cases where the list contains only one element. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 1}
{"task_id": 417, "prompt": "Write a function to identify shared first elements in a provided list of tuples. Guarantee that your function properly addresses edge cases including empty lists and tuples. Ensure your implementation handles all potential input variations effectively. Consider using a set to efficiently track and identify duplicates among the first elements.", "pass@10": true, "passes": 2}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist. Ensure that your function processes empty sublists in a suitable manner. It's important that your function doesn't produce errors when encountering empty sublists.", "pass@10": true, "passes": 5}
{"task_id": 108, "prompt": "Create a function that merges three separate lists into a single sorted list while maintaining the sequence of the sorted list in the output.", "pass@10": true, "passes": 2}
{"task_id": 307, "prompt": "Construct a method to obtain a segment of a tuple. Make certain that the method effectively deals with atypical situations, such as tuples that are empty.", "pass@10": false, "passes": 0}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Make sure the function effectively manages large-sized arrays.", "pass@10": true, "passes": 3}
{"task_id": 388, "prompt": "Write a python function to find the greatest power of 2 that is smaller than or equal to n. The function should efficiently handle edge cases such as n being a negative number or zero.", "pass@10": true, "passes": 9}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates. Ensure the function handles edge cases where the real or imaginary part is zero. Consider utilizing the cmath library for accurate mathematical computations.", "pass@10": true, "passes": 7}
{"task_id": 396, "prompt": "Write a function to determine if the specified string starts with the identical character. Also, check if the specified string concludes with the identical character or not.", "pass@10": true, "passes": 8}
{"task_id": 637, "prompt": "Write a function to verify that the given amount yields neither profit nor loss.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not. Ensure that the function handles both sorted and unsorted lists efficiently, considering edge cases where the list may have duplicate numbers or may be empty.", "pass@10": false, "passes": 0}
{"task_id": 477, "prompt": "Write a python function to change the provided string to lower case. Ensure that the function handles international characters correctly.", "pass@10": true, "passes": 8}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n, ensuring that your function efficiently finds this number while considering edge cases such as negative numbers or zero.", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ To solve this problem efficiently, consider optimizing the algorithm to handle larger values of n. Be sure to include error handling for invalid inputs.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Create a function to extract values enclosed in quotation marks \" \" within the given string. You must ensure that the function efficiently identifies and retrieves the values. It should manage strings with several sets of quotation marks effectively.", "pass@10": true, "passes": 10}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Ensure that your solution efficiently handles large lists.", "pass@10": true, "passes": 2}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself. Make sure the function returns a boolean value indicating the result. You should also ensure that the function handles negative integers and zero appropriately.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Create a function that determines the median value among three given numbers. Ensure that your solution handles both integer and floating-point input values effectively.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure your function can handle nested lists effectively. Consider cases where lists might be deeply nested within other data structures. Make sure your solution accounts for all possible nesting levels.", "pass@10": true, "passes": 5}
{"task_id": 58, "prompt": "Write a python function to determine if the two provided integers possess opposite signs.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. Refer to the following link for more information: https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 8}
{"task_id": 435, "prompt": "Write a python function to determine the last digit of a given number. The function should receive the number as input and retrieve its last digit, which signifies the one's place in the numeric value. If the input is negative, treat the number as positive and find the last digit accordingly.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Design a function that converts a provided nested list configuration into a flat one. Remember to address special cases such as lists that are empty or elements that are not lists.", "pass@10": true, "passes": 8}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string. Ensure your solution is efficient and handles edge cases such as nested quotes or no quotes at all.", "pass@10": true, "passes": 9}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Think about edge cases such as n being zero. Also consider the situation when n is one while implementing the function.", "pass@10": true, "passes": 8}
{"task_id": 596, "prompt": "Create a function that determines the byte size of the specified tuple. Your function should take a tuple as input. The task is to calculate the memory it occupies in bytes.", "pass@10": true, "passes": 7}
{"task_id": 758, "prompt": "Write a function to count lists within a list, returning a dictionary with every list converted to a tuple and its value representing the number of its occurrences in the original list. Consider edge cases where the input list may contain non-list elements.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string, ensuring that the function handles strings with mixed character cases efficiently.", "pass@10": true, "passes": 9}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. Ensure you provide comprehensive comments expounding on each step of your solution. It is important to detail every aspect clearly. This will aid in understanding.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. February is unique because it does not have 31 days. When determining if a month contains 31 days, consider that February's uniqueness plays a role.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length. Confirm that the tuples have the same number of elements before moving forward with the operation. Then, performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. The function should take a single input of an integer number. It should efficiently extract the digit in the leading position from this input number.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Ensure that the function handles empty lists and nested lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists. Consider how you would handle the edge case where a sublist is empty or contains elements that are not strings. Make sure to address how sorting should be performed when sublist elements differ in case.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length. Ensure your solution efficiently handles lists with large sizes. Consider edge cases like empty lists or multiple lists having the same maximum length.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Make sure your solution is robust and can handle any list, including an empty list, gracefully.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list. Ensure that the function handles cases where multiple items have the same maximum frequency by returning any one of them. The function should also be efficient in terms of time complexity, ideally performing the task in linear time with respect to the number of items in the list.", "pass@10": true, "passes": 7}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length from the given string. You should identify the words in the string that have a length of k. Next, remove these words from the string to achieve the desired result. Ensure that the function handles edge cases such as punctuation and varying whitespace correctly.", "pass@10": true, "passes": 9}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Locate the exact position where the given value should be inserted within the list. Ensure the list remains in sorted order after insertion. You may use binary search for an efficient insertion point location strategy. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Create a function that identifies perfect squares in the range of two specified numbers. Ensure that the function is efficient and handles large inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/ Consider edge cases such as zero and one, which are technically perfect squares as well.", "pass@10": true, "passes": 5}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n. Ensure your solution is efficient and handles large values of n gracefully.", "pass@10": true, "passes": 10}

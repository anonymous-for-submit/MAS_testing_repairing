{"source_file": "charlessutton@: Benchmark Questions Verification V2.ipynb", "task_id": 478, "prompt": "Write a function to remove substrings that are in lowercase from a given string. A substring is a sequence of characters pressed together within the main string.", "code": "import re\ndef remove_lowercase(str1):\n return re.sub('[a-z]', '', str1)", "test_imports": [], "test_list": ["assert remove_lowercase(\"PYTHon\")==('PYTH')", "assert remove_lowercase(\"FInD\")==('FID')", "assert remove_lowercase(\"STRinG\")==('STRG')", "assert remove_lowercase(\"RqULAT\") == \"RULAT\"", "assert remove_lowercase(\"MNxYjnYY\") == \"MNYYY\"", "assert remove_lowercase(\"ZrByuVr\") == \"ZBV\"", "assert remove_lowercase(\"MlWf\") == \"MW\"", "assert remove_lowercase(\"GVIhvtMqrfG\") == \"GVIMG\"", "assert remove_lowercase(\"wsYsS\") == \"YS\"", "assert remove_lowercase(\"iKSaZ\") == \"KSZ\"", "assert remove_lowercase(\"guT\") == \"T\"", "assert remove_lowercase(\"yfmMIrAVX\") == \"MIAVX\"", "assert remove_lowercase(\"GVL\") == \"GVL\"", "assert remove_lowercase(\"wylivCIKfF\") == \"CIKF\"", "assert remove_lowercase(\"uWwwVwb\") == \"WV\"", "assert remove_lowercase(\"dNCslbpDbF\") == \"NCDF\"", "assert remove_lowercase(\"IUMQX\") == \"IUMQX\"", "assert remove_lowercase(\"NklxXDhlPoRd\") == \"NXDPR\"", "assert remove_lowercase(\"hCJxdK\") == \"CJK\"", "assert remove_lowercase(\"TOZJBAer\") == \"TOZJBA\"", "assert remove_lowercase(\"DuMrigkx\") == \"DM\"", "assert remove_lowercase(\"yJf\") == \"J\"", "assert remove_lowercase(\"wyhSvhWwBBS\") == \"SWBBS\"", "assert remove_lowercase(\"xsIsRVHt\") == \"IRVH\"", "assert remove_lowercase(\"Gnm\") == \"G\"", "assert remove_lowercase(\"eVo\") == \"V\"", "assert remove_lowercase(\"tfEkenn\") == \"E\"", "assert remove_lowercase(\"RWp\") == \"RW\"", "assert remove_lowercase(\"TxtYb\") == \"TY\"", "assert remove_lowercase(\"UMIcVFr\") == \"UMIVF\"", "assert remove_lowercase(\"oYAXcDNjzjIe\") == \"YAXDNI\"", "assert remove_lowercase(\"ZjSgHDMoEdcF\") == \"ZSHDMEF\"", "assert remove_lowercase(\"zHbGkSs\") == \"HGS\"", "assert remove_lowercase(\"IBJmSjc\") == \"IBJS\"", "assert remove_lowercase(\"ICVMQByMHLJ\") == \"ICVMQBMHLJ\"", "assert remove_lowercase(\"yBcMByKxCbi\") == \"BMBKC\"", "assert remove_lowercase(\"hhxMQ\") == \"MQ\"", "assert remove_lowercase(\"PlCHBtHhA\") == \"PCHBHA\"", "assert remove_lowercase(\"gSqHmj\") == \"SH\"", "assert remove_lowercase(\"pqK\") == \"K\"", "assert remove_lowercase(\"cjOcdaHW\") == \"OHW\"", "assert remove_lowercase(\"KaxbTW\") == \"KTW\"", "assert remove_lowercase(\"oAnP\") == \"AP\"", "assert remove_lowercase(\"JawO\") == \"JO\"", "assert remove_lowercase(\"OOQsewJ\") == \"OOQJ\"", "assert remove_lowercase(\"YBB\") == \"YBB\"", "assert remove_lowercase(\"jfNF\") == \"NF\"", "assert remove_lowercase(\"qwf\") == \"\"", "assert remove_lowercase(\"FmZv\") == \"FZ\"", "assert remove_lowercase(\"SaNVNH\") == \"SNVNH\"", "assert remove_lowercase(\"yPQNmwZop\") == \"PQNZ\"", "assert remove_lowercase(\"Uans\") == \"U\"", "assert remove_lowercase(\"yZzaLY\") == \"ZLY\"", "assert remove_lowercase(\"Jgap\") == \"J\"", "assert remove_lowercase(\"osoOzg\") == \"O\"", "assert remove_lowercase(\"tHKZ\") == \"HKZ\"", "assert remove_lowercase(\"tuYML\") == \"YML\"", "assert remove_lowercase(\"iPZKYa\") == \"PZKY\"", "assert remove_lowercase(\"usCnaeyI\") == \"CI\"", "assert remove_lowercase(\"OgdR\") == \"OR\"", "assert remove_lowercase(\"MDVNV\") == \"MDVNV\"", "assert remove_lowercase(\"Ran\") == \"R\"", "assert remove_lowercase(\"gxOB\") == \"OB\"", "assert remove_lowercase(\"MGFIeojf\") == \"MGFI\"", "assert remove_lowercase(\"JyPkBdVCd\") == \"JPBVC\"", "assert remove_lowercase(\"lSWVvZQEc\") == \"SWVZQE\"", "assert remove_lowercase(\"yrYUgaMJ\") == \"YUMJ\"", "assert remove_lowercase(\"MUC\") == \"MUC\"", "assert remove_lowercase(\"EPuK\") == \"EPK\"", "assert remove_lowercase(\"SAH\") == \"SAH\"", "assert remove_lowercase(\"nSOWIJdEgQq\") == \"SOWIJEQ\"", "assert remove_lowercase(\"BNyQS\") == \"BNQS\"", "assert remove_lowercase(\"RtDhjEM\") == \"RDEM\"", "assert remove_lowercase(\"msoe\") == \"\"", "assert remove_lowercase(\"LATNNQzsNljS\") == \"LATNNQNS\"", "assert remove_lowercase(\"gll\") == \"\"", "assert remove_lowercase(\"rMbHGlPOAjFV\") == \"MHGPOAFV\"", "assert remove_lowercase(\"qRSJLanPBPCQ\") == \"RSJLPBPCQ\"", "assert remove_lowercase(\"HdUJpzx\") == \"HUJ\"", "assert remove_lowercase(\"fynySzCh\") == \"SC\"", "assert remove_lowercase(\"uNoz\") == \"N\"", "assert remove_lowercase(\"bNlE\") == \"NE\"", "assert remove_lowercase(\"YEqNYfcG\") == \"YENYG\"", "assert remove_lowercase(\"zOCkRtlO\") == \"OCRO\"", "assert remove_lowercase(\"eGTfT\") == \"GTT\"", "assert remove_lowercase(\"JcANWH\") == \"JANWH\"", "assert remove_lowercase(\"ZjjuW\") == \"ZW\"", "assert remove_lowercase(\"bCiV\") == \"CV\"", "assert remove_lowercase(\"SHA\") == \"SHA\"", "assert remove_lowercase(\"lJfCPJUTWW\") == \"JCPJUTWW\"", "assert remove_lowercase(\"TLZgNw\") == \"TLZN\"", "assert remove_lowercase(\"rsNllXppY\") == \"NXY\"", "assert remove_lowercase(\"nxkNsvVxQ\") == \"NVQ\"", "assert remove_lowercase(\"lziPuViZR\") == \"PVZR\"", "assert remove_lowercase(\"kFYZaQzT\") == \"FYZQT\"", "assert remove_lowercase(\"absNJCAfs\") == \"NJCA\"", "assert remove_lowercase(\"NfZJViKsh\") == \"NZJVK\"", "assert remove_lowercase(\"zogDpGvT\") == \"DGT\"", "assert remove_lowercase(\"atQdPoQcRmeC\") == \"QPQRC\"", "assert remove_lowercase(\"UbGvHPFjikuE\") == \"UGHPFE\"", "assert remove_lowercase(\"eijlhqjIa\") == \"I\"", "assert remove_lowercase(\"cclGeHTXUK\") == \"GHTXUK\""], "entry_point": "remove_lowercase", "repair_prompt": ["Write a function remove_lowercase to remove substrings that are in lowercase from a given string. A substring is a sequence of characters pressed together within the main string.\nremove_lowercase(\"PYTHon\")==('PYTH')\n"], "completions": ["from typing import List\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Removes lowercase substrings from the input string.\n\n    Args:\n        input_string: the original string containing lowercase substrings\n\n    Returns:\n        str: Returns the modified string with lowercase substrings removed\n    \"\"\"\n    result = ''.join(char for char in input_string if not char.islower())\n    return result\n", "from typing import List\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Removes all lowercase substrings from the input string.\n\n    Args:\n    input_string: A string containing lowercase and uppercase characters.\n\n    Returns:\n    A string with all lowercase substrings removed.\n    \"\"\"\n    result = ''.join([char for char in input_string if not char.islower()])\n    return result\n", "from typing import List\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Removes all lowercase substrings from the input string.\n\n    Args:\n    input_string: A string containing lowercase and uppercase characters.\n\n    Returns:\n    A string with all lowercase substrings removed.\n    \"\"\"\n    result = ''.join([char for char in input_string if not char.islower()])\n    return result\n", "from typing import List\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Removes all lowercase substrings from the input string.\n\n    Args:\n    input_string: A string containing lowercase and uppercase characters.\n\n    Returns:\n    A string with all lowercase substrings removed.\n    \"\"\"\n    result = ''.join([char for char in input_string if not char.islower()])\n    return result\n", "from typing import List\n## main.py\n\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Remove lowercase substrings from the input string.\n\n    Args:\n    - input_string: a string containing mixed-case characters\n\n    Returns:\n    - Modified string with lowercase substrings removed\n    \"\"\"\n    \n    result = ''.join([char for char in input_string if not char.islower()])\n    \n    return result\n", "from typing import List\n## main.py\n\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Function to remove lowercase substrings from the input string\n    \n    Args:\n    input_string: A string from which lowercase substrings need to be removed\n    \n    Returns:\n    str: A string with lowercase substrings removed\n    \"\"\"\n    result = ''.join([char for char in input_string if not char.islower()])\n    return result\n", "from typing import List\ndef remove_lowercase(input_string: str) -> str:\n    return ''.join(char for char in input_string if not char.islower())\n", "from typing import List\ndef remove_lowercase(input_string: str) -> str:\n    result = ''.join(char for char in input_string if not char.islower())\n    return result\n", "from typing import List\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Removes all lowercase letters from the input string and returns the modified string.\n\n    Args:\n        input_string: A string containing alphabetic characters.\n\n    Returns:\n        A string with all lowercase letters removed.\n\n    Example:\n        >>> remove_lowercase(\"Hello World\")\n        'H W'\n    \"\"\"\n    result = ''.join(char for char in input_string if not char.islower())\n    return result\n", "from typing import List\n## main.py\n\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Function to remove lowercase substrings from the input string\n\n    Args:\n    input_string: A string from which lowercase substrings need to be removed\n\n    Returns:\n    str: The input string with lowercase substrings removed\n    \"\"\"\n    result = ''.join([char for char in input_string if not char.islower()])\n    return result\n"], "plans": ["requirement pool:\n- Efficiently remove lowercase substrings\n- Handle mixed cases accurately\n- Ensure edge cases are handled gracefully\nWe will use Python's built-in string manipulation functions to efficiently remove lowercase substrings from the input string.\n", "requirement pool:\n- Implement remove_lowercase function to accurately remove lowercase substrings\n- Ensure the function handles mixed case strings correctly\n- Include thorough testing to cover edge cases\nWe will use Python's built-in string manipulation functions to efficiently remove lowercase substrings from the input string.\n", "requirement pool:\n- Implement remove_lowercase function to remove lowercase substrings\n- Handle cases where the input string is all lowercase\n- Optimize the function for performance\nWe will use Python's built-in string manipulation functions to efficiently remove lowercase substrings from the input string.\n", "requirement pool:\n- Implement remove_lowercase function to remove lowercase substrings\n- Ensure the function handles mixed cases correctly\n- Implement edge case handling for special characters\nWe will use Python's built-in string manipulation functions to efficiently remove lowercase substrings from the input string.\n", "requirement pool:\n- Implement remove_lowercase function to remove lowercase substrings\n- Ensure the function handles mixed-case strings correctly\n- Implement unit tests to validate the function's accuracy\nWe will use Python's built-in string manipulation functions to efficiently remove lowercase substrings from the input string.\n", "requirement pool:\n- Implement remove_lowercase function to remove lowercase substrings\n- Ensure the function handles mixed cases correctly\n- Optimize the function for performance\nWe will use Python's built-in functions to efficiently remove lowercase substrings from the given string.\n", "requirement pool:\n- Implement remove_lowercase function to accurately remove lowercase substrings\n- Handle cases where the entire string is in lowercase\n- Optimize the function for better performance\nWe will use Python's built-in functions to efficiently remove lowercase substrings from the given string.\n", "requirement pool:\n- Efficiently remove lowercase substrings\n- Handle mixed cases accurately\n- Ensure edge cases are considered\nWe will use Python and the built-in string manipulation functions to efficiently remove lowercase substrings from the input string.\n", "requirement analysis:\nThe function should iterate through the input string, identify lowercase substrings, and remove them while preserving the rest of the string. It should handle cases where the input string has no lowercase characters.\nrequirement pool:\n- Efficiently identify and remove lowercase substrings\n- Handle mixed-case strings accurately\n- Optimize performance for large input strings\nWe will use Python's built-in functions to efficiently iterate through the input string, identify lowercase substrings, and remove them while preserving the rest of the string.\n", "requirement pool:\n- Implement remove_lowercase function to remove lowercase substrings\n- Handle cases where the input string is empty\n- Optimize the function for better performance\nWe will use Python's built-in string manipulation functions to efficiently remove lowercase substrings from the input string.\n"], "test": ["def check(remove_lowercase):\n\tassert remove_lowercase(\"PYTHon\")==('PYTH')", "def check(remove_lowercase):\n\tassert remove_lowercase(\"FInD\")==('FID')", "def check(remove_lowercase):\n\tassert remove_lowercase(\"STRinG\")==('STRG')", "def check(remove_lowercase):\n\tassert remove_lowercase(\"RqULAT\") == \"RULAT\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"MNxYjnYY\") == \"MNYYY\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"ZrByuVr\") == \"ZBV\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"MlWf\") == \"MW\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"GVIhvtMqrfG\") == \"GVIMG\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"wsYsS\") == \"YS\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"iKSaZ\") == \"KSZ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"guT\") == \"T\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"yfmMIrAVX\") == \"MIAVX\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"GVL\") == \"GVL\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"wylivCIKfF\") == \"CIKF\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"uWwwVwb\") == \"WV\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"dNCslbpDbF\") == \"NCDF\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"IUMQX\") == \"IUMQX\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"NklxXDhlPoRd\") == \"NXDPR\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"hCJxdK\") == \"CJK\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"TOZJBAer\") == \"TOZJBA\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"DuMrigkx\") == \"DM\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"yJf\") == \"J\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"wyhSvhWwBBS\") == \"SWBBS\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"xsIsRVHt\") == \"IRVH\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"Gnm\") == \"G\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"eVo\") == \"V\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"tfEkenn\") == \"E\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"RWp\") == \"RW\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"TxtYb\") == \"TY\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"UMIcVFr\") == \"UMIVF\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"oYAXcDNjzjIe\") == \"YAXDNI\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"ZjSgHDMoEdcF\") == \"ZSHDMEF\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"zHbGkSs\") == \"HGS\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"IBJmSjc\") == \"IBJS\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"ICVMQByMHLJ\") == \"ICVMQBMHLJ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"yBcMByKxCbi\") == \"BMBKC\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"hhxMQ\") == \"MQ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"PlCHBtHhA\") == \"PCHBHA\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"gSqHmj\") == \"SH\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"pqK\") == \"K\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"cjOcdaHW\") == \"OHW\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"KaxbTW\") == \"KTW\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"oAnP\") == \"AP\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"JawO\") == \"JO\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"OOQsewJ\") == \"OOQJ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"YBB\") == \"YBB\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"jfNF\") == \"NF\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"qwf\") == \"\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"FmZv\") == \"FZ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"SaNVNH\") == \"SNVNH\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"yPQNmwZop\") == \"PQNZ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"Uans\") == \"U\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"yZzaLY\") == \"ZLY\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"Jgap\") == \"J\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"osoOzg\") == \"O\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"tHKZ\") == \"HKZ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"tuYML\") == \"YML\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"iPZKYa\") == \"PZKY\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"usCnaeyI\") == \"CI\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"OgdR\") == \"OR\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"MDVNV\") == \"MDVNV\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"Ran\") == \"R\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"gxOB\") == \"OB\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"MGFIeojf\") == \"MGFI\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"JyPkBdVCd\") == \"JPBVC\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"lSWVvZQEc\") == \"SWVZQE\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"yrYUgaMJ\") == \"YUMJ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"MUC\") == \"MUC\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"EPuK\") == \"EPK\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"SAH\") == \"SAH\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"nSOWIJdEgQq\") == \"SOWIJEQ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"BNyQS\") == \"BNQS\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"RtDhjEM\") == \"RDEM\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"msoe\") == \"\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"LATNNQzsNljS\") == \"LATNNQNS\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"gll\") == \"\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"rMbHGlPOAjFV\") == \"MHGPOAFV\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"qRSJLanPBPCQ\") == \"RSJLPBPCQ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"HdUJpzx\") == \"HUJ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"fynySzCh\") == \"SC\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"uNoz\") == \"N\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"bNlE\") == \"NE\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"YEqNYfcG\") == \"YENYG\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"zOCkRtlO\") == \"OCRO\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"eGTfT\") == \"GTT\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"JcANWH\") == \"JANWH\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"ZjjuW\") == \"ZW\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"bCiV\") == \"CV\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"SHA\") == \"SHA\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"lJfCPJUTWW\") == \"JCPJUTWW\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"TLZgNw\") == \"TLZN\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"rsNllXppY\") == \"NXY\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"nxkNsvVxQ\") == \"NVQ\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"lziPuViZR\") == \"PVZR\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"kFYZaQzT\") == \"FYZQT\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"absNJCAfs\") == \"NJCA\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"NfZJViKsh\") == \"NZJVK\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"zogDpGvT\") == \"DGT\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"atQdPoQcRmeC\") == \"QPQRC\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"UbGvHPFjikuE\") == \"UGHPFE\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"eijlhqjIa\") == \"I\"", "def check(remove_lowercase):\n\tassert remove_lowercase(\"cclGeHTXUK\") == \"GHTXUK\""], "scores": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "pass_results": [true, true, true, true, true, true, true, true, true, true], "pass_test_cases_num": [102, 102, 102, 102, 102, 102, 102, 102, 102, 102], "completion": "from typing import List\n## main.py\n\ndef remove_lowercase(input_string: str) -> str:\n    \"\"\"\n    Function to remove lowercase substrings from the input string\n\n    Args:\n    input_string: A string from which lowercase substrings need to be removed\n\n    Returns:\n    str: The input string with lowercase substrings removed\n    \"\"\"\n    result = ''.join([char for char in input_string if not char.islower()])\n    return result\n", "passed": true, "pass": true, "pass_num": 10, "round": 174, "mutate_method": "expand_one2two", "parent_index": 174}

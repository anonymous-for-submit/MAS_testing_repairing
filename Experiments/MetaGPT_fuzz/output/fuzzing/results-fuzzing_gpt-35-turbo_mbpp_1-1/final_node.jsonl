{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": true, "passes": 10}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": true, "passes": 9}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": true, "passes": 7}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": true, "passes": 9}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": true, "passes": 6}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 6}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": true, "passes": 6}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 2}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": true, "passes": 9}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": true, "passes": 4}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": true, "passes": 5}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 10}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": true, "passes": 4}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 7}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": true, "passes": 5}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": true, "passes": 5}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": true, "passes": 9}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 9}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": true, "passes": 8}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": true, "passes": 10}
{"task_id": 101, "prompt": "Write a function to find the kth element in the given array using 1-based indexing.", "pass@10": true, "passes": 2}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m).", "pass@10": true, "passes": 4}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": true, "passes": 10}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": true, "passes": 2}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.", "pass@10": true, "passes": 4}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 3}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": true, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": true, "passes": 6}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 140, "prompt": "Write a function to flatten the list of lists into a single set of numbers.", "pass@10": true, "passes": 1}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array.", "pass@10": true, "passes": 5}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": true, "passes": 4}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": true, "passes": 5}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": true, "passes": 3}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 4}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices.", "pass@10": true, "passes": 9}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string.", "pass@10": true, "passes": 3}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": true, "passes": 9}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 9}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": true, "passes": 1}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number.", "pass@10": true, "passes": 9}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": true, "passes": 10}
{"task_id": 248, "prompt": "Write a function that takes in an integer n and calculates the harmonic sum of n-1.", "pass@10": true, "passes": 1}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": true, "passes": 9}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": true, "passes": 8}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 1}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 9}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": true, "passes": 1}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.", "pass@10": true, "passes": 10}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": true, "passes": 1}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": true, "passes": 4}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 1}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": true, "passes": 1}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": true, "passes": 2}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": true, "passes": 3}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 273, "prompt": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.", "pass@10": true, "passes": 1}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": true, "passes": 2}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 7}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": true, "passes": 2}
{"task_id": 286, "prompt": "Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.", "pass@10": true, "passes": 3}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 1}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": true, "passes": 8}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": true, "passes": 8}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": true, "passes": 9}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": true, "passes": 5}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": true, "passes": 4}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 5}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": true, "passes": 9}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": true, "passes": 8}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary.", "pass@10": true, "passes": 8}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 6}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": true, "passes": 6}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": true, "passes": 3}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": true, "passes": 4}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": true, "passes": 8}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple.", "pass@10": true, "passes": 1}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": true, "passes": 5}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": true, "passes": 6}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium.", "pass@10": true, "passes": 2}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ration of positive numbers in an array of integers.", "pass@10": true, "passes": 4}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 2}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": true, "passes": 9}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": true, "passes": 1}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": true, "passes": 7}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": true, "passes": 8}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 9}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": true, "passes": 9}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": true, "passes": 10}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": true, "passes": 3}
{"task_id": 610, "prompt": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.", "pass@10": true, "passes": 9}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": true, "passes": 10}
{"task_id": 612, "prompt": "Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.", "pass@10": true, "passes": 5}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list.", "pass@10": true, "passes": 1}
{"task_id": 615, "prompt": "Write a function which takes a tuple of tuples and returns the average value for each tuple as a list.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": true, "passes": 7}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": true, "passes": 10}
{"task_id": 622, "prompt": "Write a function to find the median of two sorted lists of same size.", "pass@10": true, "passes": 1}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": true, "passes": 1}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers.", "pass@10": true, "passes": 4}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple.", "pass@10": true, "passes": 4}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": true, "passes": 3}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": true, "passes": 10}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": true, "passes": 9}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.", "pass@10": true, "passes": 7}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position.", "pass@10": true, "passes": 9}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple.", "pass@10": true, "passes": 8}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 3}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 9}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.", "pass@10": true, "passes": 9}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 5}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": true, "passes": 10}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h.", "pass@10": true, "passes": 9}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": true, "passes": 9}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 9}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": true, "passes": 9}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": true, "passes": 5}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to caluclate the area of a tetrahedron.", "pass@10": true, "passes": 7}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": true, "passes": 10}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 3}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 2}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 8}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list.", "pass@10": true, "passes": 7}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": true, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": true, "passes": 1}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": true, "passes": 8}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": true, "passes": 8}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": true, "passes": 9}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.", "pass@10": true, "passes": 4}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 7}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 8}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": true, "passes": 7}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": true, "passes": 4}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": true, "passes": 3}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": true, "passes": 9}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": true, "passes": 5}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": true, "passes": 6}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": true, "passes": 9}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": true, "passes": 4}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": true, "passes": 7}
{"task_id": 582, "prompt": "Write a function to check if a dictionary is empty", "pass@10": true, "passes": 10}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": true, "passes": 10}
{"task_id": 586, "prompt": "Write a python function to split a list at the nth eelment and add the first part to the end.", "pass@10": true, "passes": 3}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 9}
{"task_id": 592, "prompt": "Write a python function to find the sum of the product of consecutive binomial co-efficients.", "pass@10": true, "passes": 1}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists. Ensure the implementation is efficient and handles edge cases, such as empty lists, appropriately.", "pass@10": true, "passes": 10}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order. Ensure that your function handles edge cases where n is greater than the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Create a Python function to determine if the two numbers vary at exactly one bit position or not.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. Ensure that the function efficiently handles both positive and negative integers, as well as zero.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Construct a Python function to determine the least number of rotations (exceeding 0) needed to obtain an identical string.", "pass@10": true, "passes": 8}
{"task_id": 11, "prompt": "Write a python function to eliminate the initial and final appearance of a specified character from the string.", "pass@10": true, "passes": 1}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure to handle edge cases such as matrices with rows of different lengths or empty matrices.", "pass@10": true, "passes": 8}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The function should be able to handle both integer and float input values for the dimensions.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element. Ensure your solution optimizes for both time and space complexity, making it suitable for large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function. It should check whether the given two integers have opposite sign or not.", "pass@10": true, "passes": 1}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. Octagonal numbers are figurate numbers that represent octagons. They can be visualized as an arrangement of dots or points that form an octagon.", "pass@10": true, "passes": 9}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 1}
{"task_id": 63, "prompt": "Write a function to find the maximum difference. You should create a function that calculates the largest difference possible between any pairs available in the given tuple list.", "pass@10": true, "passes": 2}
{"task_id": 65, "prompt": "Write a function to flatten a list. Take all the individual elements and place them into a single, linear list. Sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to determine the quantity of ways to divide a set of Bell numbers.", "pass@10": true, "passes": 6}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": true, "passes": 6}
{"task_id": 77, "prompt": "Write a python function to determine if a number can be divided evenly by 11. This means you need to check if there is no remainder after dividing by 11.", "pass@10": true, "passes": 3}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. A tetrahedral number, which is also called triangular pyramidal number, is a figurate number that represents a pyramid with a triangular base and three sides. It can be visualized as a pyramid made up of spheres.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Develop a function to identify the nth term in the Newman-Conway sequence.", "pass@10": true, "passes": 7}
{"task_id": 86, "prompt": "Write a function to determine the nth centered hexagonal number. The centered hexagonal number is a figurate number. It represents a hexagon with a dot at the center and all other dots surrounding the center dot in concentric hexagonal layers.", "pass@10": true, "passes": 7}
{"task_id": 88, "prompt": "Create a function that retrieves the frequency of each element in a list, returning the result as a dictionary.", "pass@10": true, "passes": 3}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n. Ensure to handle edge cases where n is the smallest possible number in the input domain.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word. Ensure that the function can handle both uppercase and lowercase letters effectively.", "pass@10": true, "passes": 9}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Ensure that the function is case-sensitive and accounts for any special characters.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Craft a function to determine the result of 'a' raised to the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Design a Python function that determines the size of the shortest list within a collection of lists.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Create a Python function that calculates how many divisors an input integer has.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists. The function should return the frequency data in the form of a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 101, "prompt": "Write a function to find the kth element in the given array using 1-based indexing. Consider edge cases where k is larger than the array length or less than 1.", "pass@10": false, "passes": 0}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m). The Eulerian number a(n, m) counts the number of permutations of the numbers 1 to n in which exactly m elements are greater than the previous element.", "pass@10": true, "passes": 2}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer. You will receive a tuple consisting of positive integers. Your task is to merge these integers in a way that results in a single continuous integer value.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. The list will contain several pairs of tuples. We need to find the pair with the highest absolute product.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.", "pass@10": true, "passes": 2}
{"task_id": 128, "prompt": "Write a function to identify words from a given list that exceed n characters in length.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 1}
{"task_id": 130, "prompt": "Create a procedure to locate the element that appears most frequently in a specified list.", "pass@10": true, "passes": 6}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel). Consider optimizing the solution for large input strings.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string. Ensure that the function handles tuples containing different data types gracefully.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. Ensure that your implementation efficiently handles large values of n without significant performance degradation.", "pass@10": true, "passes": 10}
{"task_id": 140, "prompt": "Write a function to flatten the list of lists into a single set of numbers.", "pass@10": false, "passes": 0}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 9}
{"task_id": 142, "prompt": "Write a function to calculate the count of items that are identical in the corresponding positions of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array.", "pass@10": true, "passes": 4}
{"task_id": 161, "prompt": "Create a function that deletes all items from a specified list that exist in a second list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2. For instance, the sum would include terms such as n + (n-2) + (n-4)... The sequence continues in this manner until n-x =< 0.", "pass@10": true, "passes": 2}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. Create a separate helper function to calculate these sums. Ensure the helper function correctly computes the sum by iterating over all possible divisors.", "pass@10": true, "passes": 4}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet. This should be case insensitive, meaning that both uppercase and lowercase letters are treated the same.", "pass@10": true, "passes": 4}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 5}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. Ensure that your function correctly handles cases where the indices might be out of bounds.", "pass@10": true, "passes": 9}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Ensure that your solution maintains the order of characters with even index values.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers. Ensure your solution is efficient and handles edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Create a Python function that determines how many non-empty substrings exist in a specified string.", "pass@10": true, "passes": 4}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m. Ensure your solution efficiently handles larger values of m and n.", "pass@10": true, "passes": 1}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure your solution handles both empty and non-empty lists efficiently.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Create a function that calculates the overall count of characters within a string.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number.", "pass@10": true, "passes": 8}
{"task_id": 247, "prompt": "Create a function that calculates the length of the longest subsequence that forms a palindrome within the provided string.", "pass@10": true, "passes": 10}
{"task_id": 248, "prompt": "Write a function that takes in an integer n and calculates the harmonic sum of n-1. Ensure the function handles edge cases where n is less than or equal to 1 appropriately.", "pass@10": true, "passes": 2}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element. The function should insert the element before each element in the list. It will return the resulting list.", "pass@10": true, "passes": 7}
{"task_id": 252, "prompt": "Write a python function to transform complex numbers into their polar coordinates.", "pass@10": true, "passes": 7}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list. Ensure that the function accurately distinguishes integer elements from other data types present in the list.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Ensure that the solution efficiently handles lists with a large number of elements.", "pass@10": true, "passes": 2}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number. Ensure the function efficiently handles large inputs by implementing a sieve algorithm or similar optimization technique.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 261, "prompt": "Create a function that accepts two tuples and carries out mathematical division on each element between the provided tuples.", "pass@10": true, "passes": 2}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple. Ensure that the integer L does not exceed the length of the input list.", "pass@10": true, "passes": 1}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": true, "passes": 1}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": true, "passes": 8}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n. The function should return the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 4}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Consider edge cases such as when n is zero or negative.", "pass@10": true, "passes": 6}
{"task_id": 270, "prompt": "Create a Python function that calculates the total of the even numbers located at even indexes in a list.", "pass@10": false, "passes": 0}
{"task_id": 271, "prompt": "Create a Python function that accepts an integer n and calculates the sum of the first n even natural numbers that are elevated to the fifth power.", "pass@10": true, "passes": 6}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Ensure your solution handles an empty list of tuples gracefully.", "pass@10": true, "passes": 10}
{"task_id": 273, "prompt": "Create a function that receives two tuples as arguments and deducts the values of the second tuple from the values of the first tuple using the corresponding indices.", "pass@10": false, "passes": 0}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. The function should be efficient and handle large values of n.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to determine how many elements appear before the tuple element within the specified tuple.", "pass@10": true, "passes": 5}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": true, "passes": 5}
{"task_id": 286, "prompt": "Write a function to find the largest sum of a contiguous array in the modified array, which is formed by repeating the given array k times.", "pass@10": true, "passes": 3}
{"task_id": 287, "prompt": "Write a python function receives an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 1}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers. The function should compute the division and round down the result to the nearest integer.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle. Ensure your function handles float and integer inputs correctly.", "pass@10": true, "passes": 8}
{"task_id": 296, "prompt": "Create a Python function to tally the number of inversions within a list.", "pass@10": true, "passes": 9}
{"task_id": 297, "prompt": "Write a method to reduce a provided hierarchical list construction.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. Ensure the function handles both positive and negative number values correctly.", "pass@10": true, "passes": 6}
{"task_id": 300, "prompt": "Write a function to calculate the number of binary sequences of length 2n where the sum of the initial n bits equals the sum of the last n bits.", "pass@10": true, "passes": 8}
{"task_id": 301, "prompt": "Write a function to determine the level of nesting of a dictionary.", "pass@10": true, "passes": 4}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists. You should select one factor from each list to calculate these products.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers. Ensure your function handles edge cases, such as negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Create a Python function to locate the greatest power of 2 that does not exceed n.", "pass@10": true, "passes": 9}
{"task_id": 389, "prompt": "Create a function that calculates the nth Lucas number.", "pass@10": true, "passes": 7}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Design a function that transforms multiple lists into a dictionary with nested structure.", "pass@10": true, "passes": 7}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Consider edge cases to ensure the function handles base cases correctly, especially when n is zero or a negative number.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with the maximum length. You need to determine which of the lists has the highest number of elements. It is important to ensure that the function accurately identifies the longest list among multiple lists.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Develop a function to determine if a specified tuple has no repeated elements.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Create a function to determine if the provided string begins and finishes with the identical character.", "pass@10": true, "passes": 1}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure the solution accounts for all possible combinations of input values effectively.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Create a function that determines the smallest value within a provided mixed-type list.", "pass@10": true, "passes": 7}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a list of tuples provided as input. The function should take two arguments: the list of tuples and the position of the element to be extracted.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not. Make sure your solution handles empty sequences appropriately.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair. The pair should have the highest product from a given array of integers.", "pass@10": true, "passes": 10}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple. Ensure that your solution is optimized for large datasets.", "pass@10": false, "passes": 0}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers. Your task is to apply rounding to each number in the list. Print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 9}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers. Ensure that your function handles edge cases where n is 0 or 1 appropriately.", "pass@10": true, "passes": 5}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes. You are required to find the average of cubes of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element from every string included in the given tuple. The function should consider all strings sequentially and remove the last character accordingly.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element. Ensure your solution efficiently handles large lists with overlapping sublists.", "pass@10": true, "passes": 10}
{"task_id": 432, "prompt": "Write a function to calculate the median length of a quadrilateral.", "pass@10": true, "passes": 4}
{"task_id": 439, "prompt": "Create a function that combines a series of integers from a list into one whole integer.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Develop a function that calculates the proportion of positive numbers within an array of integers.", "pass@10": true, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 3}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list. Ensure the function efficiently handles lists of varying sizes and works for all numeric input types.", "pass@10": true, "passes": 10}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Your function should handle edge cases where no strings of the specified size exist in the list.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Develop a Python function to extract the first item from every sublist.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product. Determine the product by multiplying numbers of an increasing subsequence of that array.", "pass@10": true, "passes": 1}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition. Perform the addition between neighboring elements of the given tuple.", "pass@10": true, "passes": 6}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Ensure that the function handles both uppercase and lowercase characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 475, "prompt": "Create a function to order a dictionary based on its values.", "pass@10": true, "passes": 5}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array. Ensure your solution considers both positive and negative integers in the array.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "We need you to implement a Python function that will transform the specified string into lowercase.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove substrings that are in lowercase from a given string. A substring is a sequence of characters pressed together within the main string.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure that no leading or trailing spaces appear in the output.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Develop a function to change degrees into radians.", "pass@10": true, "passes": 9}
{"task_id": 607, "prompt": "Compose a function to identify a regex pattern within a given string. The function should return the matching substring, a start index and an end index.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The function should handle non-negative integer inputs efficiently.", "pass@10": true, "passes": 8}
{"task_id": 610, "prompt": "Write a python function which takes a list. The function should process the list and perform specific operations. It returns a list with the same elements, but the k'th element removed.", "pass@10": true, "passes": 1}
{"task_id": 612, "prompt": "Construct a Python function that accepts a list of lists, where each sublist contains two items, and outputs a pair of lists with the first one holding the first item of each sublist and the second containing the second.", "pass@10": true, "passes": 1}
{"task_id": 614, "prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list. Ensure your solution handles tuples containing negative numbers as well.", "pass@10": false, "passes": 0}
{"task_id": 615, "prompt": "Create a function that accepts a tuple containing other tuples and outputs the mean value for each inner tuple as a list.", "pass@10": true, "passes": 9}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Make sure to handle any potential division by zero errors gracefully.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": true, "passes": 6}
{"task_id": 622, "prompt": "Write a function to find the median of two sorted lists of same size.", "pass@10": false, "passes": 0}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Create a Python function to swap the first and final elements in a specified list.", "pass@10": true, "passes": 9}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers. Consider edge cases such as lists with consecutive numbers missing.", "pass@10": false, "passes": 0}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers. Ensure your function handles edge cases where the list might be empty or contain non-integer elements.", "pass@10": false, "passes": 0}
{"task_id": 632, "prompt": "Create a Python function to shift all the zeros to the back of the provided list.", "pass@10": true, "passes": 8}
{"task_id": 637, "prompt": "Create a function to determine if the specified amount results in neither gain nor deficit", "pass@10": true, "passes": 10}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Ensure that the function handles cases where the tuple might already contain other complex data types.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path. Consider edge cases such as the smallest possible matrix and ensure your solution handles these scenarios efficiently.", "pass@10": true, "passes": 3}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Ensure the function is optimized for large datasets.", "pass@10": true, "passes": 10}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. Ensure that the function handles large numbers efficiently without causing overflow.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}. Ensure that your function handles empty tuples correctly by returning an empty tuple in such cases.", "pass@10": true, "passes": 6}
{"task_id": 728, "prompt": "Write a function that receives as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 731, "prompt": "Create a function to calculate the lateral surface area of a cone using the radius r and height h as inputs.", "pass@10": true, "passes": 9}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Ensure that your solution handles consecutive delimiters correctly, without introducing extra colons.", "pass@10": true, "passes": 1}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number. The number should be located in a sorted array.", "pass@10": true, "passes": 6}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You need to consider every possible sublist from the given input list. Then, for each sublist, calculate the product of its elements. Finally, sum up all those products to get the final result. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 735, "prompt": "Create a Python function to switch the bits of the number, excluding the first and last bits. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 9}
{"task_id": 736, "prompt": "Write a function to find the leftmost position for inserting a specific value in a sorted sequence. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex. Ensure your solution efficiently handles edge cases, such as empty strings or non-alphabetic characters.", "pass@10": true, "passes": 10}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. This sum is the result of adding a series of terms, each of which contributes to the overall geometric sum. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": true, "passes": 4}
{"task_id": 739, "prompt": "Write a python function to determine the position of the smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Create a function to transform the provided tuple into a dictionary with key-value pairs using neighboring elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron.", "pass@10": true, "passes": 7}
{"task_id": 747, "prompt": "Construct a function that identifies the longest shared subsequence among the specified trio of string sequences. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Visit https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ for more information.", "pass@10": true, "passes": 2}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Visit the URL: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 1}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Consider optimizing your function to handle larger values of n efficiently.", "pass@10": true, "passes": 7}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list. Ensure your solution handles edge cases, such as lists with duplicate numbers and lists with fewer than two elements.", "pass@10": true, "passes": 1}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. Ensure the function efficiently handles large lists.", "pass@10": true, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not. You are tasked with determining if every number in the list is identical to each other. This requires checking all elements to ensure there are no differences among them.", "pass@10": false, "passes": 0}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12. Consider edge cases where the input might not be a valid month number.", "pass@10": true, "passes": 7}
{"task_id": 764, "prompt": "Write a python function to count number of digits. The digits should be counted for each individual character in the given string.", "pass@10": true, "passes": 8}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. You should consider consecutive items as elements that appear next to each other in the list. Make sure the list you return contains all such pairs from the original list.", "pass@10": true, "passes": 9}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. Consider edge cases where n is zero or a negative number.", "pass@10": true, "passes": 9}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match. The function should also handle case sensitivity by treating uppercase and lowercase letters as distinct characters.", "pass@10": true, "passes": 5}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements. You should group the consecutive duplicates into sublists.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the quantity of lists inside a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. You need to explore the potential combinations. Each combination must consist of tuples selected from the provided list, ensuring the sums are formed correctly. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 6}
{"task_id": 781, "prompt": "Create a Python function to determine if the number of divisors is an even number. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Visit the website https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ for more information. You can find useful code examples and explanations there.", "pass@10": true, "passes": 7}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. Ensure that the function handles empty string and list inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure that the function correctly identifies and counts all instances of lists within the input data structure.", "pass@10": true, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. You should consider edge cases such as an empty array or non-numeric elements within the array.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Create a function that will eliminate all spaces from a given string.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. Ensure your function handles all possible integer values, including negatives and zero.", "pass@10": true, "passes": 7}
{"task_id": 803, "prompt": "Create a function to determine if the provided number is a perfect square. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest. Consider edge cases where lists may be of different lengths, and the function should still perform correctly.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple. Ensure your solution handles tuples of varying lengths gracefully.", "pass@10": true, "passes": 8}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": true, "passes": 1}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd. Ensure the function is optimized for performance with large input sizes.", "pass@10": true, "passes": 3}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. A function that changes the case of all letters in a string from uppercase to lowercase or lowercase to uppercase. The function should handle all characters in the string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Create a function to determine the sum of the largest contiguous sublist in the provided list.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Create a function that retrieves values enclosed within quotation marks from a string.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters. Ensure the function handles edge cases such as empty strings gracefully.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer. Consider edge cases where the integer could be zero or a very large number.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not. Consider edge cases such as an empty list or a list with all identical elements.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list. The list should contain N empty dictionaries.", "pass@10": true, "passes": 9}
{"task_id": 573, "prompt": "Write a python function to determine the product of the distinct numbers in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number. Ensure your solution is efficient for larger values of the input number.", "pass@10": true, "passes": 9}
{"task_id": 579, "prompt": "Write a function to identify the elements that are not similar in the given two tuples.", "pass@10": true, "passes": 9}
{"task_id": 580, "prompt": "Create a function to eliminate uneven elements within the nested mixed tuple.", "pass@10": true, "passes": 8}
{"task_id": 583, "prompt": "Write a function to calculate and return the nth Catalan number using a mathematical approach. Consider using dynamic programming for efficient computation of Catalan numbers to avoid redundant calculations and optimize performance.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Create a Python function to calculate the difference between the maximum and minimum numbers in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares. The function should take two numbers as input. It should then determine which numbers are perfect squares between those two numbers.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. In this task, you will need to swap the first item with the last one. This means the value that was initially at the beginning of the list should move to the end.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple. Ensure that the function handles empty tuples gracefully.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Create a method to determine if the provided number is an Armstrong number.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Create a function to calculate the total and the mean of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Make sure to handle the edge cases where the number might be zero or negative.", "pass@10": true, "passes": 7}
{"task_id": 732, "prompt": "Create a function that replaces every instance of spaces, commas, or periods with a colon.", "pass@10": true, "passes": 9}
{"task_id": 262, "prompt": "Create a function that receives a list and an integer L, dividing the provided list into two sections with the first one having a length of L, and give back the resultant lists as a tuple. Verify that the integer L doesn't surpass the size of the input list.", "pass@10": true, "passes": 1}
{"task_id": 11, "prompt": "Draft a Python function to remove the starting and ending occurrences of a designated character from the string.", "pass@10": true, "passes": 1}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd. Ensure the function is optimized for performance with large input sizes. Consider edge cases and test the function with various input scenarios to ensure its correctness.", "pass@10": true, "passes": 1}
{"task_id": 755, "prompt": "Write a function to find the second smallest number in a list. Make sure to test for cases where the list contains duplicate numbers, as it is crucial to get the correct second smallest value. Ensure your solution handles edge cases, such as lists with fewer than two elements.", "pass@10": true, "passes": 2}
{"task_id": 396, "prompt": "Create a function to determine if the provided string begins and finishes with the identical character.", "pass@10": true, "passes": 3}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Make sure to handle the edge cases. Consider cases where the number might be zero. Also, account for situations where the number might be negative.", "pass@10": true, "passes": 6}
{"task_id": 130, "prompt": "Create a procedure to locate the element that appears most frequently in a list. You are given a list as an input. Your task is to identify the element that appears the most in this specified list.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to determine the maximum sum from the list of tuples. Ensure the function handles both positive and negative number values correctly.", "pass@10": true, "passes": 2}
{"task_id": 612, "prompt": "Construct a Python function that accepts a list of lists, where each sublist contains two items, and outputs a pair of lists with the first one holding the first item of each sublist and the second containing the second. Assume that the input list is non-empty and each sublist has exactly two elements.", "pass@10": true, "passes": 1}
{"task_id": 555, "prompt": "Create a python function to calculate the difference between the sum of cubes of the first n natural numbers and the sum of the initial n natural numbers.", "pass@10": true, "passes": 3}
{"task_id": 58, "prompt": "Create a function in Python. It should determine if the two provided integers have different signs.", "pass@10": true, "passes": 5}
{"task_id": 293, "prompt": "Create a function to calculate the third side of a right triangle. Ensure your function handles float and integer inputs correctly.", "pass@10": true, "passes": 9}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Consider optimizing your function. Make sure your function can handle larger values of n efficiently.", "pass@10": true, "passes": 10}
{"task_id": 762, "prompt": "Write a function to check if the specified month number has 30 days. Months are given as number from 1 to 12. Consider edge cases where the input might not be a valid month number.", "pass@10": true, "passes": 5}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word, ensuring that the function can handle both uppercase and lowercase letters effectively.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers, ensuring it handles edge cases such as negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in an array that is sorted. The array is already arranged in increasing order.", "pass@10": true, "passes": 7}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. You should consider edge cases such as an empty array or non-numeric elements within the array. It is important to think about what happens when the array is empty. Additionally, ensure to handle scenarios with non-numeric elements in the array.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. The function should handle non-negative integer inputs efficiently. Ensure your implementation can handle large input values without significant performance degradation.", "pass@10": true, "passes": 5}
{"task_id": 77, "prompt": "Write a python function to determine if a number can be divided evenly by 11. This means you need to check if there is no remainder when a number is divided by 11. You need to verify that the division operation results in zero remainder.", "pass@10": true, "passes": 1}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Your function should manage situations where no strings of the specified size exist in the list. It should account for scenarios where the list does not contain any strings matching the specified size.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). It is important to consider edge cases to ensure the function handles base cases correctly. Pay special attention when n is zero or a negative number.", "pass@10": true, "passes": 3}
{"task_id": 618, "prompt": "Develop a function to perform element-wise division of two lists.", "pass@10": true, "passes": 9}
{"task_id": 764, "prompt": "Write a python function to count number of digits. The digits must be tallied for every separate character within the provided string.", "pass@10": false, "passes": 0}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list. Ensure the function processes the list efficiently for varying sizes. The function should be able to handle all numeric input types correctly and perform the calculations accurately.", "pass@10": true, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m). The Eulerian number a(n, m) is a mathematical concept. It counts the number of permutations of the numbers 1 to n in which exactly m elements are greater than the previous element.", "pass@10": true, "passes": 2}
{"task_id": 632, "prompt": "Create a Python function to shift all the zeros to the back of the given list. Your task is to handle a list that may contain several zeros. You need to ensure that all these zeros are moved to the end of the list.", "pass@10": true, "passes": 10}
{"task_id": 391, "prompt": "Design a function that transforms multiple lists into a dictionary with nested structure. Ensure that the structure effectively captures the relationship between the lists in a coherent manner.", "pass@10": true, "passes": 6}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 3}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers. Ensure your function takes into account all possible integer values. It should handle negatives and zero as well.", "pass@10": true, "passes": 6}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list. It is important to ensure that the function can accurately distinguish integer elements. The function should also differentiate these integer elements from other data types present in the list.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers. These numbers should range from 1 to a specified number.", "pass@10": true, "passes": 3}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element. The function should insert the element before each element in the list. It will return the resulting list. Ensure that the function handles empty lists by returning an empty list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2. For instance, the sum would include terms such as n + (n-2) + (n-4)... The sequence continues in this manner until n-x =< 0. Assume n is a positive integer.", "pass@10": true, "passes": 9}
{"task_id": 86, "prompt": "Write a function to determine the nth centered hexagonal number. The centered hexagonal number is a figurate number representing a hexagon with a dot at the center and all other dots surrounding the center dot in concentric hexagonal layers.", "pass@10": true, "passes": 8}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. The function should handle both positive and negative integers with efficiency. It should also process zero efficiently and correctly.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number and ensure your solution is efficient for larger values of the input number.", "pass@10": true, "passes": 8}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}). The function should return a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}. Ensure that your function handles empty tuples correctly by returning an empty tuple in such cases.", "pass@10": true, "passes": 6}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of the first n even natural numbers. Make sure that your function appropriately deals with edge cases where n is either 0 or 1.", "pass@10": false, "passes": 0}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. The function should be efficient and handle large values of n. Make sure to provide both iterative and recursive solutions where applicable.", "pass@10": true, "passes": 5}
{"task_id": 615, "prompt": "Create a function that accepts a tuple containing other tuples and outputs the mean value for each inner tuple as a list.", "pass@10": true, "passes": 5}
{"task_id": 583, "prompt": "Develop a function to compute and provide the nth Catalan number utilizing a mathematical method. Consider using dynamic programming for efficient computation of Catalan numbers to avoid redundant calculations and optimize performance.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list. The list is supposed to have a specific number of dictionaries. These dictionaries should be empty, and their total count should be represented by N.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The function should take the area of the triangular base and the height of the prism as inputs.", "pass@10": false, "passes": 0}
{"task_id": 161, "prompt": "Create a function that deletes all items from a specified list that exist in a second list. The specified list is the main list from which items will be removed. The second list contains items that should be deleted from the main list.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Construct a method that merges a collection of numbers from an array into a single complete number.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order based on the sum of its rows. Ensure to handle edge cases such as matrices with rows of different lengths or empty matrices.", "pass@10": true, "passes": 9}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. Consider edge cases where n is zero. Also, think about cases where n is a negative number.", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to find the leftmost position for inserting a specific value in a sorted sequence. Ensure that your solution efficiently handles large input sizes. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square. Your function should determine the smallest perfect square that is greater than a given number.", "pass@10": true, "passes": 8}
{"task_id": 65, "prompt": "Create a function to collapse a list. Collect each element separately and organize them into one continuous, linear sequence. Sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers while ensuring your solution is efficient and handles edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Make certain the function handles both uppercase characters effectively. Ensure that the function handles lowercase characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function that receives as input two lists [a_1,...,a_n], [b_1,...,b_n]. The function should then perform the task of returning a new list that is formed by summing corresponding elements from the two lists. Specifically, this new list should be [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Create a Python function to calculate the total of the maximum and minimum number in a specified array. Ensure your solution considers both positive and negative integers in the array.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. Octagonal numbers are figurate numbers that represent octagons. They can be visualized as an arrangement of dots or points that form an octagon. Ensure your function is optimized for performance to handle large input values of n efficiently.", "pass@10": true, "passes": 7}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list. Ensure that the function handles large numbers efficiently by using appropriate data types and algorithms.", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. Create a separate helper function to calculate these sums. Ensure the helper function correctly computes the sum. Do this by iterating over all possible divisors.", "pass@10": true, "passes": 3}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure that the solution effectively handles all possible combinations of input values. It should ensure accuracy regardless of the order or type of numbers provided.", "pass@10": true, "passes": 8}
{"task_id": 301, "prompt": "Write a function to determine the level of nesting of a dictionary. Ensure your solution handles empty dictionaries correctly.", "pass@10": true, "passes": 6}
{"task_id": 271, "prompt": "Create a Python function that accepts an integer n and calculates the sum of the first n even natural numbers that are elevated to the fifth power. The function should efficiently handle large values of n and output the result promptly.", "pass@10": true, "passes": 2}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. The function should iterate through the tuple one element at a time. During each iteration, it will add the current element to the next.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to identify the elements that are not similar in the given two tuples. Ensure that the function handles tuples of different lengths gracefully.", "pass@10": true, "passes": 8}
{"task_id": 257, "prompt": "Write a function that accepts two numbers and returns a tuple with the second number followed by the first number.", "pass@10": true, "passes": 10}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. This sum is the result of adding a series of terms. Each term contributes to the overall geometric sum. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": true, "passes": 4}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array. Construct a function that iterates through the array efficiently and finds this difference. Ensure that your solution handles both positive and negative numbers accurately.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Create a function to convert degrees to radians.", "pass@10": true, "passes": 9}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet. This should be case insensitive, meaning that both uppercase and lowercase letters are treated the same. Ensure to handle special cases, such as empty strings and non-alphabetic characters, appropriately.", "pass@10": true, "passes": 9}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. Visit the URL: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": false, "passes": 0}
{"task_id": 782, "prompt": "Write a python function to calculate the sum of all subarrays with odd lengths. Visit the website https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ for more information. You can find useful code examples and explanations there.", "pass@10": true, "passes": 3}
{"task_id": 252, "prompt": "Create a python function that converts complex numbers into their polar coordinates form.", "pass@10": true, "passes": 7}
{"task_id": 565, "prompt": "Write a python function to split a string into characters, ensuring the function handles edge cases such as empty strings gracefully.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list, and ensure your solution handles both empty and non-empty lists efficiently.", "pass@10": true, "passes": 10}
{"task_id": 432, "prompt": "Write a function to compute the middle value for the length of a quadrilateral.", "pass@10": false, "passes": 0}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements. You are required to group the consecutive duplicates into sublists. This can be done by creating separate sublists for each group.", "pass@10": true, "passes": 9}
{"task_id": 425, "prompt": "Create a function to determine the count of sublists that include a specific element. Make sure the solution effectively manages extensive lists with reiterating sublists.", "pass@10": true, "passes": 8}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. The list will contain several pairs of tuples, and we need to find the pair with the highest absolute product.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Ensure the function handles both positive and negative integers effectively to maximize the product.", "pass@10": true, "passes": 4}
{"task_id": 805, "prompt": "Implement a function that identifies and returns the list within a nested list structure where the aggregate sum of its elements is the largest.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Create a function that determines the smallest value within a list that contains mixed types. The list provided can include integers, floats, and other numeric types.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Create a function to simplify a given nested list structure.", "pass@10": true, "passes": 6}
{"task_id": 248, "prompt": "Write a function that takes in an integer n and calculates the harmonic sum of n-1. Ensure the function handles edge cases. Specifically, it should address cases where n is less than or equal to 1 appropriately.", "pass@10": true, "passes": 1}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Ensure that the function handles cases where the tuple might already contain other complex data types. Consider edge cases where the dictionary is empty or has nested dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the quantity of lists inside a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences. Ensure your function handles cases where the inner lists contain both duplicates and unique elements.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "We need you to implement a Python function. This function will transform the specified string into lowercase.", "pass@10": true, "passes": 8}
{"task_id": 781, "prompt": "Create a Python function to ascertain if the count of divisors is an even number. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Ensure your solution handles an empty list of tuples gracefully. Pay attention to the possibility of tuples varying in size within the list.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Create a function that retrieves values from a string. The values that need to be retrieved are ones that are enclosed within quotation marks.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number and ensure that your implementation efficiently handles large values of n without significant performance degradation.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. Consider edge cases such as when n is zero. Also consider when n is negative.", "pass@10": true, "passes": 3}
{"task_id": 599, "prompt": "Create a function to calculate the total and the mean of the first n natural numbers. Ensure your approach efficiently handles large values of n.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to calculate the count of items that are identical in the corresponding positions of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple. The value associated with each tuple should be the number of its occurrences in the original list. Ensure the function efficiently handles large lists.", "pass@10": true, "passes": 10}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. Ensure that the function handles large numbers efficiently. It should do this without causing overflow.", "pass@10": true, "passes": 6}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element from every string included in the given tuple. The function needs to process each string one by one and eliminate the final letter correspondingly.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Create a Python function to identify the least power of 2 that is equal to or exceeds n.", "pass@10": true, "passes": 8}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list. In this task, you will need to swap the first item with the last one. This means the value that was initially at the beginning of the list should move to the end. Ensure your solution works for lists containing any data type.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string. Ensure that the function handles tuples containing different data types gracefully. Consider using appropriate type conversion methods to handle each element in the tuple effectively.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Develop a function to determine if the given amount leads to neither profit nor loss.", "pass@10": true, "passes": 9}
{"task_id": 128, "prompt": "Create a function that finds words from a provided list that are longer than n characters.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. Ensure that your function correctly handles cases where the indices might be out of bounds. Make sure to account for scenarios where the list could be empty or contain non-numeric elements.", "pass@10": true, "passes": 5}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path. Consider edge cases such as the smallest possible matrix and ensure your solution handles these scenarios efficiently. Verify correctness with matrices of varying costs, including negative values.", "pass@10": true, "passes": 5}
{"task_id": 97, "prompt": "Create a function that calculates how often each item appears in a single-level list derived from multiple nested lists. The function should return the frequency data in the form of a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element. However, it must also be less than or equal to m. Ensure your solution efficiently handles larger values of m and n.", "pass@10": true, "passes": 1}
{"task_id": 460, "prompt": "Develop a Python function to extract the first item from every sublist. Ensure that the function can handle edge cases where sublists might be empty or the main list is empty.", "pass@10": true, "passes": 10}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list. The splitting occurs at every nth element. It returns a list of the resulting lists.", "pass@10": true, "passes": 3}
{"task_id": 278, "prompt": "Create a function to figure out the count of elements occurring prior to the tuple item inside the given tuple.", "pass@10": true, "passes": 2}
{"task_id": 580, "prompt": "Create a function to eliminate uneven elements. You need to perform this operation within the nested mixed tuple.", "pass@10": true, "passes": 5}
{"task_id": 287, "prompt": "Write a python function that receives an integer n and returns the sum of squares of first n even natural numbers. Ensure your solution efficiently handles large values of n.", "pass@10": true, "passes": 6}
{"task_id": 300, "prompt": "Write a function to calculate the number of binary sequences of length 2n. These binary sequences must have the property that the sum of the initial n bits equals the sum of the last n bits.", "pass@10": true, "passes": 5}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers. The function should take two input numbers, then compute the division and round down the result to the nearest integer. The final result should be the closest integer that is less than or equal to the division outcome.", "pass@10": true, "passes": 9}
{"task_id": 6, "prompt": "Create a Python function to determine if the two numbers vary at exactly one bit position or not. Ensure that the function handles both positive and negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex, efficiently handling edge cases, such as empty strings or non-alphabetic characters.", "pass@10": true, "passes": 9}
{"task_id": 9, "prompt": "Construct a Python function to determine the least number of rotations needed to obtain an identical string. The number of rotations should exceed 0.", "pass@10": true, "passes": 3}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n. The integer n is the input parameter for the function. The function should return the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 3}
{"task_id": 261, "prompt": "Create a function that accepts two tuples and carries out mathematical division on each element between the provided tuples. A tuple is a data structure in Python that can store a sequence of elements. Tuples are immutable, meaning their elements cannot be changed after they are created.", "pass@10": true, "passes": 5}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase. Ensure that your solution handles edge cases such as empty strings or strings with non-alphabetic characters gracefully.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and verifies if every item in the list matches the specified element.", "pass@10": true, "passes": 4}
{"task_id": 468, "prompt": "Write a function to find the maximum product. Determine the product by multiplying numbers. The numbers belong to an increasing subsequence of that array.", "pass@10": true, "passes": 2}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer. You will receive a tuple consisting of positive integers. Your task is to merge these integers in a way that results in a single continuous integer value. Consider edge cases where the tuple may contain multiple zeroes, and ensure they do not affect the final result negatively.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Create a function to determine if a given list is sorted. Account for special cases like an empty list or one where all elements are the same.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists. You need to pick one element from each list to compute these products.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Create a function that identifies perfect squares within the range of two specified numbers.", "pass@10": true, "passes": 9}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array. You are required to implement the function in a suitable programming language of your choice. The primary goal of the function is to ensure the sequence aligns precisely with the given patterns.", "pass@10": false, "passes": 0}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. Ensure that your function handles an empty list scenario appropriately.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to determine the quantity of ways to divide a set of Bell numbers.", "pass@10": true, "passes": 8}
{"task_id": 803, "prompt": "Create a function to determine if the provided number is a perfect square. Visit the link for a detailed explanation and examples of how to check if a given number is a perfect square. The link provided will lead to a page containing thorough information. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples. Ensure that the function handles cases where the list of tuples might be empty or the tuples are shorter than n elements.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is odd or even.", "pass@10": true, "passes": 9}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Consider the months with 31 days are January, March, May, July, August, October, and December.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list. Ensure graceful handling of empty string and list inputs.", "pass@10": true, "passes": 9}
{"task_id": 286, "prompt": "Develop a function to identify the maximum sum of a continuous array in the altered array, which is created by repeating the original array k times.", "pass@10": true, "passes": 9}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure that no leading or trailing spaces appear in the output. Take into consideration that multiple spaces between words should be reduced to a single space in the output.", "pass@10": true, "passes": 9}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order. Make sure that your function takes into account scenarios where n surpasses the list's length. It should be able to handle these edge cases robustly.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Consecutive items should be seen as elements that are adjacent to each other in the list. Make sure the list you return contains all such pairs from the original list.", "pass@10": true, "passes": 8}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You need to consider every possible sublist from the given input list. Then, for each sublist, calculate the product of its elements. Finally, sum up all those products to get the final result. Note: Ensure your implementation efficiently handles large lists to avoid performance issues. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 773, "prompt": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match. The function should also manage case sensitivity by viewing uppercase and lowercase letters as unique characters.", "pass@10": true, "passes": 1}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all elements in a list. You need to ensure that each element in the list is formatted accordingly. The format should be applied consistently across all list items.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to identify the subarray within the provided array that yields the highest product.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Ensure that the solution efficiently handles lists with a large number of elements. Test your function with various input cases to verify its correctness and performance.", "pass@10": true, "passes": 5}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element. Ensure your solution optimizes for both time efficiency and space efficiency. It should be suitable for large input sizes.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer. Consider edge cases where the integer could be zero or very large.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to determine the product of the distinct numbers in a specified list. Ensure that your solution efficiently handles lists of varying lengths and includes appropriate error handling for edge cases.", "pass@10": true, "passes": 10}
{"task_id": 747, "prompt": "Construct a function that identifies the longest shared subsequence. The subsequence should be found among the specified trio of string sequences. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 9}
{"task_id": 242, "prompt": "Create a function that calculates the overall count of characters within a string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Create a function to determine the sum of the largest contiguous sublist in the provided list. You need to calculate the sum of a sublist from the list that is contiguous. There should be no break in continuity of the list elements in the sublist.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Craft a function to determine the result of 'a' raised to the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Create a function to identify the nearest smaller number to n. Make sure to manage scenarios where n represents the smallest number possible within the input domain.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple, ensuring your solution handles tuples of varying lengths gracefully.", "pass@10": true, "passes": 3}
{"task_id": 7, "prompt": "Create a function to identify all words that have a minimum length of 4 characters in a given string.", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to determine the position of the smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Ensure that your solution is optimized for performance and handles large inputs efficiently.", "pass@10": true, "passes": 10}
{"task_id": 607, "prompt": "Compose a function to identify a regex pattern within a given string. The function should return the substring that matches, a starting index, and an ending index.", "pass@10": true, "passes": 9}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age. Calculate it in dog's years.", "pass@10": true, "passes": 2}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists, ensuring that the function correctly identifies and counts all instances of lists within the input data structure.", "pass@10": true, "passes": 9}
{"task_id": 478, "prompt": "Write a function to remove substrings that are in lowercase from a given string. A substring is a sequence of characters pressed together within the main string. Ensure that the function maintains the order and spacing of the remaining parts of the string.", "pass@10": true, "passes": 9}
{"task_id": 445, "prompt": "Write a function to execute multiplication by index of elements from the two given tuples.", "pass@10": true, "passes": 3}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes by calculating the average of cubes of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Create a method to determine if the provided number is an Armstrong number. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits.", "pass@10": true, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 731, "prompt": "Create a function to calculate the lateral surface area of a cone using the radius r and height h as inputs. Consider including error handling to manage invalid inputs such as negative numbers or zero.", "pass@10": true, "passes": 6}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings. These substrings should have the sum of digits equal to their length.", "pass@10": false, "passes": 0}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Ensure your function handles both numerical and alphabetical sorting appropriately.", "pass@10": true, "passes": 10}
{"task_id": 419, "prompt": "Create a function to round each number in a provided list of numbers and output the entire sum times the list length.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Create a function to arrange an input list of numerical strings in numerical order. Visit https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ for more information.", "pass@10": true, "passes": 4}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. You need to explore the potential combinations to ensure the sums are formed correctly. Each combination must consist of tuples selected from the provided list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 3}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Assume that the side length is provided as a positive integer.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. Determine whether the number has properties or characteristics that define it as a woodball. You need to inspect its attributes to confirm or deny its status as a woodball.", "pass@10": true, "passes": 7}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. You need to ensure that the sorting is based on the second value of each tuple. This means comparing the second value of one tuple with the second value of another to determine their order.", "pass@10": true, "passes": 7}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not. Ensure your solution accounts for edge cases where the sublist might be empty or longer than the main list.", "pass@10": true, "passes": 9}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. The list of elements can be of any data type. These elements could be integers, strings, or even floating-point numbers.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 9}
{"task_id": 108, "prompt": "Write a function to combine three lists into one ordered list.", "pass@10": true, "passes": 9}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer. Your function should be able to handle both positive and negative integers or not.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not. A dictionary is considered empty when it has no keys or values inside. So you must check each dictionary in the list to verify.", "pass@10": true, "passes": 1}
{"task_id": 133, "prompt": "Write a function. The function should be designed to calculate the sum of the negative numbers. These numbers are part of a given list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to tally the frequency of appearance of the string 'std' within a specified string.", "pass@10": true, "passes": 2}
{"task_id": 224, "prompt": "Create a Python function that tallies the amount of binary digits with a value of 1 in an input number.", "pass@10": true, "passes": 8}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Ensure that the returned list is sorted in descending order.", "pass@10": true, "passes": 8}
{"task_id": 277, "prompt": "Create a function that accepts a dictionary and integer n, then filters the dictionary to retain entries with values that are at least n.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function to check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 6}
{"task_id": 291, "prompt": "Develop a function to determine how many methods exist for painting the fence so that no more than 2 consecutive posts share the same color for the specified fence with n posts and k colors.", "pass@10": true, "passes": 7}
{"task_id": 294, "prompt": "Write a function to determine the highest value in a specified heterogeneous list.", "pass@10": true, "passes": 9}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. Index wise addition refers to adding elements at the same index from each tuple. This process continues for every index present in the tuples.", "pass@10": true, "passes": 2}
{"task_id": 404, "prompt": "Create a Python function to identify the smaller of two numbers.", "pass@10": true, "passes": 9}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples. You are given a list.", "pass@10": true, "passes": 9}
{"task_id": 426, "prompt": "Write a function to filter numbers that are odd. These numbers are not divisible by two.", "pass@10": true, "passes": 9}
{"task_id": 428, "prompt": "Design a function to organize the provided array utilizing shell sort.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the individual elements from the two given tuples. The function should also extract pairs of corresponding elements from both tuples as tuples.", "pass@10": false, "passes": 0}
{"task_id": 472, "prompt": "Create a Python function to determine if the provided list has numbers that appear in sequential order.", "pass@10": true, "passes": 6}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple. Ensure that the function handles edge cases such as coordinates located at the boundaries of a grid.", "pass@10": false, "passes": 0}
{"task_id": 631, "prompt": "Write a function to swap all whitespaces in a given string with an underscore, and replace underscores with whitespaces.", "pass@10": true, "passes": 1}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number. Nonagonal numbers are a type of polygonal number that represent a nine-sided polygon.", "pass@10": true, "passes": 9}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value. The dictionary associates each student name with a tuple containing the student's height and weight as float values. - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 744, "prompt": "Write a function to verify whether the specified tuple contains any null value or not.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Create a method that appends the specified tuple to the provided list.", "pass@10": true, "passes": 9}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. The function should take a list of tuples and an integer k as input, and return a list of the k tuples from the input list that have the smallest values in their first element. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 2}
{"task_id": 754, "prompt": "We consider an element to be common to lists l1, l2, l3 if it is found at the same position in all three lists. Write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 8}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. Ensure that the function handles punctuation correctly and only counts alphabetic characters in the word length.", "pass@10": true, "passes": 7}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order. The function should take a sorted list and a value as input. It should then determine the position in the list where the value can be inserted so that the list remains sorted.", "pass@10": true, "passes": 10}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary. Ensure the function can handle dictionaries with numeric values of various types (e.g., integers, floats).", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. Ensure that your solution efficiently handles large datasets and edge cases.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length. Combine them into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 582, "prompt": "Create a function that determines whether a dictionary contains any elements.", "pass@10": true, "passes": 7}
{"task_id": 586, "prompt": "Write a python function to split a list at the nth element. You need to take the part before the nth element and add it to the end of the list.", "pass@10": true, "passes": 1}
{"task_id": 592, "prompt": "Design a Python function that calculates the total of the multiplication of successive binomial coefficients.", "pass@10": false, "passes": 0}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd. Ensure the function is optimized for performance with large input sizes, and consider edge cases and test the function with various input scenarios to ensure its correctness.", "pass@10": false, "passes": 0}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n), and ensure the function handles base cases correctly by considering edge cases. Pay special attention when n is zero or a negative number.", "pass@10": true, "passes": 7}
{"task_id": 732, "prompt": "Create a function that substitutes every instance of spaces, commas, or periods with a colon. Make sure your solution properly manages consecutive delimiters, avoiding the addition of extra colons.", "pass@10": false, "passes": 0}
{"task_id": 262, "prompt": "Create a function that receives a list and an integer L, dividing the provided list into two sections with the first one having a length of L, and give back the resultant lists as a tuple. Verify that the integer L doesn't surpass the size of the input list. Ensure to handle edge cases where L is zero or equal to the length of the list.", "pass@10": true, "passes": 6}
{"task_id": 11, "prompt": "Draft a Python function to remove the starting and ending occurrences of a designated character from the string.", "pass@10": true, "passes": 1}
{"task_id": 755, "prompt": "Create a function to identify the second smallest value within a collection of numbers. Make sure to test for cases where the list contains duplicate numbers, as it is crucial to get the correct second smallest value. Ensure your solution handles edge cases, such as lists with fewer than two elements.", "pass@10": false, "passes": 0}
{"task_id": 299, "prompt": "Write a function to determine the maximum sum from the list of tuples. Ensure the function handles both positive and negative number values correctly. Consider edge cases such as empty lists and tuples containing only zeros.", "pass@10": true, "passes": 1}
{"task_id": 415, "prompt": "Write a python function to identify a duo with the maximum product from a specified array of integers.", "pass@10": true, "passes": 6}
{"task_id": 396, "prompt": "Create a function to determine if the provided string begins with the identical character. You also need to check if it finishes with the identical character.", "pass@10": true, "passes": 7}
{"task_id": 63, "prompt": "Write a function to find the maximum difference. You must design a function that computes the greatest difference achievable between any pair of elements present in the provided list of tuples.", "pass@10": true, "passes": 4}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. It is important to handle the edge cases where the number might be zero or negative. Sometimes numbers can be zero and at other times they can be negative.", "pass@10": true, "passes": 9}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You are given a list of tuples and an integer k. Your task is to identify the k tuples with the smallest values. The function should return a new list containing these k tuples. The tuples are assumed to contain comparable elements. Write efficient code to solve the problem.", "pass@10": true, "passes": 7}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. The function should be efficient and handle large values of n. Make sure to provide both iterative and recursive solutions where applicable. Consider using memoization to enhance the efficiency of your recursive solution.", "pass@10": true, "passes": 1}
{"task_id": 610, "prompt": "Write a python function which takes a list and performs specific operations. It returns a list with the same elements, but the k'th element removed.", "pass@10": true, "passes": 2}
{"task_id": 608, "prompt": "Create a Python function that efficiently finds the nth Bell number. The function should manage inputs that are non-negative integers. Guarantee that your implementation can manage large input values without causing major performance reduction.", "pass@10": true, "passes": 9}
{"task_id": 271, "prompt": "Create a Python function that accepts an integer n. The function should calculate the sum of the first n even natural numbers that are elevated to the fifth power. The function should efficiently handle large values of n and output the result promptly.", "pass@10": true, "passes": 6}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. Ensure that your function correctly handles cases where the indices might be out of bounds. It is essential for the function to return a meaningful result in these situations. This may involve returning a default value or an error message. Make sure to account for scenarios where the list could be empty or contain non-numeric elements.", "pass@10": true, "passes": 3}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list. The splitting occurs at every nth element. The function aims to subdivide the list whenever the nth element is encountered. It returns a list of the resulting lists.", "pass@10": true, "passes": 4}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. The function should handle both positive and negative integers with efficiency. It should also process zero efficiently and correctly. Ensure that the function maintains the original order of the list elements.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Create a function to calculate the third side of a right triangle. Ensure your function handles float inputs correctly. Your function should also handle integer inputs correctly.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "## Coding Question\n\n### Description\nConstruct a Python function to determine the least number of rotations needed to obtain an identical string. The number of rotations should exceed 0. Consider all cyclic permutations of the string to identify the identical configuration.\n\n### Input\n- A non-empty string consisting of lowercase English letters.\n\n### Output\n- An integer representing the minimum number of rotations needed such that the string becomes identical to the original configuration.\n\n### Example\n```python\n# Example 1\ninput_string = \"abcde\"\noutput = 5 # Explanation: rotating each character results in original configuration after 5 rotations.\n\n# Example 2\ninput_string = \"aaaa\"\noutput = 1 # Explanation: any rotation results in the identical string.\n\n# Example 3\ninput_string = \"abab\"\noutput = 2 # Explanation: rotating by 2 positions gives the identical string.\n\n# Example 4\ninput_string = \"abcabc\"\noutput = 3 # Explanation: rotating by 3 positions gives the identical string.\n```\n\n### Constraints\n- The length of the input string will be between 1 and 1000.", "pass@10": false, "passes": 0}
{"task_id": 762, "prompt": "Create a function to verify if the given month number contains 30 days. Months are represented as numbers from 1 to 12. Consider edge cases where the input might not be a valid month number.", "pass@10": true, "passes": 8}
{"task_id": 615, "prompt": "Create a function that accepts a tuple containing other tuples and outputs the mean value of each inner tuple. Each inner tuple contains values for which you need to calculate the mean. The result should be returned as a list.", "pass@10": true, "passes": 5}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. You should consider edge cases such as an empty array or non-numeric elements within the array. It is important to think about and ensure to handle scenarios with an empty array and non-numeric elements in the array.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Create a python function to calculate the difference between the sum of cubes of the first n natural numbers and the sum of the initial n natural numbers.", "pass@10": true, "passes": 3}
{"task_id": 612, "prompt": "Construct a Python function that accepts a list of lists, where each sublist contains two items, and outputs a pair of lists with the first one holding the first item of each sublist and the second containing the second. Assume that the input list is non-empty. Each sublist will be composed of exactly two elements without exception.", "pass@10": true, "passes": 2}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers, ensuring it handles edge cases such as negative numbers and zero. The function should also be efficient in its comparison to maintain optimal performance.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Create a procedure to locate the element that appears most frequently in a list. You are given a list as an input. Your task is to identify the element that appears the most in this specified list. Consider edge cases such as empty lists or lists where all elements are unique.", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Subarrays are contiguous elements in an array whose form [(i):(j+1)], where i and j are the start and end index. A subarray may have any odd length such as 1, 3, 5, etc.", "pass@10": true, "passes": 9}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. Ensure that both lists have the same length to avoid indexing errors.", "pass@10": true, "passes": 7}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple, ensuring your solution handles tuples of varying lengths gracefully. Make sure to consider cases where the tuples might be empty and handle them appropriately.", "pass@10": true, "passes": 3}
{"task_id": 632, "prompt": "Create a Python function to shift all the zeros to the back of the given list, handling a list that may contain several zeros, and ensure that all these zeros are moved to the end of the list.", "pass@10": true, "passes": 9}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure that the solution effectively handles all possible combinations of input values. It should ensure accuracy. This is regardless of the order or type of numbers provided.", "pass@10": true, "passes": 9}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. Ensure that the function handles large numbers efficiently. It should be efficient in handling large numbers. It should do this without causing overflow.", "pass@10": true, "passes": 7}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 8}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 6}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list. It is important to ensure that the function can accurately distinguish integer elements. The function must be able to identify integers correctly. The function should also differentiate these integer elements from other data types present in the list.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Create a function in Python. It should determine if the two provided integers have different signs. Ensure the solution is efficient and handles edge cases involving zero.", "pass@10": false, "passes": 0}
{"task_id": 268, "prompt": "Create a function to determine the star number at the n'th position. Consider edge cases such as when n is zero. Also consider when n is negative.", "pass@10": true, "passes": 1}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers, ensuring your function takes into account all possible integer values and handles negatives and zero as well.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word, ensuring that the function can handle both uppercase and lowercase letters effectively.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list. Ensure that the function handles large numbers efficiently. You can achieve this by using appropriate data types and algorithms.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to determine if a number can be divided evenly by 11. This means you need to check if there is no remainder when a number is divided by 11. It is important to ensure that the result of the division is an integer. You need to verify that the division operation results in zero remainder.", "pass@10": true, "passes": 6}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Consider optimizing your function. Ensure that your function is capable of handling larger values of n. It should do so efficiently.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to determine how many elements appear before the tuple element within the specified tuple.", "pass@10": true, "passes": 3}
{"task_id": 580, "prompt": "Create a function to eliminate uneven elements. You must carry out this process inside the mixed tuple that is nested.", "pass@10": true, "passes": 6}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list. Ensure the function processes the list efficiently. It should be capable of handling varying sizes of lists. The function should be able to handle all numeric input types correctly and perform the calculations accurately.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Create a function to determine the count of sublists that include a specific element. Make sure the solution effectively manages extensive lists with reiterating sublists. Ensure your function is optimized for performance to handle large datasets efficiently.", "pass@10": true, "passes": 8}
{"task_id": 736, "prompt": "Write a function to find the leftmost position for inserting a specific value in a sorted sequence, efficiently handling large input sizes. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}). The function should return a tuple of length N. Each i-th element of the tuple is equal to t_i * t_{i+1}. Ensure that your function handles empty tuples correctly by returning an empty tuple in such cases.", "pass@10": true, "passes": 7}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number. Octagonal numbers are figurate numbers that represent octagons. They can be visualized as an arrangement of dots or points that form an octagon. Ensure your function is optimized for performance to handle large input values of n efficiently. Consider edge cases and validate the input values appropriately.", "pass@10": true, "passes": 8}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number and ensure your solution is efficient for larger values of the input number. Consider edge cases and constraints that could affect the performance of your implementation.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to calculate the number of binary sequences of length 2n. These binary sequences must have the property. Specifically, the sum of the initial n bits equals the sum of the last n bits.", "pass@10": true, "passes": 2}
{"task_id": 391, "prompt": "Design a function that transforms multiple lists into a dictionary with a nested structure that effectively captures the relationship between the lists in a coherent manner.", "pass@10": true, "passes": 6}
{"task_id": 753, "prompt": "Write a function to identify the k smallest records from a list of tuples. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element. The function should insert the element before each element in the list. This means that for every existing element in the list, the new element should be placed right before it. It will return the resulting list.", "pass@10": true, "passes": 9}
{"task_id": 165, "prompt": "Create a function that counts how many characters in a string match their position in the English alphabet. This must be case insensitive, treating uppercase and lowercase letters equally. Ensure to manage special situations like empty strings and non-alphabetic characters properly.", "pass@10": true, "passes": 8}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers while ensuring your solution is efficient and handles edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 583, "prompt": "Create a function that calculates and returns the nth Catalan number by using a mathematical approach. Consider implementing dynamic programming for efficient calculation of Catalan numbers to prevent redundant computations and enhance performance.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Create a Python function to calculate the total of the maximum and minimum number in a specified array, ensuring your solution considers both positive and negative integers in the array.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure that no leading or trailing spaces appear in the output. Take into consideration that multiple spaces between words should be reduced to a single space in the output. Maintain the original capitalization of each word when reversing.", "pass@10": true, "passes": 2}
{"task_id": 284, "prompt": "Write a function that accepts a list and an element and checks if each item in the list corresponds to the given element.", "pass@10": true, "passes": 1}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements. You are required to group the consecutive duplicates into separate sublists for each group.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Construct a method that merges a collection of numbers from an array into a single complete number. Ensure the method handles both positive and negative integers correctly.", "pass@10": true, "passes": 7}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers. The function should take two input numbers, compute the division, and round down the result to the nearest integer. The final result should be the closest integer that is less than or equal to the division outcome.", "pass@10": true, "passes": 9}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n), ensuring the function handles base cases correctly by considering edge cases. Pay special attention when n is zero or a negative number.", "pass@10": true, "passes": 9}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. Consider edge cases where n is zero. Also consider edge cases where n is a negative number.", "pass@10": true, "passes": 9}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string. Ensure that the function handles tuples containing different data types gracefully by using appropriate type conversion methods to handle each element in the tuple effectively.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is magic square. A magic square is a grid of numbers where each row, column, and diagonal sum to the same number. This property of equal sums is what defines a magic square.", "pass@10": true, "passes": 2}
{"task_id": 579, "prompt": "Write a function to identify the elements that are in one tuple but not in the other. This involves finding elements unique to one tuple and different from the other tuple.", "pass@10": true, "passes": 7}
{"task_id": 573, "prompt": "Create a Python function that calculates the result of multiplying the unique elements in a given list. Ensure that your solution efficiently handles lists of varying lengths and includes appropriate error handling for edge cases.", "pass@10": true, "passes": 10}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers ranging from 1 to a specified number.", "pass@10": true, "passes": 3}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array. Construct a function that efficiently iterates through the array to find this difference. Ensure that your solution handles both positive and negative numbers accurately.", "pass@10": true, "passes": 9}
{"task_id": 86, "prompt": "Write a function to determine the nth centered hexagonal number. The centered hexagonal number is a figurate number that represents a hexagon with a dot at the center and additional dots surrounding the center dot in concentric hexagonal layers.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function that receives as input two lists [a_1,...,a_n], [b_1,...,b_n]. Specifically, this new list should be [a_1+b_1,...,a_n+b_n] by summing corresponding elements from the two lists.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest. Consider edge cases such as duplicates and empty inner lists.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2. For instance, the sum would include terms such as n + (n-2) + (n-4)... The sequence continues in this manner until n-x =< 0. Assume n is a positive integer. Ensure your function handles various edge cases effectively.", "pass@10": true, "passes": 9}
{"task_id": 781, "prompt": "Create a Python function to ascertain if the count of divisors is an even number. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php Consider optimizing the algorithm for better performance with large numbers.", "pass@10": true, "passes": 10}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Make certain the function handles both uppercase and lowercase characters effectively.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Create a method to determine if there is any repeated number in the provided list of integers.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Create a function to calculate the total and the mean of the first n natural numbers, efficiently handling large values of n.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Create a function to condense a list. Gather all the separate elements and organize them into a singular, linear list. Sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 720, "prompt": "Write a function to append a dictionary to the tuple. The output should be a tuple. Ensure that the function handles cases where the tuple might already contain other complex data types. Consider edge cases where the dictionary is empty or has nested dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n. The integer n is the input parameter for the function. The function is required to return the total of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 4}
{"task_id": 589, "prompt": "Write a function to find perfect squares. The function should take two numbers as input and then determine which numbers are perfect squares between those two numbers.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square. Your function should determine the smallest perfect square. It should also ensure that the perfect square is greater than a given number.", "pass@10": true, "passes": 8}
{"task_id": 637, "prompt": "Develop a function to determine if the given amount leads to neither profit nor loss.", "pass@10": true, "passes": 9}
{"task_id": 11, "prompt": "Create a Python function to eliminate the initial and final appearances of a specified character from the string.", "pass@10": true, "passes": 1}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. You need to explore the potential combinations to ensure the sums are formed correctly. Each combination must consist of tuples selected from the provided list. Make sure to consider edge cases where the tuple list might be empty or contain tuples with negative numbers. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 1}
{"task_id": 299, "prompt": "Write a function to compute the greatest total from the list of tuples. Ensure the function handles both positive and negative number values correctly.", "pass@10": true, "passes": 6}
{"task_id": 252, "prompt": "Create a python function that converts complex numbers into their polar coordinates form. Ensure that the function handles edge cases, such as when the input is zero, gracefully.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 9}
{"task_id": 161, "prompt": "Create a function that removes all items from a specified list that exist in a second list. The specified list is the main list from which items will be removed. The second list contains items that should be deleted from the main list.", "pass@10": true, "passes": 9}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list, and ensure your solution handles both empty and non-empty lists efficiently. Consider edge cases where the first list might be empty, necessitating the addition of the second list's elements from scratch.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the quantity of lists inside a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences. Ensure your function handles cases where the inner lists contain both duplicates and unique elements. Pay attention to edge cases such as when the outer list is empty or contains non-list elements.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "We require you to create a function in Python. This function will change the specified string to lowercase.", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Create a function that determines if a provided string starts with a vowel using regular expressions, effectively managing special situations like empty strings or characters that are not part of the alphabet.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Design a Python function that checks if the two numbers differ at exactly one bit position or not.", "pass@10": true, "passes": 3}
{"task_id": 567, "prompt": "Create a function to determine if a given list is sorted. Account for special cases like an empty list. Additionally, consider cases where the list contains only elements that are all the same.", "pass@10": true, "passes": 9}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer. You will receive a tuple consisting of positive integers and your task is to merge these integers in a way that results in a single continuous integer value. Consider edge cases where the tuple may contain multiple zeroes, and ensure they do not affect the final result negatively.", "pass@10": true, "passes": 10}
{"task_id": 586, "prompt": "Write a python function to split a list at the nth element. You need to take the part before the nth element and add it to the end of the list. Ensure that the list is not empty and n is a valid index within the range of the list.", "pass@10": false, "passes": 0}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. The function should be efficient and handle large values of n. Consider edge cases and constraints to optimize the solution further.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Create a Python function to determine if the provided list has numbers. These numbers should appear in sequential order.", "pass@10": true, "passes": 7}
{"task_id": 287, "prompt": "Write a python function that receives an integer n and returns the sum of squares of first n even natural numbers. Ensure your solution efficiently handles large values of n.", "pass@10": true, "passes": 8}
{"task_id": 301, "prompt": "Write a function to ascertain the depth of nesting in a dictionary. Ensure your solution handles empty dictionaries correctly.", "pass@10": true, "passes": 4}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string. Ensure that the function handles edge cases such as multiple consecutive whitespaces or underscores.", "pass@10": true, "passes": 4}
{"task_id": 721, "prompt": "Given a square matrix of size N*N provided as a list of lists, where each cell has a designated cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. Our goal is to determine a path with the highest average among all possible paths. Average is computed as total cost divided by the number of cells visited in the path. Consider edge cases such as the smallest possible matrix and ensure your solution handles these scenarios efficiently. Verify correctness with matrices of varying costs, including negative values.", "pass@10": true, "passes": 4}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is odd or even. Write logic to find the length of the word first. Then, check if this length number is divisible by 2 or not.", "pass@10": true, "passes": 2}
{"task_id": 12, "prompt": "\nWrite a function to sort a given matrix in ascending order based on the sum of its rows. Ensure to handle edge cases such as matrices with rows of different lengths or empty matrices. Consider the efficiency of your solution when dealing with large matrices.", "pass@10": true, "passes": 9}
{"task_id": 470, "prompt": "Write a function to find the sum of each adjacent pair of elements in the provided tuple.", "pass@10": true, "passes": 9}
{"task_id": 747, "prompt": "Construct a function that identifies the longest shared subsequence. The subsequence should be found among the specified trio of string sequences. You should consider edge cases where one or more sequences are empty. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Develop a Python function to find the index of the smallest triangular number containing n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Ensure that your solution is optimized for performance and handles large inputs efficiently.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to tally the frequency of appearance of the string 'std' within a specified string. Ensure your function efficiently handles strings of any length, including very large ones.", "pass@10": true, "passes": 1}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list, ensuring that the returned list is sorted in descending order.", "pass@10": true, "passes": 8}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer. Consider edge cases such as the integer being zero or potentially very large.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Create a function to identify the smallest value in a provided heterogeneous list.", "pass@10": true, "passes": 5}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Ensure your solution handles an empty list of tuples gracefully. Pay attention to the possibility of tuples varying in size within the list. Consider edge cases such as tuples with insufficient elements.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list, which will contain several pairs of tuples and we need to find the pair with the highest absolute product.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Create a function that identifies words from a list that are longer than n characters. The provided list contains many words, and your task is to filter them based on their length.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Create a function to convert degrees to radians. Make sure the function handles edge cases such as negative degrees or degrees greater than 360.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. Make sure that your implementation efficiently handles large values of n. It should do this without significant performance degradation.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Create a Python function that pulls out the initial element from each sublist. Make sure the function can manage situations where the sublists may be devoid of items or the main list is devoid of items.", "pass@10": true, "passes": 10}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. Create a separate helper function to calculate these sums. Ensure the helper function computes the sum accurately. It should do this by iterating over all possible divisors.", "pass@10": true, "passes": 3}
{"task_id": 415, "prompt": "Write a python function to find a pair. The pair should have the highest product. The highest product should be from a given array of integers.", "pass@10": true, "passes": 9}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Consecutive items are elements that are adjacent to each other in the list; make sure the list you return contains all such pairs from the original list.", "pass@10": true, "passes": 9}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. This sum is the result of adding a series of terms. Each term is an important part of the series. It contributes to the overall geometric sum. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": true, "passes": 5}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. You need to ensure that the sorting remains consistent with these values. This means comparing the second value of one tuple with the second value of another to determine their order.", "pass@10": true, "passes": 7}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Make certain the solution manages lists containing many elements capably. Test your function with various input cases to verify its correctness and performance.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Develop a function that calculates the proportion of positive numbers within an array. The array should consist of integers.", "pass@10": true, "passes": 1}
{"task_id": 582, "prompt": "Create a function that determines whether a dictionary contains any elements. You need to check if the dictionary has any key-value pairs present inside it. This can be done by examining the length of the dictionary.", "pass@10": true, "passes": 4}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase. Make sure that your solution is robust enough to handle situations where the input may be an empty string. It should also handle cases where the string contains non-alphabetic characters gracefully.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a list of tuples provided as input, taking two arguments: the list of tuples and the position of the element to be extracted.", "pass@10": true, "passes": 10}
{"task_id": 286, "prompt": "Create a function to find the highest sum of a contiguous subarray in the modified array, which is formed by repeating the original array k times.", "pass@10": true, "passes": 6}
{"task_id": 142, "prompt": "Write a function to calculate how many items are identical at the same position in three given lists.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Make sure to consider nested lists while counting.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Develop a function to determine how many methods exist for painting the fence with n posts and k colors, ensuring that no more than 2 consecutive posts share the same color.", "pass@10": true, "passes": 7}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. The result should be derived from subsequences considering strictly increasing sequences only.", "pass@10": true, "passes": 4}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that gives back the first element of the tuple that has the lowest second element. Ensure that your function handles an empty list scenario appropriately.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Create a function that retrieves values from a string by extracting ones enclosed within quotation marks.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2. It should be greater than or equal to n.", "pass@10": true, "passes": 6}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You need to consider every possible sublist from the given input list. You should then calculate the product of its elements for each sublist. Then, proceed by summing up all those products to get the final result. Note: Ensure your implementation efficiently handles large lists to avoid performance issues. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 6}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. Be sure to handle nested lists and varying list sizes effectively.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number, which are a type of polygonal number that represent a nine-sided polygon.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure that no leading or trailing spaces appear in the output, and take into consideration that multiple spaces between words should be reduced to a single space in the output. Maintain the original capitalization of each word when reversing.", "pass@10": false, "passes": 0}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in a descending sequence. Make sure that your function takes into account scenarios where n surpasses the list's length. It should be able to handle these edge cases robustly.", "pass@10": true, "passes": 8}
{"task_id": 749, "prompt": "Create a function to arrange an input list of numerical strings in numerical order. Visit https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ for more information. Ensure your function handles edge cases such as empty lists and strings with leading zeros.", "pass@10": false, "passes": 0}
{"task_id": 93, "prompt": "Craft a function to determine the result of 'a' raised to the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Implement a function to determine if the specified month number includes 31 days or not. Consider the months with 31 days are January, March, May, July, August, October, and December.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Write a function to identify the largest value in a specified heterogeneous list.", "pass@10": true, "passes": 7}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element. However, it must also be less than or equal to m. Ensure your solution efficiently handles larger values of m and n. Consider edge cases where n is particularly large, as optimizations may be necessary for feasible runtime.", "pass@10": true, "passes": 1}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all elements in a list. Ensure that each element in the list is formatted consistently according to the given format across all list items.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to identify the subarray within the provided array that yields the highest product.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. Ensure that your function correctly handles cases where the indices might be out of bounds. It is crucial to ensure your function returns a meaningful result when indices are out of bounds. This may involve returning a default value or an error message. Make sure to account for scenarios where the list could be empty or contain non-numeric elements.", "pass@10": true, "passes": 4}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not. A dictionary is regarded as empty when it doesn't contain any keys or values. So you must check each dictionary in the list to verify.", "pass@10": false, "passes": 0}
{"task_id": 803, "prompt": "Create a function to determine if the provided number is a perfect square. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Create a function to find all words in a given string that are at least 4 characters long.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes by computing the mean of cubes of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists. You need to pick one element from each list to compute these products. Ensure the solution is optimized for performance when dealing with large lists.", "pass@10": true, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. Index wise addition refers to adding elements at the same index from each tuple. This process continues for every index present in the tuples. Ensure your solution can handle tuples containing varying numeric data types.", "pass@10": true, "passes": 2}
{"task_id": 67, "prompt": "Write a function to determine the quantity of ways to divide a set. Bell numbers are used to describe how many different ways a set can be partitioned into one or more non-empty subsets.", "pass@10": true, "passes": 6}
{"task_id": 788, "prompt": "Create a function that generates a new tuple using a provided string and list. Ensure smooth handling when the string and list inputs are empty.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Create a function to identify the nearest smaller number to n. Make sure to manage scenarios where n represents the smallest number possible within the input domain. Consider edge cases and ensure that the function handles different data types appropriately.", "pass@10": true, "passes": 7}
{"task_id": 445, "prompt": "Create a function to execute index-wise multiplication of elements in the two provided tuples.", "pass@10": true, "passes": 5}
{"task_id": 426, "prompt": "Write a function to filter numbers that are odd and not divisible by two.", "pass@10": true, "passes": 10}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age. Compute it in terms of canine years.", "pass@10": false, "passes": 0}
{"task_id": 735, "prompt": "Develop a Python function to flip the bits of the number, except for the initial and final bits. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 6}
{"task_id": 615, "prompt": "Create a function that accepts a tuple containing other tuples and outputs the mean value for each inner tuple as a list.", "pass@10": true, "passes": 7}
{"task_id": 283, "prompt": "Create a Python function to verify if the occurrence of each digit in the number is not greater than the digit itself.", "pass@10": true, "passes": 7}
{"task_id": 559, "prompt": "Create a function to determine the sum of the largest contiguous sublist in the provided list. You need to calculate the sum of a sublist from the list that is contiguous. A contiguous sublist means that all its elements are consecutive within the original list. There should be no break in continuity of the list elements in the sublist.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Create a function that calculates the overall count. You need to determine the number of characters within a given string.", "pass@10": true, "passes": 9}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer. Your function should be able to handle both positive and negative integers or not. Ensure that the input string is trimmed of any leading or trailing whitespace before checking.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Ensure your function handles both numerical and alphabetical sorting appropriately. The function should also gracefully manage lists containing mixed data types, ensuring consistent ordering without errors.", "pass@10": true, "passes": 8}
{"task_id": 607, "prompt": "Compose a function to identify a regex pattern within a given string, returning the substring that matches, a starting index, and an ending index.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Create a Python function to calculate the difference between the maximum and minimum numbers in a specified list. You need to identify the maximum number from the list. Also, find the minimum number from the list.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Design a Python function that determines the size of the shortest list within a collection of lists. Ensure your solution efficiently handles edge cases such as empty lists or lists with varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. Ensure that your solution efficiently handles large datasets and edge cases. Pay attention to the function's time and space complexity.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. Make sure to handle the edge cases. Consider cases where the number might be zero. Also, account for situations where the number might be negative. Ensure your solution handles very large integers efficiently.", "pass@10": true, "passes": 7}
{"task_id": 393, "prompt": "Write a function to find the list with the maximum length. Determine which of the lists has the highest number of elements by counting each element in the lists. Ensure the function correctly identifies the list with the most elements. It is important to ensure that the function accurately identifies the longest list among multiple lists.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Create a Python function to determine if the two numbers vary at exactly one bit position or not. Ensure that the function handles both positive and negative integers correctly. Consider edge cases where the numbers are equal or where one or both numbers are zero.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Create a function to determine if the provided string begins with the identical character. You also need to check if it finishes with the identical character. Consider edge cases such as empty strings or strings with only one character when implementing your function.", "pass@10": true, "passes": 4}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length. These lists should be merged together step by step by alternating elements from each list. Combine them into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 723, "prompt": "The input is given as two arrays that have identical lengths. Write a function to count indices where the lists have the same values. Ensure the function is optimized for large datasets.", "pass@10": true, "passes": 7}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Ensure that the function is case-sensitive and accounts for any special characters. Implement efficient searching to handle lists that contain a large number of strings.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Create a Python function that calculates how many divisors an input integer has.", "pass@10": true, "passes": 10}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order. The function should take a sorted list and a value as input, and then determine the position in the list where the value can be inserted so that the list remains sorted.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. Determine whether the number has properties. These properties are characteristics that define it as a woodball. You need to inspect its attributes to confirm or deny its status as a woodball.", "pass@10": true, "passes": 9}
{"task_id": 247, "prompt": "Create a function that calculates the length of the longest subsequence that forms a palindrome within the provided string. Make sure the function handles both even and odd length palindromes effectively.", "pass@10": true, "passes": 10}
{"task_id": 296, "prompt": "Create a Python function. This function is meant to tally the number of inversions within a list.", "pass@10": true, "passes": 8}
{"task_id": 754, "prompt": "We consider an element to be common to lists l1, l2, l3 if it is found at the same position in all three lists. Write a function to find common elements from three lists. The function should return a list. Ensure your solution handles lists of varying lengths gracefully.", "pass@10": true, "passes": 9}
{"task_id": 742, "prompt": "Write a function. The function should be designed to calculate the area of a tetrahedron.", "pass@10": true, "passes": 8}
{"task_id": 800, "prompt": "Create a function that eliminates all white spaces from a given string.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not. Make sure your solution handles empty sequences appropriately. Additionally, ensure your solution performs efficiently for large sequences.", "pass@10": true, "passes": 10}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, associating each student name with a tuple containing the student's height and weight as float values. - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 6}
{"task_id": 84, "prompt": "Develop a function to identify the nth term in the sequence known as the Newman-Conway sequence. The sequence begins with specific initial terms. The initial terms are defined as P(1) = 1 and P(2) = 1. For any integer n greater than 2, the nth term is defined recursively using the formula: P(n) = P(P(n - 1)) + P(n - P(n - 1)). Given an integer n, your task is to compute the nth term in this sequence. Write a function that takes an integer input and returns the corresponding term from the sequence.", "pass@10": true, "passes": 6}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary. Ensure the function can handle dictionaries with numeric values of various types (e.g., integers, floats). Consider edge cases where the dictionary is empty or contains non-numeric values.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Make sure to handle any potential division by zero errors gracefully. Ensure that your function returns a new tuple containing the results of the modulo operation.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Design a function to organize the provided array utilizing shell sort.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string. Ensure that your solution maintains the order of characters with even index values. Consider edge cases where the input string may be empty or contain special characters.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Create a Python function to locate the greatest power of 2 that does not exceed n. Consider edge cases such as when n is less than 1.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Create a function that accepts a dictionary and integer n, then filters the dictionary to retain entries with values that are at least n. Ensure your implementation is efficient and can handle large datasets.", "pass@10": true, "passes": 9}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not. Ensure your solution accounts for edge cases. These cases include when the sublist might be empty or longer than the main list.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 8}
{"task_id": 389, "prompt": "Create a function that calculates the nth Lucas number. Lucas numbers are an integer sequence. It begins with 2 and 1 and each subsequent number equals the sum of the two preceding numbers.", "pass@10": true, "passes": 9}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples. You are given a list. Ensure that your solution handles both positive and negative integers within the tuples efficiently.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Create a Python function to swap the first and final elements in a specified list. You need to take a list as input. This list will have several elements.", "pass@10": true, "passes": 8}
{"task_id": 63, "prompt": "Write a function to find the maximum difference by computing the greatest difference achievable between any pair of elements present in the provided list of tuples.", "pass@10": true, "passes": 4}
{"task_id": 608, "prompt": "Write a python function that calculates the nth Bell number. The Bell number is a special number in combinatorics. It is used to count the number of partitions of a set.", "pass@10": true, "passes": 3}
{"task_id": 610, "prompt": "Write a python function which takes a list and performs specific operations. It gives back a list that has the identical components, except the k'th element has been deleted.", "pass@10": false, "passes": 0}
{"task_id": 271, "prompt": "Create a Python function that accepts an integer n. The function should calculate the sum of the first n even natural numbers that are elevated to the fifth power and efficiently handle large values of n to output the result promptly.", "pass@10": true, "passes": 3}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list. The function is designed to divide the list at each instance of the nth component. It returns a list of the resulting lists.", "pass@10": true, "passes": 2}
{"task_id": 632, "prompt": "Craft a Python function that relocates every zero to the rear of the provided list, catering to a list that might have multiple zeros, and guarantee that all these zeros are transferred to the list's conclusion.", "pass@10": true, "passes": 9}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. You should consider edge cases such as an empty array or non-numeric elements within the array. It is important to think about and ensure to handle scenarios with an empty array and non-numeric elements in the array. Additionally, ensure to validate inputs for correct data types before processing the sum.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string. Ensure your function handles both uppercase and lowercase characters appropriately.", "pass@10": true, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Ensure your solution handles edge cases such as empty lists or lists with non-numeric elements gracefully.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer. Ensure your solution efficiently handles cases where the input number is large.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. Ensure that the function handles any type of data contained within the list or tuples seamlessly.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list. Ensure that the function handles both positive and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type. You need to determine whether the data type of each element in the tuple matches the others. Ensure the function returns a boolean value indicating the result.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character. The function should then replace blank spaces in the string with the character and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occurrences of the element in the tuple. Ensure that the function handles edge cases such as empty tuples gracefully.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Write a function to eliminate every whitespace character present in the given string. This includes spaces, tabs, and any other form of empty characters within the text.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. The rectangle has two sides with given lengths. You need to calculate the product of these lengths to find the area.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Compose a function that relocates all numerals to the end of the specified string.", "pass@10": true, "passes": 10}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius. Ensure that your solution efficiently handles typical inputs within a reasonable range to provide accurate and timely results.", "pass@10": true, "passes": 8}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position. You should ensure the function handles invalid input gracefully.", "pass@10": true, "passes": 1}
{"task_id": 730, "prompt": "Create a function that eliminates consecutive duplicate elements from a specified list.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Make sure to consider items with the same price and handle them appropriately to ensure accurate results.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Create a function to determine the star number at the n'th position. Consider edge cases such as when n is zero. You should also think about scenarios where n is zero. Also consider when n is negative.", "pass@10": true, "passes": 6}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks if every item in the list matches the given element.", "pass@10": false, "passes": 0}
{"task_id": 439, "prompt": "Construct a method that merges a collection of numbers from an array into a single complete number, ensuring the method handles both positive and negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Create a function to calculate the third side of a right triangle. Ensure your function handles float inputs with precision and accuracy. It should manage and interpret these inputs correctly to perform calculations. Your function should also handle integer inputs correctly.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 9}
{"task_id": 309, "prompt": "Compose a Python function to determine the larger of two numbers, ensuring it correctly manages boundary cases like negative numbers and zero.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. The function should take a list of tuples and an integer k as input, and return a list of the k tuples from the input list that have the smallest values in their first element. Consider edge cases when k is larger than the number of tuples or when the list of tuples is empty. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 3}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. The function should handle both positive and negative integers and process zero efficiently and correctly. Ensure that the function maintains the original order of the list elements.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is odd or even. Write logic to find the length of the word first. Then, check if this length number is divisible by 2 or not. Consider edge cases where the word is an empty string or contains special characters.", "pass@10": true, "passes": 3}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers. Ensure that the solution effectively handles all possible combinations of input values. It should ensure accuracy. This is regardless of the order or type of numbers provided. Consider edge cases such as equal numbers or large numerical differences to validate robustness.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to calculate the number of binary sequences of length 2n. These binary sequences must have the property. Specifically, the sum of the initial n bits equals the sum of the last n bits. Consider optimizing your solution for large values of n to ensure it runs efficiently.", "pass@10": true, "passes": 6}
{"task_id": 278, "prompt": "Design a function to determine the number of elements that come before the tuple item within the provided tuple.", "pass@10": true, "passes": 2}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet, and this should be case insensitive, meaning that both uppercase and lowercase letters are treated the same. Ensure to handle special cases, such as empty strings and non-alphabetic characters, appropriately.", "pass@10": true, "passes": 6}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. Subarrays are contiguous elements in an array whose form [(i):(j+1)], where i and j are the start and end index. A subarray may have any odd length such as 1, 3, 5, etc. Make sure to consider the efficiency of your solution for large input arrays.", "pass@10": true, "passes": 10}
{"task_id": 612, "prompt": "Construct a Python function that takes a list of lists, where each nested list includes two items, and outputs a pair of lists with the first one holding the first item of each sublist and the second containing the second. Assume that the input list is non-empty. Each sublist will be composed of exactly two elements without exception.", "pass@10": false, "passes": 0}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list, ensuring that the function accurately distinguishes integer elements from other data types present in the list.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Create a python function to calculate the difference between the sum of cubes of the first n natural numbers and the sum of the initial n natural numbers.", "pass@10": true, "passes": 6}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple while ensuring your solution handles tuples of varying lengths gracefully.", "pass@10": true, "passes": 7}
{"task_id": 762, "prompt": "Create a function to check if the specified month number has 30 days. Months are represented as numbers from 1 to 12. Consider edge cases where the input might not be a valid month number.", "pass@10": true, "passes": 4}
{"task_id": 644, "prompt": "Write a python function to reverse an array till a specified index. You should ensure the function handles invalid input gracefully.", "pass@10": false, "passes": 0}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n), ensuring the function handles base cases correctly by considering edge cases. Pay special attention when n is zero or a negative number. Additionally, consider optimizing the function using memoization or dynamic programming to improve performance for large inputs.", "pass@10": true, "passes": 5}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list. Make sure that the function is designed to handle large numbers efficiently. Efficient handling of large numbers is crucial to ensure the function performs well. You can achieve this by using appropriate data types and algorithms.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string. Make sure your solution handles cases where the string is empty or the character does not appear in the string.", "pass@10": true, "passes": 4}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. Ensure that the function handles large numbers efficiently. It should be efficient in handling large numbers. It should do this without causing overflow. Carefully consider the time complexity of your approach to ensure optimal performance.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Create a function that computes the highest total from a series of pairs.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in an array that is sorted. The array is already arranged in increasing order. The numbers are sorted in ascending order from the smallest to the largest.", "pass@10": true, "passes": 4}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers while ensuring your solution is efficient and handles edge cases effectively. Consider cases where the numbers might be negative or very large.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}). The function should return a tuple of length N. Ensure that the tuple has elements from t_1 to t_N and multiply them by the corresponding next element. Each i-th element of the tuple is equal to t_i * t_{i+1}. Ensure that your function handles empty tuples correctly by returning an empty tuple in such cases.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Write a function to determine the highest value in a specified heterogeneous list.", "pass@10": true, "passes": 7}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers. Ensure the function handles both positive and negative integers effectively to maximize the product. Include unit tests to verify function performance for different input cases.", "pass@10": true, "passes": 2}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list. Ensure the function processes the list efficiently and is capable of handling varying sizes of lists. The function should be able to handle all numeric input types correctly and perform the calculations accurately.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word, ensuring that the function can handle both uppercase and lowercase letters effectively.", "pass@10": true, "passes": 10}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Your function should manage situations where no strings of the specified size exist in the list. It should account for scenarios where the list does not contain any strings matching the specified size. Ensure your function gracefully handles empty lists and invalid size inputs.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to identify the elements that are not similar in the given two tuples. Ensure that the function handles tuples of different lengths gracefully. This means that the function should work properly even if the tuples do not have the same number of elements. It should not raise errors or fail unexpectedly in such cases.", "pass@10": true, "passes": 8}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Consider optimizing your function. Make sure your function can handle larger values of n efficiently. You may want to explore memoization or iterative approaches to improve performance.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is magic square. A magic square is a grid of numbers where each row, column, and diagonal sum to the same number, which defines a magic square.", "pass@10": false, "passes": 0}
{"task_id": 425, "prompt": "Create a function to determine the count of sublists that include a specific element. Make certain the solution capably handles large lists with recurring sublists. Ensure your function is optimized for performance to handle large datasets efficiently.", "pass@10": true, "passes": 9}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients, efficiently handling large values of n. Consider edge cases and constraints to optimize the solution further.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to determine if a number can be divided evenly by 11. This means you need to check if there is no remainder when a number is divided by 11. It is important to ensure that the result of the division is an integer. You need to verify that the division operation results in zero remainder. Make sure to consider negative numbers as well when implementing the function.", "pass@10": true, "passes": 9}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Create a function to eliminate uneven elements. You need to perform this operation within the nested mixed tuple.", "pass@10": true, "passes": 4}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer). Ensure that your solution handles division by zero appropriately by returning a relevant message or exception.", "pass@10": true, "passes": 10}
{"task_id": 286, "prompt": "Create a function to determine the maximum sum of a contiguous subarray in the altered array, which is formed by repeating the original array k times.", "pass@10": true, "passes": 4}
{"task_id": 141, "prompt": "Write a function to sort a list of elements. Ensure your function handles both numerical and alphabetical sorting appropriately. The function should also gracefully manage lists containing mixed data types, ensuring consistent ordering without errors. Consider edge cases such as empty lists or lists with identical elements to further enhance the robustness of your implementation.", "pass@10": true, "passes": 9}
{"task_id": 583, "prompt": "Create a function that calculates and returns the nth Catalan number by using a mathematical approach. Consider implementing dynamic programming for efficient calculation of Catalan numbers. This prevents redundant computations. It also enhances performance.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string, ensuring that the function handles tuples containing different data types gracefully.", "pass@10": true, "passes": 9}
{"task_id": 582, "prompt": "Create a function that determines whether a dictionary contains any elements by examining the length of the dictionary to check if it has any key-value pairs present inside it.", "pass@10": true, "passes": 9}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": true, "passes": 3}
{"task_id": 252, "prompt": "Develop a Python function to translate complex numbers into polar coordinates. Make sure the function smoothly manages edge cases, like when the input is zero.", "pass@10": false, "passes": 0}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array. Construct a function that efficiently iterates through the array. It should find the difference effectively. Ensure that your solution handles both positive and negative numbers accurately.", "pass@10": true, "passes": 9}
{"task_id": 391, "prompt": "Design a function that transforms multiple lists into a dictionary with a nested structure that effectively captures the relationship between the lists in a coherent manner. Make sure to handle lists of varying lengths gracefully, ensuring the nested dictionary remains well-structured and understandable.", "pass@10": true, "passes": 8}
{"task_id": 573, "prompt": "Create a Python function that calculates the result of multiplying the unique elements in a given list, ensuring that your solution efficiently handles lists of varying lengths and includes appropriate error handling for edge cases.", "pass@10": true, "passes": 9}
{"task_id": 778, "prompt": "Write a function to group consecutive duplicates from the elements of a given list. You are required to group the consecutive duplicates into separate sublists for each group.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. You need to explore the potential combinations. There are various potential combinations that you must explore to achieve the desired outcome. Each combination must consist of tuples selected from the provided list, ensuring the sums are formed correctly. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 5}
{"task_id": 781, "prompt": "Create a Python function to ascertain if the count of divisors is an even number. Consider optimizing the algorithm for better performance with large numbers.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element. The function should insert the element before each element in the list. It will return the resulting list. Ensure that the function preserves the order of the original elements while adding the specified element before each one.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N provided as a list of lists, where each cell has a designated cost. A path is defined as a specific sequence of cells that starts from the top-left cell. It can only move right or down and ends on bottom right cell. Our goal is to determine a path with the highest average among all possible paths. Average is computed as total cost divided by the number of cells visited in the path. Consider edge cases such as the smallest possible matrix and ensure your solution handles these scenarios efficiently. Verify correctness with matrices of varying costs, including negative values.", "pass@10": true, "passes": 4}
{"task_id": 599, "prompt": "Craft a function to compute the summary and average of the first n natural numbers, effectively managing large values of n.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. Ensure that the function efficiently handles large values of n without exceeding time complexity limits.", "pass@10": true, "passes": 7}
{"task_id": 736, "prompt": "Write a function to find the leftmost position for inserting a specific value in a sorted sequence, efficiently handling large input sizes. Consider edge cases where the input value is smaller or larger than all elements in the sequence. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 262, "prompt": "Create a function that receives a list and an integer L, dividing the provided list into two sections with the first one having a length of L, and give back the resultant lists as a tuple. Verify that the integer L does not surpass the size of the input list. Check and confirm that the integer L is within the bounds of the list size. Ensure to handle edge cases where L is zero or equal to the length of the list.", "pass@10": true, "passes": 6}
{"task_id": 567, "prompt": "Create a function to determine if a given list is sorted. Account for special cases like an empty list. Additionally, consider cases where the list contains only elements that are all the same. Ensure your function efficiently handles large lists with minimal computational overhead.", "pass@10": true, "passes": 9}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square. Your function should determine the smallest perfect square. Perfect squares are numbers that are the product of an integer with itself. It should also ensure that the perfect square is greater than a given number.", "pass@10": true, "passes": 8}
{"task_id": 476, "prompt": "Create a Python function to calculate the total of the maximum and minimum number in a specified array, ensuring your solution considers both positive and negative integers in the array. Consider edge cases where the array may have duplicate maximum or minimum values.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Develop a Python function to flip the bits of the number, except for the initial and final bits. You should ensure the function handles both positive and negative numbers appropriately.", "pass@10": true, "passes": 9}
{"task_id": 301, "prompt": "Write a function to ascertain the depth of nesting in a dictionary, ensuring your solution handles empty dictionaries correctly.", "pass@10": true, "passes": 5}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [the sum of a_1 and b_1,...,a_n plus b_n].", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest. Consider edge cases where lists may be of different lengths. The function should still perform correctly in such scenarios.", "pass@10": true, "passes": 10}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value. The dictionary associates each student name with a tuple containing the student's height and weight as float values. - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Create a Python function that eliminates the first and last instance of a specified character from a string. Make sure your solution handles cases where the string is empty or the character does not appear in the string.", "pass@10": true, "passes": 4}
{"task_id": 89, "prompt": "Create a function to identify the closest smaller number to n. Make sure to manage scenarios where n represents the smallest number possible within the input domain. Consider edge cases and ensure that the function handles different data types appropriately.", "pass@10": true, "passes": 10}
{"task_id": 720, "prompt": "Write a function to append a dictionary to the tuple. The output should be a tuple, and ensure that the function handles cases where the tuple might already contain other complex data types. Consider edge cases where the dictionary is empty or has nested dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Create a function to determine if the provided string begins and finishes with the identical character. The function should check the first character in the string. It should then compare it to the last character in the string.", "pass@10": true, "passes": 8}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer. You will receive a tuple consisting of positive integers, and your task is to merge these integers. You must merge these integers in a way that results in a single continuous integer value. Consider edge cases where the tuple may contain multiple zeroes, and ensure they do not affect the final result negatively.", "pass@10": true, "passes": 10}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in a descending sequence. Ensure your function can robustly handle scenarios where n surpasses the list's length.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Create a function to collapse a list. Organize each element into one continuous, linear sequence and sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. Ensure that your function correctly handles cases where the indices might be out of bounds. It is crucial to ensure your function returns a meaningful result when indices are out of bounds. This might mean returning a default value or perhaps an error message. Make sure to account for scenarios where the list could be empty or contain non-numeric elements.", "pass@10": true, "passes": 8}
{"task_id": 624, "prompt": "Write a python function to transform a provided string to uppercase. Ensure that your solution is robust enough to handle situations where the input may be an empty string. It should also handle cases where the string contains non-alphabetic characters gracefully.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list, and ensure your solution handles both empty and non-empty lists efficiently. Consider edge cases where the first list might be empty, necessitating the addition of the second list's elements from scratch. Pay particular attention to scenarios where both lists could be empty, to avoid unnecessary operations.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Create a function to simplify a given list structure that might contain nested lists. This structure could be complex and have multiple layers of nested lists.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not. It is important to handle the edge cases where the number might be zero or negative. Sometimes numbers can be zero and at other times they can be negative. Ensure that your function is optimized for performance for very large numbers.", "pass@10": true, "passes": 7}
{"task_id": 172, "prompt": "Write a function to count how often the string 'std' appears within a given string. Ensure your function efficiently handles strings of any length, including very large ones.", "pass@10": true, "passes": 2}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. Develop a separate auxiliary function to calculate these sums. Ensure the helper function correctly computes the sum. Do this by iterating over all possible divisors.", "pass@10": true, "passes": 2}
{"task_id": 739, "prompt": "Develop a Python function to find the index of the smallest triangular number containing n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Ensure that your solution is optimized for performance and handles large inputs efficiently. Consider edge cases and test your function thoroughly to ensure robustness.", "pass@10": true, "passes": 10}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. Make certain the function handles both uppercase and lowercase characters effectively. Ensure that the function also replaces special characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the quantity of lists inside a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences. Ensure your function handles cases where the inner lists contain both duplicates and unique elements. Pay attention to edge cases such as when the outer list is empty or contains non-list elements. Consider the performance of your solution when dealing with large lists.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Create a Python function to determine if the two numbers vary by just one bit position or not.", "pass@10": true, "passes": 8}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n. The integer n is the input parameter for the function. The function is required to return the total of the squares of the first n odd natural numbers. Ensure that the function handles edge cases where n might be zero or negative.", "pass@10": false, "passes": 0}
{"task_id": 19, "prompt": "Create a method to check if there exists any duplicate number in the given list of integers.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function that receives an integer n and returns the sum of squares of first n even natural numbers. Make sure that your solution is optimized. Ensure your solution efficiently handles large values of n.", "pass@10": true, "passes": 2}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer. Consider edge cases where the integer could be zero. Also account for cases where the integer is very large.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Create a Python function designed to swap the first and last elements in a list.", "pass@10": true, "passes": 9}
{"task_id": 123, "prompt": "Write a function to sum all amicable numbers. These numbers are the ones that have a specific property related to their divisors. They should range from 1 to a specified number.", "pass@10": true, "passes": 1}
{"task_id": 637, "prompt": "Develop a function to determine if the given amount leads to neither profit nor loss. You should ensure your function handles edge cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 86, "prompt": "Design a function to calculate the nth centered hexagonal number. The centered hexagonal number is a figurate number that represents a hexagon with a dot at the center and additional dots surrounding the center dot in concentric hexagonal layers.", "pass@10": true, "passes": 8}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer. Your function should be able to handle both positive and negative integers. Ensure that the input string is trimmed of any leading or trailing whitespace before checking.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max((f(n/2) + f(n/3) + f(n/4) + f(n/5)), n), ensuring the function handles base cases correctly by considering edge cases. Pay special attention when n is zero or a number less than zero. Additionally, consider optimizing the function using memoization or dynamic programming to improve performance for large inputs.", "pass@10": true, "passes": 2}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2. For example, the sum would involve parts like n + (n-2) + (n-4)... The sequence persists in this way until n-x =< 0. Assume n is a positive integer. Make sure your function effectively manages different edge scenarios.", "pass@10": true, "passes": 7}
{"task_id": 568, "prompt": "Write a function to create a list. The list is supposed to have a specific number of dictionaries. These dictionaries should be empty, and their total count should be represented by N. Ensure that the function efficiently handles the creation of the list even for large values of N.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order. The sorting should be carried out according to the sum of its rows.", "pass@10": true, "passes": 10}
{"task_id": 723, "prompt": "The input is given as two arrays that have identical lengths. Write a function to count indices where the lists have the same values. Ensure the function is optimized for large datasets. Consider edge cases where arrays might contain negative numbers or repeated elements.", "pass@10": true, "passes": 8}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. Index wise addition involves adding elements at the same index from each tuple for every index present in the tuples. Ensure your solution can handle tuples containing varying numeric data types.", "pass@10": true, "passes": 2}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. Find examples and explanations at https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 9}
{"task_id": 773, "prompt": "Create a function to identify the occurrence and position of substrings inside a string. Return None if there is no match. The function should also manage case sensitivity by viewing uppercase and lowercase letters as unique characters.", "pass@10": true, "passes": 3}
{"task_id": 589, "prompt": "Create a function that identifies perfect squares within the range of two specified numbers.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "\nWe require you to create a function in Python. This function will change the specified string to lowercase. Make sure the function handles edge cases such as empty strings.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Create a function to identify the smallest value in a provided heterogeneous list.", "pass@10": true, "passes": 4}
{"task_id": 165, "prompt": "Create a function that counts how many characters in a string match their position in the English alphabet. This must be case insensitive, treating uppercase and lowercase letters equally. Ensure to manage special situations like empty strings and non-alphabetic characters properly. Consider edge cases to ensure the function behaves as expected under all possible inputs.", "pass@10": true, "passes": 4}
{"task_id": 615, "prompt": "Create a function that accepts a tuple containing other tuples and outputs the mean value of each inner tuple, which contains values for which you need to calculate the mean. The result should be returned as a list.", "pass@10": true, "passes": 7}
{"task_id": 271, "prompt": "Create a Python function that accepts an integer n. The function should calculate the sum of the first n even natural numbers that are elevated to the fifth power and efficiently handle large values of n to output the result promptly. Ensure that the function is optimized for performance to handle edge cases appropriately.", "pass@10": true, "passes": 7}
{"task_id": 67, "prompt": "Write a function to figure out the number of ways to divide a set. Bell numbers are used to describe how many different ways a set can be partitioned into one or more non-empty subsets.", "pass@10": true, "passes": 4}
{"task_id": 472, "prompt": "Create a Python function to check if the supplied list contains numbers. These numbers need to be in a sequential arrangement.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Create a Python function that pulls out the initial element from each sublist. Make sure the function can handle cases where the sublists are empty or there are no sublists within the main list. It should account for situations where the sublists may be devoid of items or the main list is devoid of items.", "pass@10": true, "passes": 10}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and divides a list at every nth element, returning a list of the resulting lists.", "pass@10": true, "passes": 1}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You need to consider every possible sublist from the given input list, then for each sublist, calculate the product of its elements. Finally, sum up all those products to get the final result. Note: Ensure your implementation efficiently handles large lists to avoid performance issues. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 7}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition. Perform the addition between neighboring elements. Use the elements of the given tuple for these additions.", "pass@10": true, "passes": 7}
{"task_id": 142, "prompt": "Write a function to calculate how many items are identical at the same position in three given lists.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Create a function that identifies words from a list that are longer than n characters by filtering them based on their length.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to swap all whitespaces in a given string with an underscore, and replace underscores with whitespaces. Ensure your solution handles edge cases such as strings with no whitespaces or underscores.", "pass@10": true, "passes": 6}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. Make sure that your implementation efficiently handles large values of n. It should do this without significant performance degradation. Consider edge cases where n might be exceptionally large or zero.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurrences in the original list, ensuring to handle nested lists and varying list sizes effectively.", "pass@10": true, "passes": 9}
{"task_id": 161, "prompt": "Create a function to eliminate all items from a specified list that exist in another list.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list, ensuring that the returned list is sorted in descending order. The function should handle cases where n is greater than the length of the list without error.", "pass@10": true, "passes": 8}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list, which will contain several pairs of tuples and we need to find the pair with the highest absolute product. Consider edge cases such as tuples containing zeros or negative numbers that might affect the product calculations.", "pass@10": true, "passes": 6}
{"task_id": 291, "prompt": "Develop a function to determine how many methods exist for painting the fence with n posts and k colors. It is important to ensure that no more than 2 consecutive posts share the same color. This constraint is crucial to maintain the diversity and aesthetic appeal of the painted fence.", "pass@10": true, "passes": 7}
{"task_id": 606, "prompt": "Write a function that changes degrees into radians. Make sure the function handles edge cases such as negative degrees or degrees greater than 360.", "pass@10": true, "passes": 9}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. You need to ensure that the sorting remains consistent with these values, meaning comparing the second value of one tuple with the second value of another to determine their order.", "pass@10": true, "passes": 3}
{"task_id": 563, "prompt": "Create a function that retrieves values from a string. You should focus on extracting values that are enclosed within quotation marks. These are the specific values that need to be retrieved.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array, derived from subsequences considering strictly increasing sequences only.", "pass@10": true, "passes": 4}
{"task_id": 93, "prompt": "Craft a function to determine the result of 'a' raised to the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Make sure to consider nested lists. Count all the nested lists while counting.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples, ensuring that the function handles cases where the list of tuples might be empty or the tuples are shorter than n elements.", "pass@10": true, "passes": 10}
{"task_id": 738, "prompt": "Write a function to calculate the geometric sum of n-1. This sum is the result of adding a series of terms. Each term is an important part of the series. It contributes to the overall geometric sum. Be sure to consider edge cases where n might be 0 or negative. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php", "pass@10": true, "passes": 5}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list. Consecutive items are elements that are adjacent to each other in the list, and make sure the list you return contains all such pairs from the original list.", "pass@10": true, "passes": 8}
{"task_id": 296, "prompt": "Develop a Python function. This function is designed to count the inversions present in a list.", "pass@10": true, "passes": 7}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ratio of positive numbers in an array of integers.", "pass@10": true, "passes": 1}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Ensure the implementation handles lists with numerous elements efficiently. Test your function with various input cases to verify its correctness and performance.", "pass@10": true, "passes": 3}
{"task_id": 224, "prompt": "Create a Python function that tallies the amount of binary digits with a value of 1 in an input number. Ensure the function handles both positive and negative integers gracefully.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You are given a list of tuples and an integer k. Your task is to identify the k tuples with the smallest values. The function should return a new list containing these k tuples. The tuples are assumed to contain comparable elements. Write efficient code to solve the problem. Consider edge cases where the list is empty or k exceeds the number of tuples.", "pass@10": true, "passes": 2}
{"task_id": 415, "prompt": "Write a python function to identify a duo with the maximum product from a specified array. You need to determine the pair of integers that, when multiplied together, yield the highest product.", "pass@10": true, "passes": 7}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. You should consider edge cases such as an empty array or elements that are not numbers within the array. It is important to think about and ensure to handle scenarios with an empty array and non-numeric elements in the array. Additionally, ensure to validate inputs for correct data types before processing the sum.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Develop a function to eliminate any words that have a length of k from the provided string.", "pass@10": true, "passes": 9}
{"task_id": 248, "prompt": "Write a function that takes in an integer n and calculates the harmonic sum of n-1. Ensure the function handles edge cases. Specifically, it should address cases where n is less than or equal to 1 appropriately. Make sure to implement efficient handling for large values of n to prevent excessive computation time.", "pass@10": false, "passes": 0}
{"task_id": 7, "prompt": "Create a function to find all words in a given string. Ensure that the words are at least 4 characters long.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, create a function that returns the first element of the tuple with the smallest second element. Ensure that your function handles an empty list scenario appropriately.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Create a Python function to verify if the occurrence of each digit in the number is not greater than the digit itself.", "pass@10": true, "passes": 8}

{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": true, "passes": 5}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": true, "passes": 8}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": true, "passes": 1}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": true, "passes": 7}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": true, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": true, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 7}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 9}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": true, "passes": 9}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": true, "passes": 10}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": true, "passes": 5}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": true, "passes": 9}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": true, "passes": 8}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": true, "passes": 9}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 7}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": true, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m).", "pass@10": true, "passes": 1}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": true, "passes": 10}
{"task_id": 111, "prompt": "Write a function to find the common elements in given nested lists.", "pass@10": true, "passes": 2}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": true, "passes": 9}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": true, "passes": 4}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": true, "passes": 8}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": true, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": true, "passes": 10}
{"task_id": 140, "prompt": "Write a function to flatten the list of lists into a single set of numbers.", "pass@10": true, "passes": 2}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": true, "passes": 10}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": true, "passes": 10}
{"task_id": 163, "prompt": "Write a function to calculate the area of a regular polygon given the length and number of its sides.", "pass@10": true, "passes": 3}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same.", "pass@10": true, "passes": 1}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": true, "passes": 6}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": true, "passes": 7}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices.", "pass@10": true, "passes": 6}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Write a function to count the number of occurence of the string 'std' in a given string.", "pass@10": true, "passes": 9}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": true, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": true, "passes": 5}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.", "pass@10": true, "passes": 1}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": true, "passes": 8}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number.", "pass@10": true, "passes": 1}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": true, "passes": 10}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": true, "passes": 8}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": true, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": true, "passes": 5}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": true, "passes": 8}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": true, "passes": 7}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": true, "passes": 6}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.", "pass@10": true, "passes": 9}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": true, "passes": 7}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": true, "passes": 7}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": true, "passes": 1}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": true, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number.", "pass@10": true, "passes": 10}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": true, "passes": 9}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle.", "pass@10": true, "passes": 5}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number.", "pass@10": true, "passes": 4}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": true, "passes": 9}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": true, "passes": 2}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 5}
{"task_id": 306, "prompt": "Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .", "pass@10": true, "passes": 1}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple.", "pass@10": true, "passes": 3}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": true, "passes": 1}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": true, "passes": 3}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": true, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": true, "passes": 9}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples in the given list.", "pass@10": true, "passes": 5}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": true, "passes": 8}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Write a python function to find whether the parity of a given number is odd.", "pass@10": true, "passes": 1}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": true, "passes": 1}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple.", "pass@10": true, "passes": 10}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": true, "passes": 4}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to find the ration of positive numbers in an array of integers.", "pass@10": true, "passes": 1}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": true, "passes": 9}
{"task_id": 446, "prompt": "Write a python function to count the occurence of all elements of list in a tuple.", "pass@10": true, "passes": 1}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": true, "passes": 9}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": true, "passes": 4}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": true, "passes": 8}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": true, "passes": 7}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": true, "passes": 10}
{"task_id": 471, "prompt": "Write a python function to find the product of the array multiplication modulo n.", "pass@10": true, "passes": 1}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": true, "passes": 3}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.", "pass@10": true, "passes": 4}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": true, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": true, "passes": 9}
{"task_id": 603, "prompt": "Write a function to get all lucid numbers smaller than or equal to a given integer.", "pass@10": true, "passes": 1}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": true, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": true, "passes": 10}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": true, "passes": 10}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": true, "passes": 2}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers.", "pass@10": true, "passes": 10}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple.", "pass@10": true, "passes": 5}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": true, "passes": 7}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list.", "pass@10": true, "passes": 8}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": true, "passes": 10}
{"task_id": 638, "prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.", "pass@10": true, "passes": 3}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position.", "pass@10": true, "passes": 6}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": true, "passes": 2}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 10}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.", "pass@10": true, "passes": 3}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": true, "passes": 10}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h.", "pass@10": true, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 9}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 8}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": true, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": true, "passes": 10}
{"task_id": 742, "prompt": "Write a function to caluclate the area of a tetrahedron.", "pass@10": true, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": true, "passes": 10}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 2}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 4}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 9}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": true, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": true, "passes": 1}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": true, "passes": 9}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": true, "passes": 10}
{"task_id": 765, "prompt": "Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": true, "passes": 9}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 5}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 9}
{"task_id": 782, "prompt": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": true, "passes": 1}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 10}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": true, "passes": 9}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the last position of an element in a sorted array.", "pass@10": true, "passes": 2}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": true, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.", "pass@10": true, "passes": 9}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": true, "passes": 10}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 9}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not.", "pass@10": true, "passes": 4}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": true, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": true, "passes": 10}
{"task_id": 554, "prompt": "Write a python function which takes a list of integers and only returns the odd ones.", "pass@10": true, "passes": 10}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": true, "passes": 5}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 8}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": true, "passes": 9}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": true, "passes": 9}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples.", "pass@10": true, "passes": 9}
{"task_id": 582, "prompt": "Write a function to check if a dictionary is empty", "pass@10": true, "passes": 8}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": true, "passes": 9}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words in a string that have a length of at least 4 characters. Words are considered to be at least four characters if their length is greater than or equal to four.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": true, "passes": 5}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": true, "passes": 5}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list. Ensure your function handles lists with negative numbers as well.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": true, "passes": 9}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not. Ensure your solution efficiently handles both positive and negative integers.", "pass@10": true, "passes": 8}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence. The sequence is given in the patterns array.", "pass@10": true, "passes": 8}
{"task_id": 77, "prompt": "Write a python function to determine if a given number is divisible by 11. You need to implement a logic to check for divisibility accurately.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Craft a Python function to verify if a word's length is odd or even.", "pass@10": true, "passes": 6}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. A tetrahedral number is the sum of the first n triangular numbers, representing the number of spheres in a pyramid with a triangular base.", "pass@10": true, "passes": 10}
{"task_id": 86, "prompt": "Design a function to determine the nth centered hexagonal number.", "pass@10": true, "passes": 4}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. Ensure the function can handle input lists containing various data types such as integers, strings, and floats.", "pass@10": true, "passes": 7}
{"task_id": 89, "prompt": "Write a function to identify the nearest lesser number compared to n.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values. Ensure that the solution efficiently handles large datasets and edge cases.", "pass@10": true, "passes": 9}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not. An undulating number is a number that follows a repeating pattern of two different digits alternating indefinitely.", "pass@10": true, "passes": 8}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Ensure that the function effectively handles and processes nested lists of varying depths.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. A magic square is a square matrix where the sum of every row, column, and diagonal is the same.", "pass@10": true, "passes": 9}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list. Ensure that the resultant list maintains the original order of remaining elements.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Ensure that your solution handles both even and odd values of n correctly.", "pass@10": true, "passes": 10}
{"task_id": 163, "prompt": "Create a function to determine the area of a regular polygon given the side length and the number of sides.", "pass@10": false, "passes": 0}
{"task_id": 164, "prompt": "Write a function to determine if the sum of the divisors of two integers are the same. The task is to create a function that compares the sums of divisors. You need to check if these sums are equal.", "pass@10": false, "passes": 0}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). Consider adding edge cases where strings contain non-alphabetical characters.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number. Ensure that your implementation is efficient for large lists.", "pass@10": true, "passes": 1}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n. Ensure your function efficiently handles very large values of n.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. A range is defined by two indices. It is important to specify the starting and ending index.", "pass@10": true, "passes": 4}
{"task_id": 172, "prompt": "Create a function to determine how often the sequence 'std' appears within a specified string.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers. Ensure your solution efficiently handles edge cases like duplicate values among the numbers.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Ensure that the modification of the first list maintains the list structure without directly altering its original references.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to determine the next perfect square that is larger than a specified number.", "pass@10": false, "passes": 0}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method. Make sure to handle edge cases where the input might be zero or a negative number.", "pass@10": true, "passes": 8}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string. A palindromic subsequence is a sequence that reads the same forward and backward, and it may not necessarily be contiguous within the original string.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that accepts a list and a length n, and produces all combinations (with repetition) involving the list's elements, returning a list containing a tuple for each combo.", "pass@10": true, "passes": 9}
{"task_id": 257, "prompt": "Design a function that accepts two integers and outputs a tuple containing the second integer first, followed by the first integer.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to find the maximum value between two given tuples. A tuple is an ordered collection of elements, and we need to evaluate which of the two collections holds the larger values.", "pass@10": true, "passes": 4}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. Ensure to handle edge cases where n is less than zero or very large, as this may affect the program efficiency and output accuracy.", "pass@10": true, "passes": 4}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": true, "passes": 9}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number. The nth decagonal number can be calculated using the formula \\( n(4n - 3) \\).", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Create a function to compute the difference between two lists by subtracting their elements one by one.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself. Consider edge cases where the integer could be non-positive or extremely large.", "pass@10": true, "passes": 9}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. Ensure your function handles edge cases such as empty lists efficiently.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n. The function should compute the sum of squares of the first n even natural numbers.", "pass@10": true, "passes": 8}
{"task_id": 292, "prompt": "Create a Python function that calculates the division of two numbers, rounding down to the nearest whole number.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Develop a function to compute the greatest total from the array of tuples.", "pass@10": true, "passes": 9}
{"task_id": 306, "prompt": "Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i. Ensure that the subsequence includes only strictly increasing elements.", "pass@10": false, "passes": 0}
{"task_id": 307, "prompt": "Write a function to extract a specific column from a given tuple. This function should take a tuple and an index as its parameters. Then it should return the elements of the tuple at the specified column index.", "pass@10": true, "passes": 1}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers. Ensure your solution is efficient and handles edge cases.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": false, "passes": 0}
{"task_id": 389, "prompt": "Write a function. The function should be able to find the n'th lucas number.", "pass@10": true, "passes": 9}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length. Ensure your function efficiently handles lists of varying sizes, especially large lists.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. Ensure that your solution has optimal time and space complexity when possible.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not. Make sure to consider edge cases like empty strings or strings with one character.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Write a function to determine the median of three numbers. The median is the middle value when the numbers are arranged in order. If the numbers are not given in order, sort them first. Then, return the middle value as the median.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples. Ensure your implementation handles tuples of various lengths and types seamlessly.", "pass@10": true, "passes": 10}
{"task_id": 400, "prompt": "Write a function to determine the count of distinct tuples in the given list.", "pass@10": true, "passes": 2}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers. Make sure to handle edge cases involving different data types and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 406, "prompt": "Create a Python function to determine if the parity of a specified number is odd.", "pass@10": false, "passes": 0}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list. Ensure that your implementation can efficiently handle lists containing a large number of tuples.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. This list may contain elements of different data types. These types may include integers, floats, strings, or even sublists.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple. Use the specified delimiter to join them together.", "pass@10": false, "passes": 0}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers. Ensure that the solution efficiently handles large values of n without performance degradation.", "pass@10": true, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element. Ensure that your solution efficiently handles large lists and varying input sizes.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Create a Python function to determine the final digit of a specified number.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that the function correctly handles lists containing negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 442, "prompt": "Write a function to determine the ratio of positive numbers in an array of integers. The array will contain a variety of integers, including positive, negative, and zero values.", "pass@10": false, "passes": 0}
{"task_id": 445, "prompt": "Write a function to conduct index-based multiplication of elements in the given two tuples.", "pass@10": true, "passes": 8}
{"task_id": 446, "prompt": "Write a python function to count how many times every element appears in a list. Your task is to determine the occurrence of each element in the list. ", "pass@10": false, "passes": 0}
{"task_id": 448, "prompt": "Write a function to calculate the sum of Perrin numbers. Make sure to handle the calculation efficiently for large indices.", "pass@10": true, "passes": 8}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Assume that the month number is a positive integer between 1 and 12, inclusive.", "pass@10": true, "passes": 9}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string. Ensure your solution handles strings with mixed case characters efficiently.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are identical in a dictionary. Ensure that the function takes a dictionary as its parameter, effectively analyzing the values contained therein. The goal is to verify if every value in the dictionary matches each other exactly.", "pass@10": true, "passes": 1}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary. Ensure that the function does not modify the original dictionary, but instead returns a new dictionary with the empty items removed.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Ensure that each element in the subsequence is strictly greater than the previous element.", "pass@10": true, "passes": 4}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value. To accomplish this, ensure that the function takes the dictionary as its input. The function should return a new dictionary sorted by the values in ascending order.", "pass@10": false, "passes": 0}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Ensure that your solution handles both positive and negative numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 603, "prompt": "Compose a function that retrieves all lucid numbers less than or equal to a specified integer.", "pass@10": false, "passes": 0}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. You are asked to provide the nth bell number as the output. The function should take one argument, which is the integer value of n, and return the corresponding bell number.", "pass@10": true, "passes": 8}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Create a function that calculates the power of n for every number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list. Consider edge cases, such as when the list is empty or contains only one element.", "pass@10": true, "passes": 2}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit. Verify also that there is no loss.", "pass@10": true, "passes": 10}
{"task_id": 722, "prompt": "The input is provided as - a dictionary with a student name as a key and a pair of floats (student_height, student_weight) as the associated value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": false, "passes": 0}
{"task_id": 723, "prompt": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Ensure that the function runs efficiently even for large lists.", "pass@10": true, "passes": 2}
{"task_id": 725, "prompt": "Write a function to extract values from within quotation marks in the given string.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": false, "passes": 0}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. Reference: https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 9}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not. Ensure your function can handle both uppercase and lowercase letters effectively.", "pass@10": true, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Visit https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ for guidance.", "pass@10": true, "passes": 7}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. More information can be found at https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/. The sequence starts with the numbers 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 6}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Make sure to handle edge cases where the list might be empty or k might be larger than the list size.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurrences in the original list. Make sure to handle edge cases, such as when the input list is empty or contains no sublists.", "pass@10": true, "passes": 10}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": false, "passes": 0}
{"task_id": 764, "prompt": "Write a python function to count number of digits. You need to count the number of numeric characters present in a given string.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. Ensure that the function can handle strings with varying delimiters and multiple spaces.", "pass@10": true, "passes": 7}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. The task is to generate combinations that sum to a specific value. You are given a list of tuples, each consisting of several integer elements.", "pass@10": true, "passes": 2}
{"task_id": 781, "prompt": "Write a python function to check whether there is an even count of divisors for a given number. A divisor is a number that divides another number without leaving a remainder. The function should take an integer as input and return True if the count of divisors is even. Otherwise, it should return False. You can implement this function using a loop and a counter to determine the number of divisors. The function can also utilize mathematical properties to enhance performance.", "pass@10": true, "passes": 4}
{"task_id": 782, "prompt": "Create a Python function that calculates the total of all subarrays with odd lengths. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/", "pass@10": true, "passes": 9}
{"task_id": 786, "prompt": "Write a function to find the correct position to insert a given value in a sorted sequence.", "pass@10": true, "passes": 9}
{"task_id": 791, "prompt": "Write a function to remove specific tuples from the given tuple. You will need to determine which tuples should be removed based on certain criteria.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. You need to iterate through each list in order to find the number of sublists. This can be done using a loop where you check each item.", "pass@10": true, "passes": 10}
{"task_id": 793, "prompt": "Write a python function to find the final position of an element in a sorted array. You are required to write a Python function. It should determine the last occurrence of a specified element.", "pass@10": false, "passes": 0}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers. The given three integers can be compared against each other.", "pass@10": true, "passes": 6}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 9}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not.", "pass@10": true, "passes": 3}
{"task_id": 805, "prompt": "Create a function that provides the sublist from a collection of sublists where the sum of its elements is the greatest.", "pass@10": true, "passes": 10}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and only returns the ones that are odd.", "pass@10": true, "passes": 9}
{"task_id": 555, "prompt": "Create a Python function to calculate the difference between the sum of cubes of the first n natural numbers and the sum of the initial n natural numbers.", "pass@10": true, "passes": 9}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. Ensure your solution efficiently handles strings of varying lengths while maintaining the integrity of the original character casing.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": true, "passes": 7}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Ensure that your solution efficiently handles large lists with varying lengths of sublists.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values from within quotation marks. This means you will identify the segment of text enclosed between two quotation marks. From a string.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function that will calculate the sum of the digits of a non-negative integer. This function should go through each digit separately and add them all together to return the total sum.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not. You need to determine if the elements in the list are arranged in a particular order. The order can be either ascending or descending.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Create a Python function to eliminate redundant numbers from a specified collection of lists.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Create a procedure to identify the distinct elements present in the provided pair of tuples.", "pass@10": true, "passes": 10}
{"task_id": 582, "prompt": "Write a function to check if a dictionary is empty.", "pass@10": true, "passes": 6}
{"task_id": 583, "prompt": "Write a function that computes and returns the nth Catalan number. The Catalan numbers are a sequence of natural numbers with important applications in combinatorial mathematics, representing various counting problems. Each number in the sequence can be defined in terms of previous numbers, and the nth Catalan number can be calculated using a recursive or iterative approach. Ensure your function takes an integer n as an input and appropriately handles edge cases such as negative or non-integer inputs.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Create a function to identify the n priciest items within a specific dataset.", "pass@10": true, "passes": 9}
{"task_id": 79, "prompt": "Craft a Python function to verify if a word's length is odd or even.", "pass@10": true, "passes": 9}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number. Ensure that your implementation is efficient for large lists. Consider edge cases where the list may contain repeated values or may be empty.", "pass@10": false, "passes": 0}
{"task_id": 781, "prompt": "Write a python function to check whether there is an even count of divisors for a given number. A divisor is a number that divides another number without leaving a remainder. A divisor fits completely into another number without leaving anything left over. The function should take an integer as input and return True if the count of divisors is even. Otherwise, it should return False. You can implement this function using a loop and a counter to determine the number of divisors. The function can also utilize mathematical properties to enhance performance.", "pass@10": true, "passes": 1}
{"task_id": 307, "prompt": "Write a function to extract a specific column from a given tuple. This function should take a tuple and an index as its parameters. Then it should give back the elements of the tuple at the designated column index.", "pass@10": true, "passes": 5}
{"task_id": 72, "prompt": "Write a python function to determine if the provided number can be expressed as the difference of two squared values. Ensure your solution efficiently handles both positive and negative integers.", "pass@10": true, "passes": 4}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Ensure that each element in the subsequence is strictly greater than the previous element. You should consider edge cases such as arrays with all identical elements or very small arrays.", "pass@10": true, "passes": 1}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. The task is to generate combinations that sum to a specific value. You are given a list of tuples, each consisting of several integer elements. Ensure that each element from the tuples can be used any number of times until the desired sum is achieved.", "pass@10": false, "passes": 0}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself. Consider edge cases where the integer could be non-positive or extremely large. Ensure the function efficiently handles very large integers without excessive resource consumption.", "pass@10": true, "passes": 10}
{"task_id": 804, "prompt": "Write a function to check whether the product of numbers in a list is even or not. Make sure your solution considers edge cases, such as an empty list, and handles them appropriately.", "pass@10": false, "passes": 0}
{"task_id": 14, "prompt": "Write a python function to determine the volume of a triangular prism. You are required to calculate the volume using the provided dimensions. These dimensions include the base area and the height of the prism.", "pass@10": false, "passes": 0}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the sequence. The sequence is given in the patterns array.", "pass@10": true, "passes": 10}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. Ensure that the function handles cases where the indices are out of bounds gracefully.", "pass@10": true, "passes": 7}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": true, "passes": 4}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. You are asked to provide the nth bell number as the output. The function should take one argument, which is the integer value of n, and return the corresponding bell number. Consider using memoization for efficient computation of larger values of n.", "pass@10": true, "passes": 7}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit. It is important to ensure that the given amount does not lead to any profit. Verify also that there is no loss.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Ensure that your solution handles both positive and negative numbers correctly. Your implementation should also efficiently handle very large numbers.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Write a python function to count number of digits. You need to count the number of numeric characters present in a given string. Ensure your solution handles edge cases, such as empty strings or strings without any numeric characters.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Write a function to determine the median of three numbers. The median is the middle value when the numbers are arranged in order. If the numbers are not given in order, sort them first. Then, return the middle value as the median. Ensure your function handles any edge cases, such as when all numbers are equal.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary. In this dictionary, every list is converted to a tuple. The value of such tuple is the number of its occurrences in the original list. Make sure to handle edge cases, such as when the input list is empty or contains no sublists.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words in a string that have a length of at least 4 characters. Words are considered to be at least four characters if their length is greater than or equal to four. Ensure your implementation efficiently handles strings of varied lengths and accurately processes multiple spaces or special characters between words.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Construct a function to determine the closest smaller digit relative to n.", "pass@10": true, "passes": 6}
{"task_id": 299, "prompt": "Develop a function to compute the greatest total. Focus on obtaining this total from the array of tuples.", "pass@10": true, "passes": 9}
{"task_id": 563, "prompt": "Create a function that retrieves values found inside quotation marks. This means you will identify the segment of text enclosed between two quotation marks. From a string.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values from within quotation marks in the given string.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string. You need to ensure that the order of characters in the string remains intact. The characters should stay in their original sequence.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not. Make sure to consider edge cases like empty strings or strings with one character. Be mindful of case sensitivity when comparing characters.", "pass@10": true, "passes": 9}
{"task_id": 566, "prompt": "Write a function that will calculate the sum of the digits of a non-negative integer. This function needs to examine every digit individually and combine them to return the sum.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Create a function that calculates the power of n for every number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not. You have to ascertain if the elements within the list are organized in a specific sequence. The order can be either ascending or descending.", "pass@10": true, "passes": 9}
{"task_id": 572, "prompt": "Create a Python function to eliminate redundant numbers from a specified collection of lists. Ensure that your function efficiently handles large datasets and returns a collection where each number appears only once across all lists.", "pass@10": true, "passes": 8}
{"task_id": 167, "prompt": "Write a python function to find the minimum power of 2 that is greater than or equal to n. Ensure your function efficiently handles very large values of n.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from a list of tuples. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 9}
{"task_id": 435, "prompt": "Create a Python function to determine the final digit of a specified number.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. A tetrahedral number is the sum of the first n triangular numbers, which represents the number of spheres in a pyramid with a triangular base.", "pass@10": true, "passes": 9}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. A perfect square is a number that can be expressed as the product of an integer by itself. In other words, a perfect square is the square of an integer. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": true, "passes": 8}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. Sorting a list involves arranging its elements in a specific order. This order can be either ascending or descending based on the requirements.", "pass@10": true, "passes": 8}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. Ensure the function is capable of processing lists with different data types like integers, strings, and floats.", "pass@10": true, "passes": 6}
{"task_id": 445, "prompt": "Write a function to conduct index-based multiplication of elements. Perform this operation for each pair of elements in the given two tuples.", "pass@10": true, "passes": 6}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. Assume that the month number is a positive integer between 1 and 12, inclusive. Consider edge cases where input values are at the boundaries of the specified range.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to flip bits of the number except for the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 9}
{"task_id": 782, "prompt": "Create a Python function that calculates the total of all subarrays with odd lengths. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Consider edge cases and optimize for time complexity where possible.", "pass@10": true, "passes": 10}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and only returns the ones that are odd. Ensure that the function is efficient in terms of time complexity.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Create a function to identify the n priciest items. You need to perform this identification within a specific dataset to ensure accuracy and relevance.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix. This sorting should be done in ascending order according to the sum of its rows.", "pass@10": true, "passes": 9}
{"task_id": 84, "prompt": "Write a function to find the nth number in the Newman Conway sequence. The sequence follows specific rules that govern how each term is calculated. To compute the sequence, start with the first two numbers as defined and then use a recursive pattern.", "pass@10": true, "passes": 3}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. Ensure that the list is not empty before performing the operations to avoid division by zero.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. Ensure that the function handles tuples of any length efficiently.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not. Ensure that the function efficiently handles various edge cases, such as empty strings or strings with leading or trailing spaces.", "pass@10": true, "passes": 10}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Make sure to consider scenarios with both positive and negative integers.", "pass@10": true, "passes": 10}
{"task_id": 140, "prompt": "Write a function to flatten the list of lists into a single set of numbers.", "pass@10": false, "passes": 0}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string. Consider how different types of characters like spaces, punctuation, and Unicode characters should be handled in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, returning the resulting list.", "pass@10": true, "passes": 9}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": true, "passes": 3}
{"task_id": 262, "prompt": "Write a function that takes in a list and an integer L and splits the list into two parts, then return the resulting lists in a tuple.", "pass@10": true, "passes": 5}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years. Consider any edge cases that might arise with unusual or unexpected input values.", "pass@10": true, "passes": 5}
{"task_id": 268, "prompt": "Develop a function to determine the n-th star number.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples. The function should be able to process each tuple individually and return a list containing the rear element of each tuple.", "pass@10": true, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Ensure that your solution efficiently handles large values of n.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Create a function that identifies the highest value in a specified heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number. Ensure your function handles edge cases such as negative numbers and zero appropriately.", "pass@10": true, "passes": 4}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure. Ensure your solution efficiently handles lists nested to any depth.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to determine the number of all binary sequences of length 2n for which the total of the first n bits equals the total of the last n bits.", "pass@10": false, "passes": 0}
{"task_id": 308, "prompt": "Craft a function to determine the specified number of maximum products by picking one element from each of two specified lists.", "pass@10": true, "passes": 9}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n. Ensure that your solution handles a variety of input sizes efficiently.", "pass@10": true, "passes": 5}
{"task_id": 415, "prompt": "Create a Python function to locate a pair with the largest product from a given list of integers.", "pass@10": true, "passes": 9}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Make sure to handle edge cases such as empty strings or lists.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": true, "passes": 2}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Make sure to account for edge cases like empty strings and non-alphabetic characters.", "pass@10": true, "passes": 10}
{"task_id": 604, "prompt": "Write a function to reverse words separated by spaces in a given string. Ensure to handle multiple spaces between words and leading or trailing spaces appropriately.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase. Your solution should handle both alphabetic and non-alphabetic characters gracefully.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers. Your function should efficiently handle lists of varying sizes and design constraints.", "pass@10": false, "passes": 0}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers. Ensure that your function handles edge cases where the list may be empty or contain non-integer values.", "pass@10": true, "passes": 10}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple. Ensure the function handles edge cases where the coordinate is at the boundary of a grid.", "pass@10": true, "passes": 2}
{"task_id": 631, "prompt": "Define a function that swaps underscores with whitespaces and whitespaces with underscores in a provided string.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure your function handles edge cases such as empty lists or varying list lengths gracefully.", "pass@10": true, "passes": 10}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You need to carefully consider every possible sublist that can be formed from the given list. Make sure your function calculates the product for each sublist before adding to the sum. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 4}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Ensure your solution efficiently handles large values of n while maintaining accuracy.", "pass@10": true, "passes": 10}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/ Ensure your implementation efficiently handles cases where strings have significantly varying lengths.", "pass@10": true, "passes": 6}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. For example, [1, 3, 5, 7, 9, 11] is a min heap, but [1, 3, 10, 7, 9, 11] is not. Find the solution at: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": true, "passes": 1}
{"task_id": 765, "prompt": "Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/ Make sure to handle large inputs efficiently.", "pass@10": true, "passes": 10}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. The function should be efficient and handle large values of n gracefully.", "pass@10": true, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list, and the function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": true, "passes": 10}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary. Ensure to handle cases where the dictionary might contain non-numeric values gracefully.", "pass@10": true, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array. Ensure your solution handles both positive and negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string. Whitespaces can include spaces, tabs, and newline characters. These can appear throughout the string. The function should iterate through each character, identifying and skipping any that qualify as whitespace. Ultimately, the function returns the original string without these characters.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. Check each element of the tuples carefully to identify the presence of k. Ensure the function returns the correct result based on the presence or absence of k.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": true, "passes": 4}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists. Ensure that the sorting of strings is case-sensitive such that uppercase letters precede lowercase letters.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list. Ensure that your solution handles lists that contain negative numbers and zeros appropriately.", "pass@10": true, "passes": 9}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method. Make sure to handle edge cases where the input might be zero or a negative number. Consider adding input validation to ensure robustness of your function.", "pass@10": true, "passes": 5}
{"task_id": 72, "prompt": "Write a python function to check if the given number can be represented as the difference of two squared values. Ensure your solution efficiently handles both positive and negative integers.", "pass@10": true, "passes": 4}
{"task_id": 464, "prompt": "Write a function to check if all values are identical in a dictionary. Make sure the function receives a dictionary as its parameter, efficiently examining the values inside. The goal is to verify if every value in the dictionary matches each other exactly.", "pass@10": false, "passes": 0}
{"task_id": 79, "prompt": "Craft a Python function to verify if a word's length is odd or even. Your function should accept a single string as an input parameter and return a corresponding boolean value.", "pass@10": true, "passes": 6}
{"task_id": 89, "prompt": "Construct a function to identify the nearest smaller digit in relation to n.", "pass@10": true, "passes": 1}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Guarantee that each number in the subsequence is strictly larger than the one before it. You should consider edge cases such as arrays with all identical elements or very small arrays.", "pass@10": false, "passes": 0}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You need to carefully consider every possible sublist that can be formed from the given list. Ensure that you account for sublists of various lengths and positions, leaving none out of your calculations. Make sure your function calculates the product for each sublist before adding to the sum. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 6}
{"task_id": 572, "prompt": "Create a Python function to eliminate redundant numbers from a specified collection of lists, ensuring it efficiently handles large datasets and returns a collection where each number appears only once across all lists.", "pass@10": true, "passes": 7}
{"task_id": 307, "prompt": "Write a function to extract a specific column from a given tuple. This function should take a tuple and an index as its parameters. It is essential for the function to correctly interpret the parameters passed to it. The tuple represents the data, and the index specifies the column to be extracted. Then it should give back the elements of the tuple at the designated column index.", "pass@10": true, "passes": 2}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples in the list provided to you. This list will serve as the input to your function.", "pass@10": true, "passes": 1}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Visit https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ for guidance. Ensure that your implementation handles edge cases such as empty strings or invalid numbers gracefully.", "pass@10": true, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. Make sure that the function is capable of processing strings with different separators and numerous spaces.", "pass@10": true, "passes": 5}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the sequence. The sequence is specified and is provided in the patterns array. The patterns array contains the elements that form the sequence.", "pass@10": true, "passes": 7}
{"task_id": 170, "prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. A range is defined by two indices. It is important to specify the starting and ending index. Consider handling edge cases such as negative indices or indices that exceed the list bounds.", "pass@10": true, "passes": 5}
{"task_id": 725, "prompt": "Write a function to extract values from within quotation marks in the given string.", "pass@10": true, "passes": 9}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. Make sure your solution efficiently handles lists with large numbers of elements.", "pass@10": true, "passes": 8}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit. It is crucial to verify that the specified amount does not result in any gain. Verify also that there is no loss.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to conduct index-based multiplication of elements in the given two tuples. Ensure that the function handles tuples of different lengths by only processing up to the length of the shorter tuple.", "pass@10": true, "passes": 3}
{"task_id": 397, "prompt": "Write a function to determine the median of three numbers. The median is the middle value when the numbers are arranged in order, so sort them first if they are not given in order. Then, return the middle value as the median. Ensure your function handles any edge cases, such as when all numbers are equal.", "pass@10": true, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words in a string that have a length of at least 4 characters. A word is defined as a sequence of characters separated by spaces or punctuation. Words are considered to be at least four characters if their length is greater than or equal to four. Ensure your implementation efficiently handles strings of varied lengths and accurately processes multiple spaces or special characters between words.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary. In this dictionary, every list is converted to a tuple. The value of such tuple is the number of times it occurs in the original list. You need to make sure that you handle edge cases, such as when the input list is empty or contains no sublists.", "pass@10": true, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Make sure to handle edge cases. These occur where the list might be empty. Or k might be larger than the list size.", "pass@10": true, "passes": 7}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string. You have to make sure that the order of characters in the string remains unchanged. The characters should stay in their original sequence.", "pass@10": true, "passes": 10}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and only returns the ones that are odd, ensuring that the function is efficient in terms of time complexity.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Create a function that retrieves values found inside quotation marks. This means you will pinpoint the segment of text surrounded by a pair of quotation marks. From a string.", "pass@10": true, "passes": 9}
{"task_id": 299, "prompt": "Develop a function to compute the greatest total. Concentrate on the goal of obtaining this total value. Make sure to get it from the array of tuples.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Create a function that calculates the power of n for every number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the minimum power of 2 that is greater than or equal to n. Ensure your function is capable of handling large numbers efficiently. Make sure it can efficiently manage very large values of n.", "pass@10": true, "passes": 8}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list. Ensure that your solution handles lists that contain negative numbers and zeros appropriately. Consider edge cases where the list may be empty or contain only non-unique elements.", "pass@10": true, "passes": 2}
{"task_id": 435, "prompt": "Create a Python function to ascertain the last digit of a specified number.", "pass@10": true, "passes": 10}
{"task_id": 782, "prompt": "Create a Python function that calculates the total of all subarrays with odd lengths. Consider edge cases and optimize for time complexity where possible.", "pass@10": true, "passes": 8}
{"task_id": 566, "prompt": "Write a function that will calculate the sum of the digits of a non-negative integer. This function must evaluate each digit separately and bring them together to provide the sum.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Substrings are continuous sequences of characters within a string. A substring of a given string is any contiguous sequence of characters within the string.", "pass@10": true, "passes": 3}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence. The Newman Conway sequence is an integer sequence. It is defined recursively starting with P(1) = 1 and P(2) = 1, and for n > 2, P(n) = P(P(n - 1)) + P(n - P(n - 1)).", "pass@10": false, "passes": 0}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. Ensure to manage edge cases where n is negative or extremely large, as this may affect the program efficiency and output accuracy.", "pass@10": true, "passes": 3}
{"task_id": 88, "prompt": "Write a function to determine the frequency of every element in a list, returned as a dictionary. Ensure the function can handle input lists containing various data types such as integers, strings, and floats.", "pass@10": true, "passes": 2}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length. Ensure your function efficiently handles lists of varying sizes, especially large lists. Consider edge cases where multiple lists share the same maximum length and decide how your function should handle these scenarios.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that the function correctly handles lists containing negative numbers. Negative numbers should be joined in a manner that they retain their sign. They should not be converted to positive during the joining process.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n. Ensure that your solution efficiently handles large values of n.", "pass@10": true, "passes": 8}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. You need to iterate through each list in order to find the number of sublists. This can be done using a loop where you check each item. Ensure to handle empty lists gracefully in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Make certain that the function efficiently manages and deals with nested lists of different levels.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. Ensure your solution efficiently handles strings of varying lengths while maintaining the integrity of the original character casing. Aim for optimal performance, especially for longer strings.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to determine if a given number is divisible by 11 by implementing a logic to check for divisibility accurately.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Create a function to compute the difference between two lists by subtracting their elements one by one. Ensure your function handles lists of different lengths appropriately.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. Make sure to handle edge cases such as empty list or lists with zero values.", "pass@10": true, "passes": 7}
{"task_id": 274, "prompt": "Construct a Python function to accept a positive integer n and determine the sum of binomial coefficients located at even indices. Ensure that your solution efficiently handles large values of n.", "pass@10": true, "passes": 9}
{"task_id": 459, "prompt": "Craft a function to eliminate uppercase substrings from a specified string. Ensure your solution handles strings with mixed case characters efficiently.", "pass@10": true, "passes": 10}
{"task_id": 579, "prompt": "Write a function to find the dissimilar elements in the given two tuples. Ensure that the function efficiently handles tuples of varying lengths and data types.", "pass@10": true, "passes": 9}
{"task_id": 604, "prompt": "Create a function to reverse the words that are divided by spaces in the provided string. Ensure to handle multiple spaces between words and leading or trailing spaces appropriately.", "pass@10": true, "passes": 9}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": true, "passes": 10}
{"task_id": 309, "prompt": "Create a Python function that determines the larger of two values.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Create a Python function to locate a pair with the largest product from a given list of integers. Ensure that the function handles both positive and negative numbers effectively.", "pass@10": true, "passes": 8}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number. Ensure your function handles edge cases such as negative numbers and zero appropriately. Consider optimizing your function to run efficiently for large input values.", "pass@10": false, "passes": 0}
{"task_id": 294, "prompt": "Create a function that identifies the highest value from a specified heterogeneous list. A heterogeneous list consists of elements of different types, such as integers, strings, and floats.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Create a function to pinpoint the closest lesser digit in reference to n.", "pass@10": true, "passes": 4}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. Check each element of the tuples carefully to identify the presence of k, and ensure the function returns the correct result based on the presence or absence of k.", "pass@10": true, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. This list could have items of various data types. These types may include integers, floats, strings, or even sublists.", "pass@10": true, "passes": 9}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers. The function should be efficient and handle large values of n gracefully. Make sure to include error handling for invalid input values.", "pass@10": true, "passes": 9}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 9}
{"task_id": 255, "prompt": "Write a function that accepts a list and a length n. The function should produce all combinations (with repetition) involving the list's elements. It returns a list containing a tuple for each combo.", "pass@10": true, "passes": 5}
{"task_id": 389, "prompt": "Write a function. The function should be able to find the n'th lucas number. Ensure your function handles large inputs efficiently.", "pass@10": true, "passes": 8}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not. You need to determine if the numbers follow each other in sequence without any gaps. Each number should be exactly one more than the previous number if they are consecutive.", "pass@10": true, "passes": 1}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd. Consider the efficiency of your implementation for large input sizes.", "pass@10": true, "passes": 4}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Ensure that the function handles edge cases where the string consists of repeated patterns.", "pass@10": true, "passes": 9}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element. Consider optimizing your solution for time complexity if the array is large.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. Make sure your solution handles edge cases, such as very large or negative numbers, efficiently.", "pass@10": true, "passes": 9}
{"task_id": 58, "prompt": "Write a python function to determine if the two provided integers have differing signs or not.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Compose a Python method to determine the size of the most lengthy word.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty. You need to evaluate every dictionary within the list one by one. Make sure to ascertain if each one is empty or not.", "pass@10": true, "passes": 1}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list. Ensure that the function handles edge cases such as an empty list gracefully.", "pass@10": true, "passes": 8}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not. Consider edge cases where the tuple might be empty or contain just one element, and ensure your solution handles these scenarios effectively.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m. Ensure that your solution can handle large inputs efficiently.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function. The function should find the sum of even numbers at even positions of a list.", "pass@10": false, "passes": 0}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Ensure that your solution efficiently handles large values of n and k.", "pass@10": true, "passes": 7}
{"task_id": 293, "prompt": "Write a function to find the third side of a triangle. The triangle is a right angled triangle.", "pass@10": true, "passes": 4}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple. Consider edge cases where strings might be empty or contain special characters.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Create a function to obtain the element-by-element components and pairs from the provided two tuples.", "pass@10": true, "passes": 8}
{"task_id": 441, "prompt": "Write a function to determine the surface area of a cube with a specified size.", "pass@10": true, "passes": 9}
{"task_id": 460, "prompt": "Create a Python function that retrieves the initial item from every sublist.", "pass@10": true, "passes": 3}
{"task_id": 474, "prompt": "Write a function to replace characters. Use it to make alterations within a string, ensuring the specific changes are implemented effectively.", "pass@10": true, "passes": 9}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the list you are given. You need to ensure that the relative order of non-zero elements remains unchanged. The function should operate in-place without using extra space for another list. The objective is to maintain the order and shift all zeroes to the end.", "pass@10": false, "passes": 0}
{"task_id": 635, "prompt": "Write a function to sort the list that is provided. This list can contain numbers or strings.", "pass@10": true, "passes": 9}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Ensure that the function handles edge cases such as strings with multiple consecutive punctuation marks or whitespace.", "pass@10": true, "passes": 9}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex. Ensure that the function handles both uppercase and lowercase vowels appropriately.", "pass@10": true, "passes": 10}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. The months are given as numbers from 1 to 12. Each number corresponds to a different month in the calendar year.", "pass@10": true, "passes": 8}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list. Ensure your solution efficiently handles edge cases where the list might contain negative numbers or non-integer elements.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": true, "passes": 9}
{"task_id": 596, "prompt": "Create a function to determine the byte size of the specified tuple.", "pass@10": true, "passes": 9}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not. Consider edge cases where the number is negative or zero.", "pass@10": true, "passes": 6}
{"task_id": 445, "prompt": "Create a function to perform index-driven multiplication of components in the provided two tuples.", "pass@10": true, "passes": 7}
{"task_id": 307, "prompt": "Write a function to extract a specific column from a given tuple. This function should take a tuple and an index as its parameters. Then it should return the elements of the tuple at the specified column index. Ensure that the function handles cases where the index may be out of range gracefully.", "pass@10": true, "passes": 2}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the sequence. The sequence is specified clearly and defined precisely. It is provided in the patterns array. The patterns array contains the elements that form the sequence.", "pass@10": true, "passes": 9}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Make sure the function handles edge cases efficiently and returns accurate results.", "pass@10": true, "passes": 3}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list. Also, consider edge cases, such as when the list is empty or contains only one element.", "pass@10": true, "passes": 1}
{"task_id": 572, "prompt": "Construct a Python function to remove duplicate numbers from a given set of lists, making sure it processes large datasets effectively and provides a collection in which each number appears uniquely across all lists.", "pass@10": true, "passes": 4}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string. Ensure that your function can handle strings with various separators. It should also be able to process strings containing numerous spaces.", "pass@10": true, "passes": 4}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. Visit https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/ for guidance and ensure that your implementation handles edge cases such as empty strings or invalid numbers gracefully.", "pass@10": true, "passes": 8}
{"task_id": 753, "prompt": "Write a function to find minimum k records from a list of tuples. The list of tuples might contain multiple entries with numerical values. Your task is to identify and return the k smallest records from this list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 9}
{"task_id": 167, "prompt": "Write a python function to find the minimum power of 2 that is greater than or equal to n. Ensure your function is capable of handling large numbers efficiently. Make sure it can efficiently manage very large values of n. Consider edge cases such as when n is 0 or 1 to ensure robustness.", "pass@10": true, "passes": 9}
{"task_id": 255, "prompt": "Create a function that takes a list and a length n, and generates all possible combinations (with repetition) of the list's elements, returning a list that includes a tuple for each combination.", "pass@10": true, "passes": 8}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple, ensuring the function handles edge cases where the coordinate is at the boundary of a grid.", "pass@10": true, "passes": 1}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit. It is crucial to verify that the specified amount does not result in any gain. Ensuring that the amount does not lead to any kind of benefit is essential. Verify also that there is no loss.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values from within quotation marks in the given string.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number. You are asked to provide the nth bell number as the output by taking one argument, which is the integer value of n, and returning the corresponding bell number. Consider using memoization for efficient computation of larger values of n.", "pass@10": true, "passes": 5}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list. Ensure that your solution is capable of efficiently handling lists. It should be able to process lists with large numbers of elements.", "pass@10": true, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": true, "passes": 10}
{"task_id": 89, "prompt": "Craft a function to identify the nearest smaller numeral with respect to n.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Substrings are continuous sequences of characters within a string. A substring of a given string is any contiguous sequence of characters within the string. Consider edge cases like an empty string or a string with no digits to ensure the function handles all scenarios correctly.", "pass@10": false, "passes": 0}
{"task_id": 397, "prompt": "Write a function to determine the median of three numbers. The median is the middle value when the numbers are arranged in order, so sort them first if they are not given in order. Then, return the middle value as the median. Ensure your function handles any edge cases, such as when all numbers are equal. Consider the efficiency of your solution, especially regarding sorting operations.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Create a Python function that computes the last digit of a given number.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string. You have to make sure that the order of characters in the string remains unchanged. The characters should stay in their original sequence. Ensure your solution efficiently handles strings of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary, converting every list to a tuple with the value of such tuple being the number of times it occurs in the original list. You need to make sure that you handle edge cases, such as when the input list is empty or contains no sublists.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Develop a function to compute the greatest total by concentrating on the goal of obtaining this total value from the array of tuples.", "pass@10": true, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. For example, [1, 3, 5, 7, 9, 11] is a min heap, while [1, 3, 10, 7, 9, 11] is not. Find the solution at: https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": false, "passes": 0}
{"task_id": 623, "prompt": "Create a function that calculates the power of n for every number in a given list.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Write a function that will calculate the sum of the digits of a non-negative integer. This function should go through each digit separately and add them all together to return the total sum. Make sure to handle the input efficiently even if it is a large number.", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function to determine the greatest power of 2 that does not exceed n. Ensure that your solution handles a variety of input sizes efficiently.", "pass@10": true, "passes": 6}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer. Ensure that the function correctly handles lists containing negative numbers. Negative numbers should be joined in a manner that they retain their sign. They should not be converted to positive during the joining process. Pay attention to maintaining the integrity of each number's original order in the final result.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Ensure that your solution handles both positive and negative numbers correctly. Your implementation should also efficiently handle very large numbers. Additionally, consider edge cases such as zero or single-digit numbers in your solution.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Write a python function that will count the number of digits in a given string. It's important to ensure your function can accurately identify digits within the string.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. Always ensure that the list is not empty. This check is important as it helps to avoid division by zero.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. Ensure your solution efficiently handles strings of varying lengths while maintaining optimal performance, especially for longer strings.", "pass@10": true, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Ensure the function efficiently handles and processes nested lists of varying levels.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Make sure to account for edge cases like empty strings and non-alphabetic characters. Additionally, ensure the function maintains efficiency for longer strings.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Create a function that identifies the highest value from a specified heterogeneous list. A heterogeneous list is made up of elements of various types, such as integers, strings, and floats.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Create a function to identify the n priciest items. You need to perform this identification within a specific dataset to ensure accuracy and relevance. Consider edge cases where the dataset may contain less than n unique items, and handle such scenarios appropriately.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers. The function should be efficient and handle large values of n seamlessly.", "pass@10": true, "passes": 4}
{"task_id": 429, "prompt": "Create a function to obtain the element-by-element components from the provided two tuples. Extract the pairs from the tuples in a sequential manner.", "pass@10": true, "passes": 6}
{"task_id": 735, "prompt": "Write a python function to flip bits of the number except for the first and the last bit. Pay close attention to edge cases such as very small or large numbers, and ensure your code handles these correctly. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Create a Python function to locate a pair with the largest product from a given list of integers. Ensure that the function handles both positive and negative numbers effectively. Consider edge cases such as lists with fewer than two elements.", "pass@10": true, "passes": 7}
{"task_id": 410, "prompt": "Develop a function to locate the smallest value in a provided heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd, considering the efficiency of your implementation for large input sizes.", "pass@10": true, "passes": 5}
{"task_id": 79, "prompt": "Create a Python function to check whether a word's length is odd or even. Your function should accept a single string as an input parameter and return an appropriate boolean value.", "pass@10": true, "passes": 3}
{"task_id": 472, "prompt": "Write a python function to check if the given list has numbers that are consecutive. It should determine whether the numbers follow each other without any gaps.", "pass@10": true, "passes": 2}
{"task_id": 227, "prompt": "Develop a function to determine the minimum value of three numbers. Make sure your approach effectively manages special cases such as repeated values among the numbers.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to conduct index-based multiplication of elements present in the given two tuples. This function should take two tuples as its input arguments.", "pass@10": true, "passes": 6}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex. Ensure that the function handles both uppercase and lowercase vowels appropriately. The function should return a boolean value indicating whether the first character is a vowel.", "pass@10": false, "passes": 0}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": true, "passes": 10}
{"task_id": 172, "prompt": "Create a function to determine how often the sequence 'std' appears within a specified string. Ensure your solution efficiently handles large inputs.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list. Ensure that the function handles edge cases such as an empty list gracefully. Consider cases where multiple items have the same maximum frequency and decide how to handle such scenarios.", "pass@10": true, "passes": 9}
{"task_id": 257, "prompt": "Design a function that accepts two integers and outputs a tuple containing the second integer first, followed by the first integer. Ensure the function handles negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples. The function should be able to process each tuple individually and return a list containing the rear element of each tuple. Ensure that the function handles cases where tuples can be empty, and returns an empty list accordingly.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Compose a Python method to identify the size of the longest word.", "pass@10": true, "passes": 10}

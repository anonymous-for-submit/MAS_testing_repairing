{"task_id": 2, "prompt": "Write a function to find the shared elements from the given two lists.", "pass@10": 0, "passes": 9}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": 0, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not.", "pass@10": 0, "passes": 10}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string.", "pass@10": 0, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": 0, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character from the string.", "pass@10": 0, "passes": 6}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.", "pass@10": 0, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism.", "pass@10": 0, "passes": 10}
{"task_id": 16, "prompt": "Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.", "pass@10": 0, "passes": 4}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input.", "pass@10": 0, "passes": 10}
{"task_id": 18, "prompt": "Write a function to remove characters from the first string which are present in the second string.", "pass@10": 0, "passes": 10}
{"task_id": 19, "prompt": "Write a function to find whether a given array of integers contains any duplicate element.", "pass@10": 0, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": 0, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign or not.", "pass@10": 0, "passes": 10}
{"task_id": 59, "prompt": "Write a function to find the nth octagonal number.", "pass@10": 0, "passes": 8}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length.", "pass@10": 0, "passes": 6}
{"task_id": 62, "prompt": "Write a python function to find smallest number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference between available pairs in the given tuple list.", "pass@10": 0, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple.", "pass@10": 0, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements.", "pass@10": 0, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers.", "pass@10": 0, "passes": 10}
{"task_id": 68, "prompt": "Write a python function to check whether the given array is monotonic or not.", "pass@10": 0, "passes": 10}
{"task_id": 69, "prompt": "Write a function to check whether a list contains the given sublist or not.", "pass@10": 0, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not.", "pass@10": 0, "passes": 5}
{"task_id": 74, "prompt": "Write a function to check whether it follows the sequence given in the patterns array.", "pass@10": 0, "passes": 10}
{"task_id": 77, "prompt": "Write a python function to find whether a number is divisible by 11.", "pass@10": 0, "passes": 10}
{"task_id": 79, "prompt": "Write a python function to check whether the length of the word is odd or not.", "pass@10": 0, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number.", "pass@10": 0, "passes": 10}
{"task_id": 84, "prompt": "Write a function to find the nth number in the newman conway sequence.", "pass@10": 0, "passes": 9}
{"task_id": 86, "prompt": "Write a function to find nth centered hexagonal number.", "pass@10": 0, "passes": 9}
{"task_id": 88, "prompt": "Write a function to get the frequency of all the elements in a list, returned as a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number than n.", "pass@10": 0, "passes": 10}
{"task_id": 90, "prompt": "Write a python function to find the length of the longest word.", "pass@10": 0, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not.", "pass@10": 0, "passes": 10}
{"task_id": 93, "prompt": "Write a function to calculate the value of 'a' to the power 'b'.", "pass@10": 0, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.", "pass@10": 0, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to find the length of the smallest list in a list of lists.", "pass@10": 0, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors of a given integer.", "pass@10": 0, "passes": 10}
{"task_id": 97, "prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": 0, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer.", "pass@10": 0, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m).", "pass@10": 0, "passes": 8}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 108, "prompt": "Write a function to merge three lists into a single sorted list.", "pass@10": 0, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not.", "pass@10": 0, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not.", "pass@10": 0, "passes": 8}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 118, "prompt": "Write a function to convert a string to a list of strings split on the space character.", "pass@10": 0, "passes": 9}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.", "pass@10": 0, "passes": 10}
{"task_id": 125, "prompt": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": 0, "passes": 1}
{"task_id": 127, "prompt": "Write a function to multiply two integers.", "pass@10": 0, "passes": 10}
{"task_id": 128, "prompt": "Write a function to find words that are longer than n characters from a given list of words.", "pass@10": 0, "passes": 6}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": 0, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item with maximum frequency in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 131, "prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel).", "pass@10": 0, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string.", "pass@10": 0, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers.", "pass@10": 0, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 141, "prompt": "Write a function to sort a list of elements.", "pass@10": 0, "passes": 10}
{"task_id": 142, "prompt": "Write a function to count number items that are identical in the same position of three given lists.", "pass@10": 0, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array.", "pass@10": 0, "passes": 1}
{"task_id": 161, "prompt": "Write a function to remove all elements from a given list present in another list.", "pass@10": 0, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).", "pass@10": 0, "passes": 10}
{"task_id": 163, "prompt": "Write a function to calculate the area of a regular polygon given the length and number of its sides.", "pass@10": 0, "passes": 2}
{"task_id": 165, "prompt": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).", "pass@10": 0, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": 0, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n.", "pass@10": 0, "passes": 8}
{"task_id": 168, "prompt": "Write a function to count the number of occurrences of a number in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 171, "prompt": "Write a function to find the perimeter of a regular pentagon from the length of its sides.", "pass@10": 0, "passes": 10}
{"task_id": 222, "prompt": "Write a function to check if all the elements in tuple have same data type or not.", "pass@10": 0, "passes": 10}
{"task_id": 224, "prompt": "Write a python function to count the number of set bits (binary digits with value 1) in a given number.", "pass@10": 0, "passes": 10}
{"task_id": 226, "prompt": "Write a python function to remove the characters which have odd index values of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": 0, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": 0, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 237, "prompt": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.", "pass@10": 0, "passes": 3}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": 0, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.", "pass@10": 0, "passes": 10}
{"task_id": 240, "prompt": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.", "pass@10": 0, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to find the next perfect square greater than a given number.", "pass@10": 0, "passes": 1}
{"task_id": 246, "prompt": "Write a function for computing square roots using the babylonian method.", "pass@10": 0, "passes": 2}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": 0, "passes": 9}
{"task_id": 249, "prompt": "Write a function to find the intersection of two arrays.", "pass@10": 0, "passes": 1}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.", "pass@10": 0, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": 0, "passes": 10}
{"task_id": 252, "prompt": "Write a python function to convert complex numbers to polar coordinates.", "pass@10": 0, "passes": 10}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.", "pass@10": 0, "passes": 1}
{"task_id": 256, "prompt": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.", "pass@10": 0, "passes": 3}
{"task_id": 257, "prompt": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number.", "pass@10": 0, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": 0, "passes": 10}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number.", "pass@10": 0, "passes": 1}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.", "pass@10": 0, "passes": 4}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years.", "pass@10": 0, "passes": 9}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.", "pass@10": 0, "passes": 10}
{"task_id": 266, "prompt": "Write a function to find the lateral surface area of a cube given its side length.", "pass@10": 0, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number.", "pass@10": 0, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": 0, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to find the sum of even numbers at even positions of a list.", "pass@10": 0, "passes": 9}
{"task_id": 271, "prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.", "pass@10": 0, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.", "pass@10": 0, "passes": 10}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.", "pass@10": 0, "passes": 10}
{"task_id": 277, "prompt": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.", "pass@10": 0, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 279, "prompt": "Write a function to find the nth decagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": 0, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise.", "pass@10": 0, "passes": 10}
{"task_id": 283, "prompt": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": 0, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.", "pass@10": 0, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.", "pass@10": 0, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find quotient of two numbers (rounded down to the nearest integer).", "pass@10": 0, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle.", "pass@10": 0, "passes": 3}
{"task_id": 294, "prompt": "Write a function to find the maximum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 295, "prompt": "Write a function to return the sum of all divisors of a number.", "pass@10": 0, "passes": 10}
{"task_id": 296, "prompt": "Write a python function to count inversions in an array.", "pass@10": 0, "passes": 10}
{"task_id": 297, "prompt": "Write a function to flatten a given nested list structure.", "pass@10": 0, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.", "pass@10": 0, "passes": 6}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": 0, "passes": 6}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple.", "pass@10": 0, "passes": 2}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.", "pass@10": 0, "passes": 10}
{"task_id": 309, "prompt": "Write a python function to find the maximum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 311, "prompt": "Write a python function to set the left most unset bit.", "pass@10": 0, "passes": 1}
{"task_id": 388, "prompt": "Write a python function to find the highest power of 2 that is less than or equal to n.", "pass@10": 0, "passes": 6}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number.", "pass@10": 0, "passes": 10}
{"task_id": 390, "prompt": "Write a function to apply a given format string to all of the elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 391, "prompt": "Write a function to convert more than one list to nested dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).", "pass@10": 0, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list with maximum length.", "pass@10": 0, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates.", "pass@10": 0, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts and ends with the same character or not.", "pass@10": 0, "passes": 10}
{"task_id": 397, "prompt": "Write a function to find the median of three numbers.", "pass@10": 0, "passes": 10}
{"task_id": 398, "prompt": "Write a function to compute the sum of digits of each number of a given list.", "pass@10": 0, "passes": 1}
{"task_id": 399, "prompt": "Write a function to perform the mathematical bitwise xor operation across the given tuples.", "pass@10": 0, "passes": 10}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples in the given list.", "pass@10": 0, "passes": 10}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples.", "pass@10": 0, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers.", "pass@10": 0, "passes": 10}
{"task_id": 405, "prompt": "Write a function to check whether an element exists within a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list.", "pass@10": 0, "passes": 10}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list.", "pass@10": 0, "passes": 10}
{"task_id": 413, "prompt": "Write a function to extract the nth element from a given list of tuples.", "pass@10": 0, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": 0, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with highest product from a given array of integers.", "pass@10": 0, "passes": 9}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple.", "pass@10": 0, "passes": 8}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.", "pass@10": 0, "passes": 10}
{"task_id": 420, "prompt": "Write a python function to find the cube sum of first n even natural numbers.", "pass@10": 0, "passes": 7}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter.", "pass@10": 0, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": 0, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": 0, "passes": 5}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort.", "pass@10": 0, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples.", "pass@10": 0, "passes": 5}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium.", "pass@10": 0, "passes": 3}
{"task_id": 435, "prompt": "Write a python function to find the last digit of a given number.", "pass@10": 0, "passes": 9}
{"task_id": 439, "prompt": "Write a function to join a list of multiple integers into a single integer.", "pass@10": 0, "passes": 10}
{"task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "pass@10": 0, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication of tuple elements in the given two tuples.", "pass@10": 0, "passes": 10}
{"task_id": 446, "prompt": "Write a python function to count the occurence of all elements of list in a tuple.", "pass@10": 0, "passes": 2}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers.", "pass@10": 0, "passes": 5}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 451, "prompt": "Write a function to remove all whitespaces from the given string.", "pass@10": 0, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not.", "pass@10": 0, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values.", "pass@10": 0, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle.", "pass@10": 0, "passes": 10}
{"task_id": 459, "prompt": "Write a function to remove uppercase substrings from a given string.", "pass@10": 0, "passes": 9}
{"task_id": 460, "prompt": "Write a python function to get the first element of each sublist.", "pass@10": 0, "passes": 8}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": 0, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop empty items from a given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": 0, "passes": 7}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not.", "pass@10": 0, "passes": 8}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.", "pass@10": 0, "passes": 10}
{"task_id": 474, "prompt": "Write a function to replace characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value.", "pass@10": 0, "passes": 10}
{"task_id": 476, "prompt": "Write a python function to find the sum of the largest and smallest value in a given array.", "pass@10": 0, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": 0, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": 0, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number.", "pass@10": 0, "passes": 7}
{"task_id": 604, "prompt": "Write a function to reverse words seperated by spaces in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians.", "pass@10": 0, "passes": 10}
{"task_id": 607, "prompt": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.", "pass@10": 0, "passes": 10}
{"task_id": 608, "prompt": "Write a python function to find nth bell number.", "pass@10": 0, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": 0, "passes": 9}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo.", "pass@10": 0, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise.", "pass@10": 0, "passes": 10}
{"task_id": 619, "prompt": "Write a function to move all the numbers to the end of the given string.", "pass@10": 0, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list.", "pass@10": 0, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": 0, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers.", "pass@10": 0, "passes": 2}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers.", "pass@10": 0, "passes": 10}
{"task_id": 630, "prompt": "Write a function to extract all the adjacent coordinates of the given coordinate tuple.", "pass@10": 0, "passes": 6}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and vice versa in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 632, "prompt": "Write a python function to move all zeroes to the end of the given list.", "pass@10": 0, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers in the given list.", "pass@10": 0, "passes": 6}
{"task_id": 635, "prompt": "Write a function to sort the given list.", "pass@10": 0, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss", "pass@10": 0, "passes": 10}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": 0, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array upto a given position.", "pass@10": 0, "passes": 2}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": 0, "passes": 3}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": 0, "passes": 10}
{"task_id": 724, "prompt": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.", "pass@10": 0, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": 0, "passes": 10}
{"task_id": 726, "prompt": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.", "pass@10": 0, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].", "pass@10": 0, "passes": 10}
{"task_id": 730, "prompt": "Write a function to remove consecutive duplicates of a given list.", "pass@10": 0, "passes": 10}
{"task_id": 731, "prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h.", "pass@10": 0, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon.", "pass@10": 0, "passes": 10}
{"task_id": 733, "prompt": "Write a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": 0, "passes": 1}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": 0, "passes": 3}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": 0, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php", "pass@10": 0, "passes": 4}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex.", "pass@10": 0, "passes": 10}
{"task_id": 739, "prompt": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/", "pass@10": 0, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": 0, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": 0, "passes": 10}
{"task_id": 742, "prompt": "Write a function to caluclate the area of a tetrahedron.", "pass@10": 0, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value or not.", "pass@10": 0, "passes": 10}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": 0, "passes": 3}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/", "pass@10": 0, "passes": 10}
{"task_id": 749, "prompt": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/", "pass@10": 0, "passes": 9}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list.", "pass@10": 0, "passes": 10}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/", "pass@10": 0, "passes": 2}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": 0, "passes": 10}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": 0, "passes": 10}
{"task_id": 754, "prompt": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.", "pass@10": 0, "passes": 10}
{"task_id": 758, "prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.", "pass@10": 0, "passes": 10}
{"task_id": 759, "prompt": "Write a function to check whether a given string is a decimal number with a precision of 2.", "pass@10": 0, "passes": 1}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": 0, "passes": 8}
{"task_id": 762, "prompt": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.", "pass@10": 0, "passes": 8}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string.", "pass@10": 0, "passes": 10}
{"task_id": 766, "prompt": "Write a function to return a list of all pairs of consecutive items in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,", "pass@10": 0, "passes": 2}
{"task_id": 769, "prompt": "Write a python function to get the difference between two lists.", "pass@10": 0, "passes": 6}
{"task_id": 770, "prompt": "Write a python function to find the sum of fourth power of first n odd natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 772, "prompt": "Write a function to remove all the words with k length in the given string.", "pass@10": 0, "passes": 10}
{"task_id": 778, "prompt": "Write a function to pack consecutive duplicates of a given list elements into sublists.", "pass@10": 0, "passes": 10}
{"task_id": 779, "prompt": "Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.", "pass@10": 0, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": 0, "passes": 10}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": 0, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": 0, "passes": 9}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": 0, "passes": 6}
{"task_id": 788, "prompt": "Write a function to create a new tuple from the given string and list.", "pass@10": 0, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": 0, "passes": 10}
{"task_id": 794, "prompt": "Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.", "pass@10": 0, "passes": 1}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary.", "pass@10": 0, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to find the sum of an array.", "pass@10": 0, "passes": 10}
{"task_id": 799, "prompt": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.", "pass@10": 0, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": 0, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": 0, "passes": 9}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/", "pass@10": 0, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists whose sum of elements is the highest.", "pass@10": 0, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": 0, "passes": 10}
{"task_id": 809, "prompt": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.", "pass@10": 0, "passes": 10}
{"task_id": 554, "prompt": "Write a python function which takes a list of integers and only returns the odd ones.", "pass@10": 0, "passes": 9}
{"task_id": 555, "prompt": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs whose xor value is odd.", "pass@10": 0, "passes": 7}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string.", "pass@10": 0, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist in the given list.", "pass@10": 0, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists.", "pass@10": 0, "passes": 10}
{"task_id": 563, "prompt": "Write a function to extract values between quotation marks from a string.", "pass@10": 0, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters.", "pass@10": 0, "passes": 10}
{"task_id": 566, "prompt": "Write a function to get the sum of the digits of a non-negative integer.", "pass@10": 0, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": 0, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries.", "pass@10": 0, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": 0, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": 0, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 577, "prompt": "Write a python function to find the last digit in factorial of a given number.", "pass@10": 0, "passes": 10}
{"task_id": 578, "prompt": "Write a function to interleave 3 lists of the same length into a single flat list.", "pass@10": 0, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple.", "pass@10": 0, "passes": 2}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number.", "pass@10": 0, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset.", "pass@10": 0, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": 0, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": 0, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": 0, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to interchange the first and last elements in a list.", "pass@10": 0, "passes": 10}
{"task_id": 592, "prompt": "Write a python function to find the sum of the product of consecutive binomial co-efficients.", "pass@10": 0, "passes": 7}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple.", "pass@10": 0, "passes": 10}
{"task_id": 597, "prompt": "Write a function to find kth element from the given two sorted arrays.", "pass@10": 0, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": 0, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers.", "pass@10": 0, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": 0, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements. These elements should be present in both of the given lists.", "pass@10": true, "passes": 10}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order.", "pass@10": true, "passes": 9}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not. To determine if the two numbers differ at just one bit position, you can use the XOR operation. The XOR operation will yield a binary result where only the differing bit positions are marked with a 1.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. Ensure that the function can handle both positive and negative integers.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.", "pass@10": true, "passes": 9}
{"task_id": 11, "prompt": "Write a python function to remove first and last occurrence of a given character. You need to perform this operation on the string.", "pass@10": true, "passes": 3}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure your solution is efficient and uses appropriate data structures to handle edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 16, "prompt": "Write a function that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.", "pass@10": true, "passes": 8}
{"task_id": 18, "prompt": "Craft a function to eliminate characters from the initial string that exist in the secondary string.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not.", "pass@10": true, "passes": 8}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign. You need to determine if one integer is positive and the other is negative or vice versa.", "pass@10": true, "passes": 8}
{"task_id": 59, "prompt": "Create a function to determine the octagonal number at position n.", "pass@10": true, "passes": 10}
{"task_id": 61, "prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. Consider edge cases where the input string may be empty or contain non-digit characters.", "pass@10": false, "passes": 0}
{"task_id": 62, "prompt": "Write a python function to find the smallest number in a list. You are required to traverse through all the elements in the list to determine the smallest number. Make sure to handle any potential errors during the traversal.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference. You need to find the maximum difference between available pairs in the given tuple list.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. The function should handle lists of any length, including empty ones.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Write a function to flatten a list and sum all of its elements. Ensure the function handles nested lists of arbitrary depth efficiently.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Write a function to determine if a list includes the specified sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Write a function to sort a list of elements. The function should efficiently handle large lists and consider different data types when sorting.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not. Ensure that the function handles both positive and negative numbers appropriately.", "pass@10": true, "passes": 8}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the order specified in the patterns array.", "pass@10": true, "passes": 4}
{"task_id": 77, "prompt": "Create a Python function to determine if a number can be evenly divided by 11.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is an odd number.", "pass@10": true, "passes": 9}
{"task_id": 84, "prompt": "Create a function to determine the nth element in the Newman-Conway sequence.", "pass@10": true, "passes": 7}
{"task_id": 90, "prompt": "Construct a Python function aimed at determining the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present as a substring in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Create a function that computes the result of 'a' raised to the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors. Your task is to determine how many numbers evenly divide the given integer.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. Consider handling cases where the list might be empty, to prevent division by zero errors.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer. It should be returned as an integer and will represent the closest numeric palindrome greater than the given input.", "pass@10": true, "passes": 10}
{"task_id": 103, "prompt": "Write a function to find the Eulerian number a(n, m). Eulerian numbers are used in combinatorics to count permutations that have a certain number of ascents.", "pass@10": false, "passes": 0}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents a valid integer or not. The function should examine whether the string can be interpreted as a number without any errors.", "pass@10": true, "passes": 10}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not. Ensure that the function handles edge cases gracefully, such as when the list itself is empty.", "pass@10": true, "passes": 3}
{"task_id": 116, "prompt": "Write a function to convert a given tuple of positive integers into a single integer. Consider edge cases where the tuple might be empty or contain large integers.", "pass@10": true, "passes": 10}
{"task_id": 118, "prompt": "Write a function to convert a string to a list of strings split on the space character.", "pass@10": true, "passes": 5}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Ensure your solution handles edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 125, "prompt": "Write a function to find the maximum difference. The maximum difference is defined as the difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": true, "passes": 2}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure the function handles both positive and negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Create a method to determine terms that exceed n letters in length from a specified array of terms.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Write a function to find the item that appears most frequently in a given list. Your function should determine which item occurs the greatest number of times.", "pass@10": true, "passes": 3}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string. The function should take a tuple as input. It should then return a string that represents the tuple.", "pass@10": true, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers. Ensure your solution handles lists of varying lengths.", "pass@10": true, "passes": 10}
{"task_id": 135, "prompt": "Write a function to find the nth hexagonal number. The hexagonal numbers are figures such that the dots can form a hexagon. The sequence starts with 1, 6, 15, 28, and so on.", "pass@10": true, "passes": 9}
{"task_id": 142, "prompt": "Create a function to calculate the count of items that are the same at corresponding positions in three provided lists.", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array.", "pass@10": true, "passes": 1}
{"task_id": 161, "prompt": "Create a function that deletes all items from one list that are found in a second list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). You should ensure that the function handles negative and zero values of n appropriately.", "pass@10": true, "passes": 10}
{"task_id": 163, "prompt": "Write a function to compute the area of a regular polygon provided the length and number of its sides.", "pass@10": true, "passes": 1}
{"task_id": 165, "prompt": "Construct a function that calculates how many characters in a string exist at the identical position in the string as they do in the English alphabet, disregarding letter case.", "pass@10": true, "passes": 10}
{"task_id": 167, "prompt": "Write a python function to find the smallest power of 2 greater than or equal to n. Ensure that your function handles edge cases and large input values efficiently.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to count the occurrences of a number. You need to determine how frequently the number appears in a given list.", "pass@10": true, "passes": 10}
{"task_id": 171, "prompt": "Write a function to calculate the perimeter of a regular pentagon. You will need to use the given length of its sides.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Create a Python function to eliminate the characters at odd index positions from a specified string.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Write a function that accepts a list of tuples and produces a dictionary associating each distinct tuple with the count of its occurrences in the list.", "pass@10": true, "passes": 6}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 10}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n. Each element is a positive integer. Each element should be greater than or equal to twice the previous element but less than or equal to m.", "pass@10": true, "passes": 4}
{"task_id": 240, "prompt": "Compose a function that accepts two lists and substitutes the final element of the first list with the components of the second list.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Craft a function to calculate the entire quantity of characters present in a string.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots utilizing the babylonian method. The Babylonian method is also known as Heron's method. It is an ancient technique for finding square roots.", "pass@10": true, "passes": 10}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the given string.", "pass@10": true, "passes": 10}
{"task_id": 249, "prompt": "Create a function that identifies the common elements shared by two arrays.", "pass@10": false, "passes": 0}
{"task_id": 250, "prompt": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple. Ensure the function handles tuples of varying lengths efficiently.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.", "pass@10": true, "passes": 10}
{"task_id": 252, "prompt": "Craft a Python function that transforms complex numbers into polar coordinates.", "pass@10": true, "passes": 10}
{"task_id": 255, "prompt": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list. Your function should create a list with a tuple for each combination that is generated.", "pass@10": false, "passes": 0}
{"task_id": 256, "prompt": "Create a Python function that accepts a non-negative number and calculates the number of prime numbers that are smaller than this non-negative number.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers. The function should then return a tuple with the second number and then the first number.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Write a function to maximize the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 260, "prompt": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. The function should correctly calculate the nth newman\u2013shanks\u2013williams prime number. Implement the function efficiently to handle large values of n.", "pass@10": false, "passes": 0}
{"task_id": 261, "prompt": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples. Ensure that the function handles cases where division by zero might occur gracefully.", "pass@10": false, "passes": 0}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age in dog's years. Assume that the first two years of a dog's life are equivalent to 10.5 human years each, and each year following equates to 4 human years.", "pass@10": true, "passes": 10}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n, splitting the list for every nth element, and returning a list of the resulting lists.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers. Ensure the function handles cases where n is zero or negative gracefully.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. The star numbers form a sequence of centered figurate numbers. These numbers represent a centered hexagram (six-pointed star), such as the Star of David. The sequence starts with the value 1, and it proceeds with 13, 37, 73, and so on. In other words, the n-th star number can be calculated using a specific formula.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character. Provide examples in your code comments to illustrate how different inputs map to their corresponding ASCII values.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a Python function to calculate the sum of even numbers located at even indices in a list.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Ensure your implementation efficiently handles lists containing a large number of tuples.", "pass@10": true, "passes": 10}
{"task_id": 278, "prompt": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. You are given a tuple in which you need to locate an element. Your task is to determine how many elements are present before this specific element in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 279, "prompt": "Construct a function to locate the decagonal number at position n.", "pass@10": true, "passes": 10}
{"task_id": 281, "prompt": "Create a Python function to determine whether the items in a provided list are distinct or not.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Write a function to subtract two lists element-wise. Ensure that the lists are of the same length before performing the operation.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function that takes in an integer, then check whether the frequency of each digit in the integer is less than or equal to the digit itself.", "pass@10": true, "passes": 10}
{"task_id": 284, "prompt": "Write a function that takes in a list and element. It should accept a list as its first argument, and an element as its second argument. The task is to check whether all items in the list are equal to the given element.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Consider edge cases where n or k could be zero and handle them appropriately.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find the quotient of two numbers rounded down to the nearest integer.", "pass@10": true, "passes": 10}
{"task_id": 293, "prompt": "Write a function to find the third side of a right angled triangle. Ensure that your solution can handle both the calculation of the hypotenuse and the missing leg, given the other two sides.", "pass@10": false, "passes": 0}
{"task_id": 295, "prompt": "Create a function that returns the sum of all the divisors of a number.", "pass@10": true, "passes": 9}
{"task_id": 297, "prompt": "Write a function to transform a specified nested list arrangement into a single-level list.", "pass@10": true, "passes": 10}
{"task_id": 299, "prompt": "Write a function to calculate the maximum aggregate from the list of tuples. Consider edge cases where the list may be empty or contain nested tuples.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n. It must ensure that the sum of the first n bits is the same as the sum of the last n bits.", "pass@10": true, "passes": 8}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 5}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple.", "pass@10": true, "passes": 3}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products. These products should be derived from two given lists. Selecting one factor from each list.", "pass@10": true, "passes": 10}
{"task_id": 389, "prompt": "Write a function to find the n'th lucas number. The function should handle large values of n efficiently.", "pass@10": true, "passes": 6}
{"task_id": 390, "prompt": "Create a function that applies a specified format string to every item within a list.", "pass@10": true, "passes": 8}
{"task_id": 392, "prompt": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Consider the case when n is 0 or a negative number and decide the behavior of your function accordingly.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list. The function should determine which list has the maximum length.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Create a function to determine if the provided tuple has no repeated elements.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts with the same character it ends with or not. Determine if the first character of the string matches its last character.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Write a function to determine the median among three numbers.", "pass@10": true, "passes": 10}
{"task_id": 398, "prompt": "Create a function that calculates the total of the digits for every number in a provided list.", "pass@10": false, "passes": 0}
{"task_id": 399, "prompt": "Draft a function to execute the bitwise XOR math operation on the provided tuples.", "pass@10": true, "passes": 10}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples. Ensure to check for each distinct tuple in the collection, and then calculate the total count of these unique entries accurately, in the given list.", "pass@10": true, "passes": 8}
{"task_id": 401, "prompt": "Write a function to perform index wise addition of tuple elements in the given two nested tuples. The function should take two nested tuples as input parameters. It should return a new tuple.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Write a python function to find the minimum of two numbers. Ensure that the function can handle both integers and floating-point numbers.\n", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Create a function to determine if an item is present in a tuple.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list. Ensure that your implementation efficiently handles lists of varying sizes and tuple contents without compromising performance.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function. The function should extract the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists in a sequence or not.", "pass@10": true, "passes": 10}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple. Ensure the function handles empty lists gracefully and returns an appropriate message or value.", "pass@10": true, "passes": 7}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers. After rounding the numbers, print the total sum multiplied by the length of the list.", "pass@10": true, "passes": 5}
{"task_id": 421, "prompt": "Write a function to concatenate each element of tuple by the delimiter. Ensure the function handles edge cases such as empty tuples or tuples with non-string elements gracefully.", "pass@10": true, "passes": 8}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes. You are required to calculate the cubes of the first n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 7}
{"task_id": 428, "prompt": "Write a function to sort the given array by using shell sort. Ensure your implementation efficiently handles arrays of varying sizes and elements.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples. Ensure the function handles tuples of different lengths gracefully.", "pass@10": true, "passes": 10}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium. Ensure to handle both integer and floating-point inputs accurately.", "pass@10": true, "passes": 2}
{"task_id": 435, "prompt": "Write a python function to determine the final digit of a specified number.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Create a function that combines a list of several integers into one single integer.", "pass@10": true, "passes": 9}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication. This multiplication should be done on the elements in the given two tuples.", "pass@10": true, "passes": 10}
{"task_id": 446, "prompt": "Write a python function to count the occurrence of all elements of list in a tuple. You need to ensure that each element in the list is checked for how many times it appears in the tuple. This requires iterating over the tuple and keeping a tally of occurrences.", "pass@10": false, "passes": 0}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list. Ensure your solution is efficient and handles large lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases such as empty lists and negative sizes gracefully.", "pass@10": true, "passes": 8}
{"task_id": 451, "prompt": "Develop a function to eliminate all spaces from the specified string.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Ensure that the list may contain empty strings and the function should handle them appropriately without errors.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure that the function handles both integer and floating-point number inputs for length and breadth.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Create a function that eliminates uppercase sequences from a specified string.", "pass@10": true, "passes": 8}
{"task_id": 460, "prompt": "Create a Python function to obtain the first item from each sublist.", "pass@10": true, "passes": 4}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given array.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 465, "prompt": "Write a function to drop items that are empty from a given dictionary. This means that any key-value pair should be removed if the value is considered empty.", "pass@10": true, "passes": 10}
{"task_id": 468, "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.", "pass@10": true, "passes": 5}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Make sure your implementation handles tuples of varying lengths efficiently.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not. Ensure that the function handles both ascending and descending order of numbers as consecutive.", "pass@10": true, "passes": 10}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Ensure the function can handle an empty list case gracefully.", "pass@10": true, "passes": 10}
{"task_id": 474, "prompt": "Write a function to replace characters in a string. You are given a string and a dictionary of characters to replace. The dictionary contains pairs of characters, where the key is the character to replace, and the value is the character to replace it with. Your function should iterate over the string, checking each character. If a character matches a key in the dictionary, replace it with the corresponding value from the dictionary. Finally, return the modified string.", "pass@10": false, "passes": 0}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value. Ensure that the function handles both ascending and descending order sorting based on a parameter.", "pass@10": true, "passes": 2}
{"task_id": 477, "prompt": "Create a Python function to change the specified string to lowercase.", "pass@10": true, "passes": 10}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string.", "pass@10": true, "passes": 9}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number. Consider edge cases where the input might be negative or zero.", "pass@10": true, "passes": 9}
{"task_id": 608, "prompt": "Create a Python function to determine the nth Bell number.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column.", "pass@10": true, "passes": 9}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. You should iterate over the lists simultaneously. For each pair of elements from the lists, divide the first element by the second.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Create a function that relocates all the numbers to the end of the specified string.", "pass@10": true, "passes": 10}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list. You need to ensure that the function takes two arguments. The first argument should be the list of numbers and the second argument should be the exponent n.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string to uppercase letters.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a list. The first element of the list will be swapped with the last one. This will result in the first element moving to the last position and the last element moving to the first.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers. Ensure that your solution efficiently handles large lists without excessive use of memory or time.", "pass@10": true, "passes": 1}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers. Even numbers are integers that are divisible by 2 without a remainder. These numbers include 0, 2, 4, and so on.", "pass@10": true, "passes": 7}
{"task_id": 630, "prompt": "Write a function to extract all the coordinates that are adjacent to the given coordinate tuple. These are coordinates that lie next to the provided coordinate.", "pass@10": false, "passes": 0}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore. This function should also replace underscores with whitespaces in a given string.", "pass@10": true, "passes": 7}
{"task_id": 632, "prompt": "Design a Python function that shifts all zero values to the list's end.", "pass@10": true, "passes": 10}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers. These pairs should be derived from the numbers in the given list.", "pass@10": true, "passes": 1}
{"task_id": 635, "prompt": "Create a function to arrange the provided list in order.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. Ensure your function handles both positive and negative values appropriately.", "pass@10": true, "passes": 10}
{"task_id": 644, "prompt": "Write a python function to reverse an array up to a given position. Make sure to efficiently handle edge cases like empty arrays or positions out of range.", "pass@10": true, "passes": 8}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Ensure that the function handles any data types within the dictionary.", "pass@10": true, "passes": 10}
{"task_id": 721, "prompt": "Given a square matrix of size N*N provided as a list of lists, where each cell is associated with a specific cost. A path is defined as a particular sequence of cells that begins from the top-left cell, moves only right or down, and concludes on the bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.", "pass@10": false, "passes": 0}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height above the minimum and weight above the minimum.", "pass@10": true, "passes": 3}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure that both lists are of the same length before performing the addition.", "pass@10": true, "passes": 10}
{"task_id": 730, "prompt": "Create a function that eliminates consecutive repeated elements from a specified list.", "pass@10": true, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Ensure your function handles consecutive occurrences of these characters effectively.", "pass@10": true, "passes": 2}
{"task_id": 733, "prompt": "Create a function to locate the index of the initial instance of a specified number in an ordered array.", "pass@10": true, "passes": 3}
{"task_id": 737, "prompt": "Write a function to check whether the given string is starting with a vowel or not using regex. Ensure that the function is case-insensitive.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/ Ensure your implementation handles tuples of any even length correctly.", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": true, "passes": 10}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value. The function should determine if there is a none value in the tuple.", "pass@10": true, "passes": 10}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. This task involves identifying the longest sequence of characters present in all three strings, preserving the order of appearance. You will need to address the task using dynamic programming or recursive methods.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Create a function that appends the specified tuple to the provided list.", "pass@10": true, "passes": 10}
{"task_id": 759, "prompt": "Write a function to determine if a specified string represents a decimal number with a precision of 2.", "pass@10": false, "passes": 0}
{"task_id": 760, "prompt": "Write a python function to check whether a list of numbers contains only one distinct element or not.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Write a python function to count number of digits in a given string. Ensure that your function efficiently handles large strings.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Create a function that outputs a list containing all the pairs of successive elements in a specified list.", "pass@10": true, "passes": 10}
{"task_id": 767, "prompt": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The function needs to be designed carefully to ensure it operates efficiently. It should be able to handle large lists without degrading in performance. The function gets as input a list of numbers and the sum.", "pass@10": false, "passes": 0}
{"task_id": 769, "prompt": "Write a python function to compute the difference between elements in two lists.", "pass@10": true, "passes": 4}
{"task_id": 772, "prompt": "Write a function to remove every word that has a length of k from the given string. You need to process each word and check its length.", "pass@10": true, "passes": 10}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. Access the problem details at https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. You can use the provided article as a reference and guide. The article will help you understand the conversion process and formula. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/", "pass@10": true, "passes": 8}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 1}
{"task_id": 788, "prompt": "Write a function to create a new tuple. The tuple should be formed using elements from the given string and list.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple. You need to iterate through each element in the tuple. For each element, check if it is a tuple itself. If it is a tuple, you should remove it. This function should work for a tuple containing any number of elements.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 794, "prompt": "Write a function that matches a string. The string should have an 'a' followed by anything, ending in 'b'.", "pass@10": false, "passes": 0}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary. This involves iterating through each key-value pair to accumulate the total. The function should handle both integer and float values.", "pass@10": true, "passes": 10}
{"task_id": 798, "prompt": "Write a python function to determine the total of an array.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Create a function that rotates the bits of a given number to the left by d bits. We assume that the number is 32 bit.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a given input string. This string may contain various types of whitespace characters, such as spaces, tabs, or newlines.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers from three given integers.", "pass@10": true, "passes": 5}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists. The list should have the sum of elements as the highest it can be.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to verify whether the specified tuples include the k or not.", "pass@10": true, "passes": 7}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and returns only the odd numbers from it.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs. Determine the pairs whose xor value is odd.", "pass@10": true, "passes": 9}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. Ensure the function handles both uppercase and lowercase characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist. It should calculate within the provided list.", "pass@10": true, "passes": 6}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Make sure to handle edge cases where the list might be empty or contain non-list elements.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to split a string into characters. Ensure the function handles empty strings gracefully without errors.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Create a function that calculates the total of the digits in a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not. Ensure that your function runs efficiently on large datasets.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries. Ensure that the function handles non-positive values of N by returning an empty list.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers. Remove these duplicate numbers from a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 573, "prompt": "Write a python function to calculate the product of the unique numbers. These numbers should be unique in a given list.", "pass@10": true, "passes": 8}
{"task_id": 577, "prompt": "Create a Python function to determine the final digit in the factorial of a specified number.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Create a function to merge 3 lists of equal length into one single flat list, alternating their elements.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple. Consider various edge cases and ensure your function handles complex nested structures.", "pass@10": true, "passes": 2}
{"task_id": 587, "prompt": "Write a function to convert a list. Use your implemented function to transform this list into a tuple.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to swap the first and last elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 592, "prompt": "Write a python function to compute the sum of the product of consecutive binomial co-efficients. The function should accurately calculate the sum. Be sure to handle edge cases if applicable.", "pass@10": true, "passes": 8}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple. Consider edge cases such as empty tuples and tuples with complex nested data structures.", "pass@10": true, "passes": 9}
{"task_id": 597, "prompt": "Write a function to find the kth element from the given two sorted arrays. The kth element refers to the element located at the k-th position when both arrays are merged together. Consider edge cases such as when k is larger than the total elements in both arrays combined.", "pass@10": true, "passes": 5}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even. You need to determine if the number is not odd.", "pass@10": true, "passes": 10}
{"task_id": 475, "prompt": "Write a function to sort a dictionary by value. Ensure that the function handles both ascending and descending order sorting based on a parameter. Your solution should account for cases where the dictionary values are of different data types, such as integers and strings, and handle sorting appropriately.", "pass@10": false, "passes": 0}
{"task_id": 130, "prompt": "Write a function to find the item that appears most frequently in a given list. Your function should determine which item occurs the greatest number of times. Ensure your solution handles ties appropriately and returns the item that appears first in such cases.", "pass@10": true, "passes": 10}
{"task_id": 732, "prompt": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Ensure your function handles consecutive occurrences of these characters effectively. The function should be able to manage consecutive instances in a seamless manner. This will guarantee that the substitutions do not leave redundant colons.", "pass@10": false, "passes": 0}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the order specified in the patterns array.", "pass@10": true, "passes": 7}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not. Ensure that the function handles edge cases gracefully, such as when the list itself is empty. Assume that the list contains only valid dictionary objects.", "pass@10": true, "passes": 1}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 2}
{"task_id": 597, "prompt": "Write a function to find the kth element from the given two sorted arrays. The kth element refers to the element located at the k-th position when both arrays are merged together. Consider edge cases such as when k is larger than the total elements in both arrays combined. Ensure that your solution efficiently handles large inputs with minimal time complexity.", "pass@10": true, "passes": 1}
{"task_id": 633, "prompt": "Write a python function to find the sum of xor of all pairs of numbers. These pairs should be derived from the numbers in the given list. Consider edge cases like when the list is empty or contains only one element.", "pass@10": false, "passes": 0}
{"task_id": 239, "prompt": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n. Each element is a positive integer. Each element should be greater than or equal to twice the previous element but less than or equal to m. Consider edge cases where m is less than 2, or n is 1, as these may impact the number of valid sequences.", "pass@10": true, "passes": 8}
{"task_id": 559, "prompt": "Write a function to find the sum of the largest contiguous sublist. It needs to compute within the given list.", "pass@10": true, "passes": 7}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers. After rounding each number, calculate the total sum of these rounded numbers. Once you have the total sum, print the result of this sum multiplied by the length of the list.", "pass@10": true, "passes": 4}
{"task_id": 808, "prompt": "Write a function to verify whether the specified tuples include the k. Ensure this function accurately determines the presence of k in the tuples. This verification is critical for the function to return the correct result.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and also replace underscores with whitespaces in a given string.", "pass@10": true, "passes": 7}
{"task_id": 421, "prompt": "Write a function to join together each component of tuple by the delimiter. Ensure the function handles edge cases such as empty tuples or tuples with non-string elements gracefully.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Write a python function to remove the initial and final occurrence of a specified character. You need to perform this operation on the string.", "pass@10": true, "passes": 3}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers. You need to check among the three given integers and count how many are the same.", "pass@10": true, "passes": 7}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases such as empty lists. It should also handle negative sizes gracefully.", "pass@10": true, "passes": 10}
{"task_id": 769, "prompt": "Write a python function to compute the difference between elements in two lists. Ensure that your solution is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 1}
{"task_id": 390, "prompt": "Create a function that applies a specified format string to every item within a list.", "pass@10": true, "passes": 10}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. A woodball number has certain characteristics that make it unique compared to other numbers.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Create a function to determine the nth element in the Newman-Conway sequence. Ensure your solution is efficient and handles large values of n gracefully.", "pass@10": true, "passes": 7}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples. Ensure to check for each tuple in the collection that is distinct from others. Then calculate the total count of these unique entries accurately, in the given list.", "pass@10": true, "passes": 7}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. You can use the provided article as a reference and guide. The article will help you understand the conversion process and formula. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Ensure that your function handles edge cases, such as when the RGB values are all the same, appropriately.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only or not. To find out if the two numbers differ by a single bit position, you can employ the XOR operation. The XOR operation will yield a binary result where only the differing bit positions are marked with a 1.", "pass@10": true, "passes": 10}
{"task_id": 627, "prompt": "Write a python function to find the smallest missing number from a sorted list of natural numbers. Ensure that your solution efficiently handles large lists without excessive use of memory or time.", "pass@10": false, "passes": 0}
{"task_id": 264, "prompt": "Write a function to calculate a dog's age. The goal is to convert this into an estimation of the dog's age in dog's years.", "pass@10": true, "passes": 5}
{"task_id": 439, "prompt": "Design a function that merges a list of numerous integers into a single integer.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is an odd number. You are given a word as input. Your task is to check the length of the given word. Determine if this length is an odd number.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Create a function that eliminates uppercase sequences. The specified string will be processed.", "pass@10": true, "passes": 9}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers. This list should be sorted before returning the result. The sorted list should be in descending order.", "pass@10": true, "passes": 9}
{"task_id": 568, "prompt": "Write a function to create a list. The list should contain N empty dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Write a function to find the size in bytes of the given tuple, considering edge cases such as empty tuples and tuples with complex nested data structures.", "pass@10": true, "passes": 6}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple. Ensure the function handles empty lists gracefully and returns an appropriate message or value. Consider edge cases such as lists with only one tuple or tuples that are empty.", "pass@10": true, "passes": 9}
{"task_id": 301, "prompt": "Create a function that determines the depth of a dictionary.", "pass@10": true, "passes": 7}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list.", "pass@10": true, "passes": 10}
{"task_id": 162, "prompt": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0), ensuring the function handles negative and zero values of n appropriately.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents a valid integer or not. The function should examine whether the string can be interpreted as a number without any errors. Ensure that no whitespace characters are included in the input string.", "pass@10": true, "passes": 10}
{"task_id": 608, "prompt": "Write a Python function that calculates the nth Bell number.", "pass@10": true, "passes": 8}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Make sure to handle edge cases properly. Consider scenarios where the list might be empty or contain non-list elements.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. Consider handling cases where the list might be empty. This is important to prevent division by zero errors.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not. Make sure that your function is able to handle large datasets efficiently. It should be designed to execute quickly and without unnecessary computations.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to break down a string into its individual characters. Ensure the function handles empty strings gracefully without errors.", "pass@10": true, "passes": 9}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Make sure your implementation handles tuples of varying lengths efficiently. Include error checking to handle cases where the input is an empty tuple.", "pass@10": true, "passes": 10}
{"task_id": 292, "prompt": "Write a python function to find the quotient of two numbers rounded down to the nearest integer.", "pass@10": true, "passes": 10}
{"task_id": 71, "prompt": "Create a function to arrange a list of elements in order. The function should efficiently handle large lists and consider different data types when sorting.", "pass@10": true, "passes": 9}
{"task_id": 788, "prompt": "Write a function to create a new tuple by forming it with elements from the given string and list.", "pass@10": true, "passes": 8}
{"task_id": 62, "prompt": "Write a python function to find the smallest number in a list. You are required to traverse through all the elements in the list to determine the smallest number and make sure to handle any potential errors during the traversal.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to find out the number of ways of painting the fence. The goal is to ensure that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Consider edge cases where n or k could be zero and handle them appropriately.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists. Determine if any value in a sequence is present in another sequence or not.", "pass@10": true, "passes": 10}
{"task_id": 766, "prompt": "Create a function that outputs a list containing all the pairs of successive elements in a specified list. Ensure the function handles lists with less than two elements appropriately.", "pass@10": true, "passes": 10}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array. The function should efficiently handle arrays that consist of both positive and negative numbers.", "pass@10": true, "passes": 1}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. A magic square is a grid where the sums of numbers in each row, each column, and the main diagonals are all the same. The numbers should usually be arranged in such a way that each row, each column, and both diagonals add up to the same total.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Write a function to transform a specified nested list arrangement into a single-level list. Ensure that the function handles lists of varying depths efficiently.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Develop a function that takes in a list of tuples and generates a dictionary linking each unique tuple with the number of times it appears in the list.", "pass@10": true, "passes": 6}
{"task_id": 644, "prompt": "Create a Python function that can reverse an array up to a specified position. Ensure that you effectively deal with edge cases such as empty arrays or positions that fall outside the valid range.", "pass@10": true, "passes": 5}
{"task_id": 798, "prompt": "Write a python function to determine the total of an array. The function should take in an array as an input. It will then iterate over each element to calculate the sum.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Create a function to compute the total number of characters contained within a string.", "pass@10": true, "passes": 10}
{"task_id": 90, "prompt": "Construct a Python function aimed at determining the length of the longest word.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Create a function to determine if a sublist is present within a list.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists with the sum of elements as the highest it can be.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that accepts a list of tuples and outputs a list with the last element of each tuple. Ensure your implementation efficiently handles lists containing a large number of tuples.", "pass@10": true, "passes": 10}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and returns the odd numbers exclusively.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Create a Python function to determine if 11 can evenly divide a number.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure your solution is efficient and uses appropriate data structures to handle edge cases effectively. Remember to consider matrices of varying sizes, including those with empty rows.", "pass@10": true, "passes": 9}
{"task_id": 624, "prompt": "Create a Python function that transforms a specified string to uppercase letters. Ensure that the function handles edge cases such as empty strings and non-alphabetic characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Develop a function to eliminate all spaces from the specified string. Ensure your solution handles strings with varying amounts and types of whitespace effectively.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple. Consider various edge cases and ensure your function handles complex nested structures. Consider providing detailed comments in your code to explain your logic and approach.", "pass@10": true, "passes": 1}
{"task_id": 591, "prompt": "Write a python function to swap the first and last elements in a list. You need to define a function. This function should take a list as its parameter.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to remove duplicate numbers from a given number of lists.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Create a function that moves all the numbers to the end of the specified string.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Write a python function to calculate the quantity of digits in a specified string. Ensure that your function efficiently handles large strings.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values, ensuring that the list may contain empty strings and the function should handle them appropriately without errors.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Create a function to determine if an item is present in a tuple. Be sure to consider edge cases, such as an empty tuple or the presence of duplicate items.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Create a Python function to find the last numeral of a given number.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Construct a function that turns a tuple into a string.", "pass@10": true, "passes": 10}
{"task_id": 247, "prompt": "Write a function to find the length of the longest palindromic subsequence in the string that is provided. A palindromic subsequence is a sequence that reads the same forward and backward.", "pass@10": true, "passes": 7}
{"task_id": 744, "prompt": "Write a function to check if the given tuple has any none value. The function should determine if there is a none value in the tuple. It should be able to identify the absence of a value and return an appropriate result. The presence of none values should be carefully assessed.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter odd numbers.", "pass@10": true, "passes": 6}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple. Please ensure that the function handles tuples of varying lengths and data types efficiently.", "pass@10": true, "passes": 1}
{"task_id": 760, "prompt": "Write a python function to check if a list of numbers contains only one distinct element. You should verify if all elements in the list are the same. Determine if there is only one unique number present in the list.", "pass@10": true, "passes": 7}
{"task_id": 161, "prompt": "Develop a function that removes every element from the first list that also appears in the second list.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Create a Python function to eliminate the characters at odd index positions from a specified string. Ensure that the function handles both uppercase and lowercase characters effectively.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to determine the largest sum attainable by utilizing the specified formula f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Reflect on the scenario when n is 0 or negative, and determine how your function should act in these situations.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors. Your task is to figure out how many numbers divide the given integer without leaving a remainder.", "pass@10": true, "passes": 10}
{"task_id": 128, "prompt": "Create a method to determine terms that exceed n letters in length from a specified array of terms. Ensure the method is efficient and handles large arrays gracefully.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Compose a function that accepts two lists and substitutes the final element of the first list with the components of the second list.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Make certain your solution manages edge cases efficiently.", "pass@10": true, "passes": 10}
{"task_id": 265, "prompt": "Write a function that takes in a list and an integer n, splitting the list for every nth element, and returning a list of the resulting lists. Ensure that your solution handles edge cases such as when the list is empty or when n is larger than the length of the list.", "pass@10": false, "passes": 0}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a list. The initial element of the list will be exchanged with the final one. This will result in the first element moving to the last position and the last element moving to the first.", "pass@10": true, "passes": 10}
{"task_id": 270, "prompt": "Write a python function to calculate the total of even numbers located at even positions within a list.", "pass@10": true, "passes": 5}
{"task_id": 577, "prompt": "Develop a Python function to find the last digit in the factorial of a given number.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the list that is provided. This means you will be provided with a tuple and a list. Your task is to append the tuple to the list.", "pass@10": true, "passes": 10}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Ensure that your function handles matrices with varying row lengths gracefully.", "pass@10": true, "passes": 3}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list. Ensure that the function can handle both positive and negative integers. Consider optimizing the function for large lists to improve performance.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Write a function to extract the elementwise and tuples from the given two tuples, ensuring the function handles tuples of different lengths gracefully.", "pass@10": true, "passes": 7}
{"task_id": 477, "prompt": "Create a Python function to change the specified string to lowercase.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Write a function to determine the median among three numbers.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Write a function to sort a list of tuples using the second value of each tuple. The function should handle lists of any length, including empty ones. Ensure that the sorting maintains the order if two tuple elements have the same second value.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Ensure the function maintains the order of appearance when multiple items have the same value.", "pass@10": true, "passes": 3}
{"task_id": 127, "prompt": "Write a function to multiply two integers, ensuring the function handles both positive and negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products. These products should be derived from two given lists. You need to select one factor from each list carefully. Ensure that the selection maximizes the product of the two factors.", "pass@10": true, "passes": 10}
{"task_id": 267, "prompt": "Design a python function that receives an integer n and outputs the sum of the squares of the initial n odd natural numbers. Ensure the function handles cases where n is zero or negative gracefully.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Create a function that uses shell sort to organize the provided array. Make sure your solution efficiently manages arrays with different sizes and elements.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Develop a function to find the index of the first occurrence of a given number in a sorted array.", "pass@10": true, "passes": 2}
{"task_id": 65, "prompt": "Create a function to un-nest a list and add up all of its values. Ensure the function deals with nested lists of various levels effectively.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure that both lists are of the same length before performing the addition. Handle edge cases where the lists might be empty.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Write a function that takes in two numbers. The function should return a tuple with the second number first, followed by the first number.", "pass@10": true, "passes": 10}
{"task_id": 18, "prompt": "Develop a function to remove characters from the first string that occur in the second string.", "pass@10": true, "passes": 10}
{"task_id": 2, "prompt": "Write a function to find the shared elements. These elements should be present in both of the given lists. Ensure that the function returns a list containing the shared elements in sorted order.", "pass@10": false, "passes": 0}
{"task_id": 238, "prompt": "Write a python function to count the number of non-empty substrings of a given string.", "pass@10": true, "passes": 10}
{"task_id": 16, "prompt": "Write a function to that returns true if the input string contains sequences of lowercase letters. These sequences are joined with an underscore. and false otherwise.", "pass@10": true, "passes": 5}
{"task_id": 578, "prompt": "Create a function to merge 3 lists of equal length into one single flat list, alternating their elements.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists. Ensure that the sorting is done in alphabetical order.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even or not.", "pass@10": true, "passes": 10}
{"task_id": 396, "prompt": "Write a function to check whether the given string starts with the same character it ends with or not. Determine if the first character of the string matches its last character. You need to compare the very first character of the string with the one at the very end. Check if these two characters are exactly the same.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Write a function that extracts the nth element from a given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Write a function to check if the provided string begins with a vowel or not using regex. Ensure that the function is case-insensitive.", "pass@10": true, "passes": 10}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. Find the count of divisors of a given integer and determine if it is even or not. Access the problem details at https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present. Determine if it is a substring in a given list of string values.", "pass@10": true, "passes": 10}
{"task_id": 796, "prompt": "Write function to find the sum of all items in the given dictionary. This involves iterating through each key-value pair to accumulate the total. The function should handle both integer and float values. Ensure that the function gracefully handles dictionaries containing non-numeric values by skipping them during the summation process.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Write a function to check if given tuple contains no duplicates. Ensure that your solution has optimal time complexity to handle large datasets efficiently.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string. Make sure the function correctly processes both uppercase and lowercase characters.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Create a function that calculates the total of the digits in a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers. Make sure your solution manages lists of different sizes.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple. You must go through every item within the tuple. For each element, check if it is a tuple itself. If it is a tuple, you should remove it. This function should work for a tuple containing any number of elements.", "pass@10": true, "passes": 10}
{"task_id": 800, "prompt": "Write a function to remove all whitespaces from a string.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that receives a string and character, replaces blank spaces in the string with the character, and returns the string.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Draft a Python function to determine the smallest of two numbers. Ensure that the function can handle both integers and floating-point numbers.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Write a function to find the list. The function should determine which list has the maximum length. If there are multiple lists with the same maximum length, you may return any one of them.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given number of lists. Ensure your function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 587, "prompt": "Write a function to convert a list. Utilize the function you've created to change this list into a tuple.", "pass@10": true, "passes": 6}
{"task_id": 803, "prompt": "Write a function to check whether the given number is a perfect square or not. Ensure that your solution efficiently handles very large integers.", "pass@10": true, "passes": 10}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs. Determine the pairs. The pairs whose xor value is odd.", "pass@10": true, "passes": 6}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number, considering edge cases where the input might be negative or zero.", "pass@10": true, "passes": 10}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n, ensuring that the sum of the first n bits is the same as the sum of the last n bits.", "pass@10": true, "passes": 6}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique or not.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Use the link for more details: https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. Ensure your function handles both positive and negative values. Check both positive and negative values appropriately.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given list of integers. The array will contain both positive and negative numbers, and the goal is to find a contiguous subarray that has the largest product. Make sure to handle cases with both zero and negative elements correctly. Return the product of this maximum product subarray.", "pass@10": true, "passes": 10}
{"task_id": 632, "prompt": "Create a Python function that relocates all zero values to the end of the list.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Create a function that calculates the result of 'a' raised to the exponent 'b'. The computation involves taking the base 'a' and raising it to the power designated by the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 125, "prompt": "Write a function to find the maximum difference, defined as the difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": true, "passes": 1}
{"task_id": 399, "prompt": "Draft a function to execute the bitwise XOR math operation. Your function should operate on the provided tuples.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes. You need to compute the cubes of the initial n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not. An undulating number is a number with at least three digits. It alternates between two digits without any other numbers appearing.", "pass@10": true, "passes": 9}
{"task_id": 168, "prompt": "Write a function to count the occurrences of a number. You are required to find out how many times the given number is present. It is necessary to determine how frequently the number appears in a given list.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Create a Python function that accepts a non-negative number and calculates the number of prime numbers that are smaller than this non-negative number. Make sure to optimize the function for large inputs to ensure efficient calculations.", "pass@10": true, "passes": 10}
{"task_id": 409, "prompt": "Write a function to find the minimum product from the pairs of tuples within a given list. Ensure that your implementation efficiently handles lists of varying sizes and tuple contents without compromising performance. Consider edge cases such as empty lists or tuples containing zero.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not, ensuring that the function handles both ascending and descending order of numbers as consecutive.", "pass@10": true, "passes": 9}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers. Ensure your solution efficiently handles large ranges and returns results quickly.", "pass@10": true, "passes": 10}
{"task_id": 282, "prompt": "Create a function to deduct corresponding elements of two lists. Ensure that the lists are of the same length before performing the operation.", "pass@10": true, "passes": 10}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Ensure the function can handle an empty list case gracefully. Consider edge cases where tuples contain duplicated elements or varying data types.", "pass@10": true, "passes": 8}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. You should iterate over the lists simultaneously. Iterate over the elements in both lists at the same time. For each pair of elements from the lists, divide the first element by the second.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, which should be returned as an integer and will represent the closest numeric palindrome greater than the given input.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Write a function for computing square roots using an iterative approach that leverages the Babylonian method. The Babylonian method, also known as Heron's method, is an efficient way to compute square roots.", "pass@10": true, "passes": 9}
{"task_id": 799, "prompt": "Create a function that shifts the bits of a specified number to the left by d bits. We assume that the number is 32 bit.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary. Ensure your function handles any type of dictionary values without assuming specific data types.", "pass@10": true, "passes": 10}
{"task_id": 720, "prompt": "Write a function to add a dictionary to the tuple. The output should be a tuple. Ensure that the function handles any data types within the dictionary. Consider edge cases such as empty dictionaries or tuples in your implementation.", "pass@10": true, "passes": 10}
{"task_id": 259, "prompt": "Create a method to determine the maximum value between the provided two tuples.", "pass@10": true, "passes": 10}
{"task_id": 165, "prompt": "Construct a function that calculates how many characters in a string exist at the identical position in the string as they do in the English alphabet. This comparison should disregard letter case.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples.", "pass@10": true, "passes": 10}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Assume the input string is non-empty and consists only of lowercase letters.", "pass@10": true, "passes": 10}
{"task_id": 163, "prompt": "Write a function to compute the area of a regular polygon provided the length and number of its sides. Make sure to include input validation to handle any potential edge cases.", "pass@10": true, "passes": 1}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism is calculated based on its base area and height. You need to multiply the base area by the height of the prism. This will give you the volume of the prism.", "pass@10": true, "passes": 8}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Ensure your function handles a variety of input types and edge cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 67, "prompt": "Write a function to find the number of ways to partition a set of Bell numbers. Ensure your solution handles large inputs efficiently.", "pass@10": true, "passes": 10}
{"task_id": 80, "prompt": "Write a function to find the nth tetrahedral number. Ensure your solution handles edge cases appropriately, such as when n is zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 86, "prompt": "Write a function to discover the nth centered hexagonal number.", "pass@10": true, "passes": 5}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number. The number should be smaller than n.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple. The function should specifically focus on the tuple with the smallest second value.", "pass@10": true, "passes": 10}
{"task_id": 222, "prompt": "Write a function to verify whether all elements within a tuple share the same data type or not.", "pass@10": true, "passes": 10}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube. You are given the side length of the cube.", "pass@10": true, "passes": 10}
{"task_id": 244, "prompt": "Write a python function to determine the subsequent perfect square that is larger than a specified number.", "pass@10": true, "passes": 1}
{"task_id": 274, "prompt": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Ensure that the function handles large input values efficiently.", "pass@10": true, "passes": 8}
{"task_id": 277, "prompt": "Create a function that accepts a dictionary and a number n and sifts the dictionary to solely retain entries with values that are larger than or equal to n.", "pass@10": true, "passes": 10}
{"task_id": 294, "prompt": "Write a function to find the maximum value. You need to determine the maximum from a given heterogeneous list.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Create a Python function to modify the first bit from the left that is not set.", "pass@10": true, "passes": 7}
{"task_id": 388, "prompt": "Write a python function that takes a single integer input, n. The function needs to calculate the largest power of 2 which does not exceed the value of n.", "pass@10": true, "passes": 10}
{"task_id": 415, "prompt": "Write a python function to find a pair with the highest product from a given array of integers. Please ensure the function identifies the maximum possible product. Given an array of integers, this task is focused on finding such a pair.", "pass@10": true, "passes": 8}
{"task_id": 425, "prompt": "Write a function to count the number of sublists containing a particular element.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. The month number will be provided as an input to the function. Your task is to determine if the month corresponding to this number has 31 days.", "pass@10": true, "passes": 3}
{"task_id": 616, "prompt": "Write a function which takes two tuples of the same length and performs the element wise modulo. Make sure your function handles edge cases gracefully, such as tuples containing zeros or negative numbers.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": true, "passes": 10}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string. Ensure that your function handles cases with nested or escaped quotation marks appropriately.", "pass@10": true, "passes": 10}
{"task_id": 735, "prompt": "Write a python function to toggle bits of the number except the first and the last bit. For example, given the input number in binary format, ensure that all intermediate bits between the most significant and the least significant bit are flipped. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/", "pass@10": true, "passes": 10}
{"task_id": 736, "prompt": "Write a function to locate the left insertion point for a specified value in sorted order. Make sure to check all elements in the sorted sequence before determining where the insertion should happen. Consider the fact that the sequence is already sorted as it might affect the insertion point.", "pass@10": false, "passes": 0}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum to endnum where every number is divisible by every digit it contains. You need to implement a solution that continuously checks for divisibility by each digit present in the number. This requires careful attention to each digit to ensure the number meets the criteria. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 7}
{"task_id": 751, "prompt": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ Ensure that your solution handles edge cases effectively, such as empty arrays or arrays with only one element.", "pass@10": false, "passes": 0}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You need to ensure that the function efficiently searches through the tuple list to identify the smallest records in terms of value. This function should be capable of handling large datasets, thus it needs to be optimized for performance. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 7}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. You should ensure that your function is efficient in terms of both time and space complexity. Aim to optimize the algorithm to handle large inputs within a reasonable execution time. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 9}
{"task_id": 583, "prompt": "Write a function which returns nth catalan number. Ensure that the function handles edge cases such as negative input appropriately.", "pass@10": true, "passes": 10}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Write a function to find sum and average of first n natural numbers. Ensure that your function handles edge cases where n is zero or negative gracefully.", "pass@10": true, "passes": 10}
{"task_id": 597, "prompt": "Write a function to find the kth element from the given two sorted arrays. The kth element refers to the element located at the k-th position when both arrays are merged together, even if k is larger than the total elements in both arrays combined. Ensure that your solution efficiently handles large inputs with minimal time complexity.", "pass@10": true, "passes": 2}
{"task_id": 130, "prompt": "Create a function to identify the item that shows up most often in a provided list. Your function should determine which item occurs the greatest number of times. Ensure your solution handles ties appropriately and returns the item that appears first in such cases.", "pass@10": true, "passes": 6}
{"task_id": 115, "prompt": "Write a function to check whether all dictionaries in a list are empty or not. Ensure that the function handles edge cases gracefully, such as when the list itself is empty. Assume that the list contains only valid dictionary objects. Consider implementing efficient checks to maintain a low time complexity.", "pass@10": false, "passes": 0}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Ensure the function maintains the order of appearance when multiple items have the same value. Consider edge cases such as when n is larger than the list length or when the list is empty.", "pass@10": true, "passes": 6}
{"task_id": 74, "prompt": "Write a function to verify if it adheres to the order specified in the patterns array.", "pass@10": true, "passes": 6}
{"task_id": 786, "prompt": "Write a function to locate the right insertion point for a specified value in sorted order.", "pass@10": true, "passes": 1}
{"task_id": 769, "prompt": "Write a python function to calculate the difference between elements in two lists. Ensure that your solution is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 6}
{"task_id": 722, "prompt": "The input is given as a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, as well as minimal height and minimal weight. Write a function to filter students that have height and weight above the minimum.", "pass@10": true, "passes": 4}
{"task_id": 559, "prompt": "Write a function to calculate the sum of the most extensive contiguous sublist. It needs to compute within the given list.", "pass@10": true, "passes": 8}
{"task_id": 419, "prompt": "Write a function to round every number of a given list of numbers. After rounding each number, calculate the sum of all the numbers. This means you should take the rounded numbers. Add them together to get the total. Once you have the total sum, print the result of this sum multiplied by the length of the list.", "pass@10": true, "passes": 1}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not.", "pass@10": true, "passes": 7}
{"task_id": 587, "prompt": "Write a function to convert a list. Utilize the function you've created to change this list into a tuple. Be sure to consider any potential edge cases such as an empty list.", "pass@10": true, "passes": 8}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers, returned in descending order. Ensure that the original list is not modified during the process.", "pass@10": true, "passes": 10}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and also replace underscores with whitespaces in a given string.", "pass@10": true, "passes": 5}
{"task_id": 760, "prompt": "Write a python function to check if a list of numbers contains only one distinct element. You should verify whether each element is identical to one another. Confirm if they are all the same. Determine if there is only one unique number present in the list.", "pass@10": true, "passes": 6}
{"task_id": 247, "prompt": "Write a function to determine the length of the longest palindromic subsequence in the given string. A palindromic subsequence is a sequence that reads the same forward and backward.", "pass@10": true, "passes": 9}
{"task_id": 556, "prompt": "Write a python function to count the number of pairs. Identify the pairs. The pairs with an XOR result that's odd.", "pass@10": true, "passes": 2}
{"task_id": 608, "prompt": "Write a Python function that calculates the nth Bell number. The Bell numbers are a sequence of numbers that count the number of ways to partition a set. It's a famous sequence in combinatorial mathematics.", "pass@10": true, "passes": 3}
{"task_id": 801, "prompt": "Create a Python function that calculates how many identical numbers are present among three given integers.", "pass@10": true, "passes": 4}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples. You need to ensure that each tuple in the collection is distinct from others. Think of this as verifying the uniqueness of each tuple by comparing it with the rest in the collection. Then calculate the total count of these unique entries accurately, in the given list.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Create a method to retrieve the element by element values and pairs from the provided two tuples, guaranteeing the method manages tuples of varying lengths smoothly.", "pass@10": true, "passes": 2}
{"task_id": 11, "prompt": "Create a Python function to delete the first and last instance of a given character. You need to perform this operation on the string.", "pass@10": true, "passes": 5}
{"task_id": 421, "prompt": "Write a function to join together each component of tuple by the delimiter. Make sure that your implementation takes care of any unusual situations or exceptions that might occur. Ensure the function handles edge cases such as empty tuples or tuples with non-string elements gracefully.", "pass@10": true, "passes": 9}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases such as empty lists. It should also handle negative sizes gracefully. Make sure the function is optimized for performance when dealing with large lists.", "pass@10": true, "passes": 8}
{"task_id": 596, "prompt": "Create a function to determine the byte size of a provided tuple, taking into account special cases like empty tuples and those containing intricate nested data structures.", "pass@10": true, "passes": 5}
{"task_id": 753, "prompt": "Write a function to find minimum k records from tuple list. You can visit the following link for a verbatim copy of test cases: https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/. This resource will provide additional examples to help you understand the expected input and output of the function.", "pass@10": true, "passes": 6}
{"task_id": 788, "prompt": "Create a function that forms a new tuple using components from a specified string and list.", "pass@10": true, "passes": 9}
{"task_id": 20, "prompt": "Write a function to check if the given number is woodball or not. A woodball number has certain characteristics that make it unique compared to other numbers. Ensure your solution efficiently handles large input values.", "pass@10": true, "passes": 8}
{"task_id": 390, "prompt": "Create a function that applies a specified format string to every item within a list. The function should take two arguments: a list and a format string. It should iterate through each item in the list, applying the format string to each element.", "pass@10": true, "passes": 10}
{"task_id": 565, "prompt": "Write a python function to decompose a string into its separate characters. Ensure the function handles empty strings gracefully without errors.", "pass@10": true, "passes": 10}
{"task_id": 130, "prompt": "Create a function to identify the item that shows up most often in a provided list by determining which item occurs the greatest number of times. Ensure your solution handles ties appropriately and returns the item that appears first in such cases.", "pass@10": true, "passes": 10}
{"task_id": 84, "prompt": "Create a function to determine the nth element in the Newman-Conway sequence. Ensure your solution is efficient and handles large values of n gracefully. Think carefully about the base cases and how the sequence is defined recursively.", "pass@10": true, "passes": 5}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Ensure the function is designed in a way that it gracefully handles an empty list case. The function should not break or behave unexpectedly in such scenarios. Consider edge cases where tuples contain duplicated elements or varying data types.", "pass@10": true, "passes": 6}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers. Even numbers are whole numbers that can be divided by 2 with no remainder. These numbers include 0, 2, 4, and so on.", "pass@10": true, "passes": 3}
{"task_id": 118, "prompt": "Write a function to convert a string to a list of strings split on the space character. Make sure to handle cases with multiple spaces and trim any leading or trailing spaces in the input string.", "pass@10": false, "passes": 0}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n, ensuring that the sum of the first n bits is the same as the sum of the last n bits. Make sure your solution efficiently handles larger values of n.", "pass@10": true, "passes": 8}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. You can use the provided article as a reference and guide. The article will help you understand the conversion process and formula. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Ensure that your function handles edge cases, such as when the RGB values are all the same, appropriately. Test your function with a diverse range of RGB inputs to confirm its accuracy and robustness.", "pass@10": true, "passes": 8}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is an odd number. You are given a word as input, and your task is to check the length of the given word and determine if this length is an odd number.", "pass@10": true, "passes": 10}
{"task_id": 6, "prompt": "Write a python function to check whether the two numbers differ at one bit position only. You need to determine if the two numbers differ by just a single bit. Or not.", "pass@10": true, "passes": 10}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple. Consider various edge cases and ensure your function handles complex nested structures by providing detailed comments in your code to explain your logic and approach.", "pass@10": true, "passes": 2}
{"task_id": 447, "prompt": "Create a function to calculate the cube of each element in a list. Ensure your solution is efficient and handles large lists gracefully.", "pass@10": true, "passes": 10}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign. You need to determine if one integer is positive and the other is negative or vice versa. Consider edge cases where either or both integers are zero.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure your solution is efficient. Use appropriate data structures to handle edge cases effectively.", "pass@10": true, "passes": 10}
{"task_id": 113, "prompt": "Write a function to check if a string represents an integer or not. Ensure the function handles both positive and negative numbers correctly.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter numbers that are odd. These numbers are not even and have a remainder when divided by 2.", "pass@10": true, "passes": 10}
{"task_id": 439, "prompt": "Create a function that combines a list of several integers into one single integer. This list may contain multiple integers. The task is to merge all these numbers into one.", "pass@10": true, "passes": 9}
{"task_id": 162, "prompt": "Create a method to compute the total of (n - 2*i) starting from i=0 and going up to n // 2, such as n + (n-2) + (n-4)... (until n-x =< 0), making sure the method correctly processes negative and zero values of n.", "pass@10": true, "passes": 10}
{"task_id": 733, "prompt": "Develop a function to find the index of the first occurrence of a given number in a sorted array. Ensure the function handles edge cases such as an empty array or the number not being present in the array.", "pass@10": true, "passes": 6}
{"task_id": 145, "prompt": "Write a python function to find the maximum difference between any two elements in a given array, efficiently handling arrays that consist of both positive and negative numbers.", "pass@10": false, "passes": 0}
{"task_id": 459, "prompt": "Develop a function that removes sequences of uppercase characters. The specified string will be processed.", "pass@10": true, "passes": 9}
{"task_id": 766, "prompt": "Create a function that outputs a list containing all the pairs of successive elements in a specified list, ensuring the function handles lists with less than two elements appropriately.", "pass@10": true, "passes": 10}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. A magic square is a grid where the sums of numbers in each row, each column, and the main diagonals are all the same. The numbers should usually be arranged in such a way that each row, each column, and both diagonals add up to the same total. Ensure that the function accurately checks these conditions to confirm the matrix's status as a magic square.", "pass@10": true, "passes": 10}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists. You need to determine if any value from one sequence can be found in another sequence. Check the presence of any value from the first sequence in the second sequence.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase.", "pass@10": true, "passes": 10}
{"task_id": 417, "prompt": "Write a function to find common first element in given list of tuple. Ensure the function handles empty lists gracefully and returns an appropriate message or value, considering edge cases such as lists with only one tuple or tuples that are empty.", "pass@10": true, "passes": 8}
{"task_id": 292, "prompt": "Write a python function to find the quotient of two numbers rounded down to the nearest integer.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list of N empty dictionaries. Ensure that the function handles non-positive values of N by returning an empty list. Consider testing the function with various inputs to verify its correctness.", "pass@10": true, "passes": 10}
{"task_id": 77, "prompt": "Create a Python function to determine if a number can be evenly divided by 11.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Make sure to handle edge cases properly. Consider scenarios where the list might be empty or contain non-list elements. Ensure that the function efficiently handles very large input lists without compromising performance.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Write a function to check whether a specified list is sorted or not.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Create a function to check if a list contains the given sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string. Ensure your function efficiently handles large strings without significant performance degradation.", "pass@10": true, "passes": 10}
{"task_id": 17, "prompt": "Write a function that returns the perimeter of a square given its side length as input. Ensure your function handles a variety of input types. The function should also handle edge cases gracefully.", "pass@10": true, "passes": 10}
{"task_id": 799, "prompt": "Create a function that shifts the bits of a specified number to the left by d bits. We assume that the number is 32 bit. Your implementation should handle negative values gracefully while performing the shift operation.", "pass@10": true, "passes": 10}
{"task_id": 301, "prompt": "Create a function capable of determining the depth of a dictionary. The function should traverse through each key-value pair. It should also handle nested dictionaries properly to calculate depth accurately.", "pass@10": true, "passes": 8}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and returns only the odd numbers from it. Ensure your solution has optimal time complexity.", "pass@10": true, "passes": 9}
{"task_id": 619, "prompt": "Create a function that moves all the numbers. The numbers should be moved to the end of the specified string.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Create a function to ascertain whether an element is in a tuple. Be sure to consider edge cases, such as an empty tuple or the presence of duplicate items.", "pass@10": true, "passes": 10}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. Consider handling cases where the list might be empty. This is important to prevent division by zero errors. Ensure the function can handle lists that contain non-integer values by ignoring them during the calculations.", "pass@10": true, "passes": 9}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism is calculated based on its base area and height. You need to multiply the base area by the height of the prism. This will give you the volume of the prism. Ensure that your solution is efficient and handles various input types effectively.", "pass@10": true, "passes": 7}
{"task_id": 125, "prompt": "Write a function to find the maximum difference, defined as the difference between the number of 0s and number of 1s in any sub-string of the given binary string.", "pass@10": true, "passes": 2}
{"task_id": 237, "prompt": "Create a function that accepts a list of tuples and returns a dictionary showing each unique tuple and how often it appears in the list.", "pass@10": true, "passes": 6}
{"task_id": 297, "prompt": "Write a function to transform a specified nested list arrangement into a single-level list, ensuring that the function handles lists of varying depths efficiently.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Write a function to convert a tuple to a string. The function should accept a tuple as its input. It should then return a string that represents the tuple.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Create a Python function to find the last numeral of a given number.", "pass@10": true, "passes": 10}
{"task_id": 62, "prompt": "Write a python function to find the smallest number in a list. You are required to traverse through all the elements in the list to determine the smallest number. Ensure you handle any potential errors during the traversal process as such errors might interrupt the search for the smallest number.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Create a function to un-nest a list and add up all of its values. Ensure the function deals with nested lists of various levels effectively. Optimize the function to handle large lists efficiently without running into maximum recursion depth errors.", "pass@10": true, "passes": 10}
{"task_id": 397, "prompt": "Write a function to determine the median among three numbers. Ensure that your function handles both integer and floating-point numbers accurately.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values, ensuring that the list may contain empty strings and the function should handle them appropriately without errors.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to determine the number of methods to paint the fence. The goal is to ensure that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Consider edge cases where n or k could be zero and handle them appropriately.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Write a python function to eliminate repeated numbers from a specified number of lists.", "pass@10": true, "passes": 10}
{"task_id": 805, "prompt": "Write a function that returns the list in a list of lists with the sum of elements as the highest it can be. Ensure that your function handles edge cases, such as empty sublists, appropriately.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes a list of tuples and returns a list containing the last item of each tuple. Confirm that your solution efficiently processes lists with a significant number of tuples.", "pass@10": true, "passes": 10}
{"task_id": 591, "prompt": "Write a python function to swap the first and last elements in a list. You need to declare a function. This function should take a list as its parameter.", "pass@10": true, "passes": 10}
{"task_id": 764, "prompt": "Write a python function to calculate the number of digits in a given string. Make sure your function efficiently processes large string inputs.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Write a function to add the given tuple to the given list. Ensure that the tuple is appended as a single element to the end of the list.", "pass@10": true, "passes": 3}
{"task_id": 226, "prompt": "Create a Python function to eliminate the characters at odd index positions from a specified string, ensuring that the function handles both uppercase and lowercase characters effectively.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function. You need to find the last digit in the factorial of a given number.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers.", "pass@10": true, "passes": 10}
{"task_id": 64, "prompt": "Create a function that sorts a list of tuples based on the second element of each tuple. The function should handle lists of any length, including empty ones. Ensure that the sorting maintains the order if two tuple elements have the same second value.", "pass@10": true, "passes": 10}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number, considering edge cases where the input might be negative or zero. Ensure the function handles large numbers efficiently.", "pass@10": true, "passes": 10}
{"task_id": 394, "prompt": "Create a function to determine if the provided tuple has no elements that are repeated. You need to ensure that each element in the tuple is unique.", "pass@10": true, "passes": 10}
{"task_id": 8, "prompt": "Write a function to find squares of individual elements in a list, ensuring that the function can handle both positive and negative integers.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Develop a function to identify the ascii value of a character. Give examples in your code comments to show how different inputs correspond to their respective ASCII values.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to determine the largest sum attainable by utilizing the specified formula f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Reflect on how your function should act when n is 0 or negative.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given list of integers. The array will contain both positive and negative numbers, and the goal is to find a contiguous subarray that has the largest product. Make sure to handle cases with both zero and negative elements correctly. Return the product of this maximum product subarray. Ensure that the solution is optimized to run in linear time.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Compose a function that accepts two lists and substitutes the final element of the first list with the components of the second list. Ensure that the original ordering of the elements in both lists is preserved.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Create a Python function that counts how many non-empty substrings exist in a specified string.", "pass@10": true, "passes": 10}
{"task_id": 120, "prompt": "Write a function to identify the maximum absolute product among numbers in pairs of tuples within a provided list. Make certain your solution manages edge cases efficiently.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Create a function that accepts a pair of numerals and gives back a tuple with the latter numeral first, followed by the former.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present. Verify if it is part of a substring within a specified list of string values.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes by computing the cubes of the initial n natural numbers.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Create a function to merge 3 lists of equal length into one single flat list. The function should alternate their elements.", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Write a python function to check whether all the characters are same or not. Ensure your function handles both uppercase and lowercase characters correctly.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given input. The input will contain multiple lists, and your task is to determine how many lists are present.", "pass@10": true, "passes": 10}
{"task_id": 246, "prompt": "Create a function to calculate square roots using the Babylonian method. The Babylonian method is also recognized as Heron's method. It is an old-fashioned technique for determining square roots.", "pass@10": true, "passes": 7}
{"task_id": 415, "prompt": "Write a python function to find a pair with the highest product from a given array of integers. Please make sure the function determines the peak achievable product. Given an array of integers, this task is focused on finding such a pair.", "pass@10": true, "passes": 8}
{"task_id": 299, "prompt": "Create a function that determines the highest sum from a list of tuples. Take into account unusual situations where the list might be devoid of tuples or have tuples within other tuples.", "pass@10": true, "passes": 9}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. Find the count of divisors of a given integer and determine if it is even or not by accessing the problem details at https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors. Your task is to figure out how many numbers divide the given integer. Ensure that the division occurs without leaving a remainder.", "pass@10": true, "passes": 10}
{"task_id": 740, "prompt": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. Visit the link for more details: https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/", "pass@10": true, "passes": 10}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure the function handles both positive and negative integers correctly. Consider optimizing for large integer values to improve computational efficiency.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Create a function that uses shell sort to organize the provided array. Ensure that your solution is efficient and can handle arrays with varying sizes. It should be able to manage arrays with different elements effectively.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Write a function to check whether the given amount has no profit and no loss. Ensure your function handles both positive and negative values. Be sure to handle positive values in your function. Handle negative values appropriately in your function.", "pass@10": true, "passes": 10}
{"task_id": 16, "prompt": "Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.", "pass@10": true, "passes": 8}
{"task_id": 737, "prompt": "Create a function to verify if the given string starts with a vowel, utilizing regex. Ensure that the function is case-insensitive.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that receives a string and character. The function should replace blank spaces in the string with the specified character. Then, it returns the modified string.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Create a function that selects the nth item from a specified list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to calculate the frequency of a number within a provided list.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Write a python function to check whether the given number is even by determining if the number is not odd.", "pass@10": true, "passes": 10}
{"task_id": 569, "prompt": "Write a function to sort each sublist of strings in a given list of lists. Ensure that the sorting is done in alphabetical order. Consider edge cases such as empty sublists or lists with varying cases.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Ensure that both lists are of the same length before performing the addition. Handle edge cases where the lists might be empty. Consider using list comprehensions and the zip function for a more Pythonic solution.", "pass@10": true, "passes": 10}
{"task_id": 308, "prompt": "Write a function to find the specified number of largest products. These products should originate from two provided lists. You need to select one factor from each list carefully. Ensure that the selection maximizes the product of the two factors.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Create a function that computes the sum of the digits in a non-negative integer.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of all characters in a string, ensuring the function correctly processes both uppercase and lowercase characters.", "pass@10": true, "passes": 10}
{"task_id": 281, "prompt": "Create a Python function to determine whether the items in a provided list are distinct or not. Ensure that your solution efficiently handles both small and large lists.", "pass@10": true, "passes": 10}
{"task_id": 93, "prompt": "Create a function that calculates the result of 'a' raised to the exponent 'b'. The calculation includes taking the base 'a' and elevating it to the power denoted by the exponent 'b'.", "pass@10": true, "passes": 10}
{"task_id": 791, "prompt": "Write a function to remove tuples from the given tuple. You are required to examine each item inside the tuple. For each element, check if it is a tuple itself. If it is a tuple, you should remove it. This function should work for a tuple containing any number of elements.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Create a function to identify the list. The function should ascertain which list possesses the greatest length. If several lists share the same maximum length, you can return any single one of them.", "pass@10": true, "passes": 10}
{"task_id": 133, "prompt": "Write a function to calculate the sum of the negative numbers of a given list of numbers. Make sure your solution can effectively manage lists of sizes that are small or large in length. Your approach should be scalable to different list sizes.", "pass@10": true, "passes": 10}
{"task_id": 597, "prompt": "Write a function to find the kth element from the given two sorted arrays. The kth element indicates the item situated at the k-th position after merging both arrays, even when k exceeds the total number of elements in both arrays. Ensure that your solution efficiently handles large inputs with minimal time complexity.", "pass@10": false, "passes": 0}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An armstrong number is a number that is equal to the sum of its own digits raised to the power of the number of digits. In other words, for a number to be an armstrong number, it must satisfy this condition.", "pass@10": true, "passes": 10}
{"task_id": 100, "prompt": "Write a function to find the next smallest palindrome of a specified integer, which should be returned as an integer representing the closest numeric palindrome greater than the given input.", "pass@10": true, "passes": 10}
{"task_id": 404, "prompt": "Draft a Python function to identify the lesser value between two numbers. Ensure that the function can handle both integers and floating-point numbers.", "pass@10": true, "passes": 10}
{"task_id": 399, "prompt": "Draft a function to execute the bitwise XOR math operation that should operate on the provided tuples.", "pass@10": true, "passes": 10}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary. Ensure your function handles any type of dictionary values without assuming specific data types. The function should return True if all dictionary values are identical; otherwise, it should return False.", "pass@10": true, "passes": 6}
{"task_id": 9, "prompt": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Assume the input string is non-empty and consists solely of lowercase letters.", "pass@10": true, "passes": 10}
{"task_id": 599, "prompt": "Develop a function to calculate the sum and average of the first n natural numbers. Make sure your function gracefully manages edge scenarios where n is zero or negative.", "pass@10": true, "passes": 10}
{"task_id": 256, "prompt": "Create a Python function that accepts a non-negative number and calculates the number of prime numbers that are smaller than this non-negative number, ensuring efficient calculations by optimizing the function for large inputs.", "pass@10": true, "passes": 10}
{"task_id": 472, "prompt": "Write a python function to check whether the given list contains consecutive numbers or not. Make sure that the function properly assesses both ascending and descending order of numbers. This will ensure that the numbers are identified as consecutive.", "pass@10": true, "passes": 10}
{"task_id": 618, "prompt": "Write a function to divide two lists element wise. You should iterate over the lists simultaneously. Iterate over the elements in both lists at the same time. For each pair of elements from the lists, divide the first element by the second. Ensure that a division by zero is handled appropriately.", "pass@10": true, "passes": 10}
{"task_id": 106, "prompt": "Write a function to append the given list to the given tuples. You need to take a list and a tuple as inputs for this function. The function should then combine them.", "pass@10": true, "passes": 10}
{"task_id": 251, "prompt": "Create a function that receives a list and a specified element and places the element in front of every item within the list, and then provides the modified list as a result.", "pass@10": true, "passes": 10}
{"task_id": 311, "prompt": "Create a Python function to change the first unset bit from the left.", "pass@10": true, "passes": 4}
{"task_id": 623, "prompt": "Write a function to compute the n-th power of each number in a list. You need to ensure that the function takes two arguments. The first argument should be the list of numbers and the second argument should be the exponent n. Make sure to handle edge cases such as empty lists or non-numeric elements within the list appropriately.", "pass@10": true, "passes": 10}
{"task_id": 268, "prompt": "Write a function to find the n'th star number. The star numbers form a sequence. It is a sequence of centered figurate numbers. These numbers represent a centered hexagram (six-pointed star), such as the Star of David. The sequence starts with the value 1, and it proceeds with 13, 37, 73, and so on. In other words, the n-th star number can be calculated using a specific formula.", "pass@10": true, "passes": 9}
{"task_id": 725, "prompt": "Write a function to extract values between quotation marks \" \" of the given string.", "pass@10": true, "passes": 10}
{"task_id": 641, "prompt": "Write a function to find the nth nonagonal number.", "pass@10": true, "passes": 8}
{"task_id": 745, "prompt": "Write a function to find numbers within a given range from startnum to endnum where every number is divisible by every digit it contains. You need to implement a solution that continuously checks for divisibility by each digit present in the number, which requires careful attention to each digit to ensure the number meets the criteria. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php", "pass@10": true, "passes": 10}
{"task_id": 388, "prompt": "Write a python function that takes a single integer input, n, and calculates the largest power of 2 which does not exceed the value of n.", "pass@10": true, "passes": 10}
{"task_id": 252, "prompt": "Craft a Python function that transforms complex numbers. The function should convert these numbers into polar coordinates.", "pass@10": true, "passes": 10}
{"task_id": 116, "prompt": "Develop a function to transform a provided tuple of positive integers into one consolidated integer. Consider edge cases where the tuple might be empty or contain large integers.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Create a function that appends the provided tuple to the specified list.", "pass@10": true, "passes": 10}
{"task_id": 74, "prompt": "Create a function to check if it follows the sequence outlined in the patterns array.", "pass@10": true, "passes": 8}
{"task_id": 747, "prompt": "Write a function to find the longest common subsequence for the given three string sequence. This task involves identifying the longest sequence of characters present in all three strings. The sequence must preserve the order of appearance. You will need to address the task using dynamic programming or recursive methods.", "pass@10": true, "passes": 10}
{"task_id": 279, "prompt": "Construct a function to find the decagonal number at the n-th position.", "pass@10": true, "passes": 9}
{"task_id": 284, "prompt": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. Ensure that your function handles empty lists correctly by returning a default value of your choice when the list has no elements.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Ensure that the function handles both integer and floating-point number inputs for length and breadth. Consider edge cases such as zero or negative inputs to ensure robustness.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not, ensuring that the function handles both positive and negative numbers appropriately.", "pass@10": true, "passes": 5}
{"task_id": 234, "prompt": "Write a function to find the volume of a cube. You are given the side length of the cube. Ensure that the side length is a positive number.", "pass@10": true, "passes": 10}
{"task_id": 445, "prompt": "Write a function to perform index wise multiplication. This multiplication should be done on the elements in the given two tuples. You need to multiply each pair of elements that are at the same index. The resulting products should form a new tuple.", "pass@10": true, "passes": 10}
{"task_id": 635, "prompt": "Create a function to arrange the provided list in order. Ensure that the function can handle both numeric and string data types efficiently.", "pass@10": true, "passes": 7}
{"task_id": 425, "prompt": "Write a function to count the number of sublists. A sublist is a part of the list that contains a selected element.", "pass@10": true, "passes": 10}
{"task_id": 142, "prompt": "Create a function to calculate the count of items that are the same at corresponding positions in three provided lists. You need to compare the elements from each list position by position. This means examining each element in all three lists one at a time but at the same index.", "pass@10": true, "passes": 10}
{"task_id": 94, "prompt": "Given a list of tuples, write a function that returns the first value of the tuple. The function should specifically focus on the tuple with the smallest second value. Ensure that your solution is optimized for performance even with larger lists.", "pass@10": true, "passes": 10}
{"task_id": 63, "prompt": "Write a function to find the maximum difference. Your task is to determine the largest difference between possible pairs in the provided list of tuples.", "pass@10": true, "passes": 4}
{"task_id": 89, "prompt": "Write a function to find the closest smaller number. The closest smaller number should be smaller than n. Ensure that it is strictly less than the given number.", "pass@10": true, "passes": 10}
{"task_id": 227, "prompt": "Write a function to find minimum of three numbers.", "pass@10": true, "passes": 10}
{"task_id": 232, "prompt": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Ensure the function maintains the order of appearance. This should be done when multiple items have the same value. Consider edge cases such as when n is larger than the list length or when the list is empty.", "pass@10": true, "passes": 3}
{"task_id": 588, "prompt": "Write a python function to find the difference between largest and smallest value in a given list. Ensure that the function handles empty lists appropriately by returning None.", "pass@10": true, "passes": 10}
{"task_id": 283, "prompt": "Write a python function that takes in an integer, then check whether the frequency of each digit in the integer is less than or equal to the digit itself. Consider edge cases such as large integers and negative numbers to ensure robust functionality.", "pass@10": true, "passes": 10}
{"task_id": 295, "prompt": "Create a function that returns the sum of all the divisors of a number. A divisor is a number that divides another number completely. It leaves no remainder.", "pass@10": true, "passes": 8}
{"task_id": 432, "prompt": "Write a function to find the median length of a trapezium and ensure to handle both integer and floating-point inputs accurately.", "pass@10": false, "passes": 0}
{"task_id": 478, "prompt": "Write a function to remove lowercase substrings from a given string. Ensure your solution handles edge cases such as empty strings or strings containing only lowercase characters.", "pass@10": true, "passes": 10}
{"task_id": 780, "prompt": "Write a function to find the combinations of sums with tuples in the given tuple list. You should make sure that your function is efficient regarding both time and space complexity. Aim to optimize the algorithm to handle large inputs within a reasonable execution time. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/", "pass@10": true, "passes": 8}
{"task_id": 608, "prompt": "Write a Python function that calculates the nth Bell number. The Bell numbers are a sequence of numbers that count the number of ways to partition a set. It's a famous sequence in combinatorial mathematics. Make sure your function handles edge cases gracefully, such as when the input is zero or a negative number.", "pass@10": false, "passes": 0}
{"task_id": 808, "prompt": "Write a function to check if the given tuples contain the k or not. Ensure your solution handles tuples of varying lengths efficiently.", "pass@10": true, "passes": 10}
{"task_id": 429, "prompt": "Create a method to retrieve the element by element values and pairs from the given two tuples, ensuring the method handles tuples of different sizes effectively.", "pass@10": true, "passes": 2}
{"task_id": 786, "prompt": "Write an algorithm to find the correct position to insert a given value such that the order remains maintained.", "pass@10": false, "passes": 0}
{"task_id": 7, "prompt": "Write a function to find all words which are at least 4 characters long in a string. Ensure the function handles punctuation correctly and provides only words without any leading or trailing punctuation.", "pass@10": true, "passes": 10}
{"task_id": 88, "prompt": "Create a function that calculates how often each element appears in a list and returns this information as a dictionary.", "pass@10": true, "passes": 10}
{"task_id": 95, "prompt": "Write a python function to determine the length of the shortest list within a list of lists.", "pass@10": true, "passes": 9}
{"task_id": 108, "prompt": "Compose a function to combine three lists into one ordered list.", "pass@10": true, "passes": 10}
{"task_id": 141, "prompt": "Create a function that arranges a list of items in order.", "pass@10": true, "passes": 10}
{"task_id": 166, "prompt": "Write a function that counts the number of pairs of integers in a list that xor to an even number.", "pass@10": true, "passes": 9}
{"task_id": 253, "prompt": "Write a python function that returns the number of integer elements in a given list. Make sure your function accurately counts all integer elements. The function should handle an empty list by returning zero.", "pass@10": true, "passes": 10}
{"task_id": 287, "prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers. You should ensure that your solution is efficient and handles large inputs gracefully.", "pass@10": true, "passes": 9}
{"task_id": 410, "prompt": "Write a function to find the minimum value in a given heterogeneous list. The heterogeneous list may contain elements of different data types. It can also include a mix of integers, floats, and even strings.", "pass@10": true, "passes": 10}
{"task_id": 424, "prompt": "Write a function to extract only the rear index element of each string in the given tuple. Make sure to handle empty strings appropriately to avoid indexing errors.", "pass@10": true, "passes": 10}
{"task_id": 448, "prompt": "Write a function to calculate the sum of perrin numbers. Ensure that the function handles large inputs efficiently to avoid performance issues.", "pass@10": true, "passes": 7}
{"task_id": 604, "prompt": "Write a function to reverse words divided by spaces in a given string.", "pass@10": true, "passes": 9}
{"task_id": 606, "prompt": "Write a function to convert degrees to radians. Make sure to handle potential input errors gracefully.", "pass@10": true, "passes": 10}
{"task_id": 734, "prompt": "Write a python function to find sum of products of all possible sublists of a given list. You need to consider all possible sublists that can be formed from the given list. A sublist can consist of any number of elements, starting from just one element up to the entire list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/", "pass@10": true, "passes": 2}
{"task_id": 742, "prompt": "Write a function to calculate the area of a tetrahedron. Be sure to consider edge cases and validate input parameters for robustness.", "pass@10": true, "passes": 10}
{"task_id": 752, "prompt": "Write a function to find the nth jacobsthal number. Refer to the following link for more information: https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...", "pass@10": true, "passes": 7}
{"task_id": 563, "prompt": "Write a function to extract values from a string. The values to be extracted are those situated between quotation marks.", "pass@10": true, "passes": 10}
{"task_id": 585, "prompt": "Write a function to find the n most expensive items in a given dataset. Make sure to handle cases where the list has fewer than n items gracefully.", "pass@10": true, "passes": 10}
{"task_id": 769, "prompt": "Create a Python function to find the difference between elements in a pair of lists. Ensure that your solution is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 2}
{"task_id": 753, "prompt": "Craft a function to locate the minimum k entries from a list of tuples. You need to ensure that the function efficiently searches through the tuple list to identify the smallest records in terms of value. This function should be capable of handling large datasets, thus it needs to be optimized for performance. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases", "pass@10": true, "passes": 8}
{"task_id": 611, "prompt": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Ensure that your function handles matrices with varying row lengths gracefully. Consider edge cases where the column might not be present in some rows.", "pass@10": false, "passes": 0}
{"task_id": 559, "prompt": "Write a function to calculate the sum of the most extensive contiguous sublist. The computation has to be restricted to the given list. You need to ensure that the calculation is performed in the context of the list provided.", "pass@10": true, "passes": 9}
{"task_id": 631, "prompt": "Write a function to replace whitespaces with an underscore and also replace underscores with whitespaces in a given string.", "pass@10": true, "passes": 8}
{"task_id": 760, "prompt": "Write a python function to check if a list of numbers contains only one distinct element. Verify whether each element is identical to one another. You need to ensure that every element is the same as the others. Confirm if they are all the same. Determine if there is only one unique number present in the list.", "pass@10": true, "passes": 4}
{"task_id": 450, "prompt": "Write a function to extract specified size of strings from a given list of string values. Ensure the function handles edge cases. This includes cases such as empty lists. It should also handle negative sizes gracefully. Make sure the function is optimized for performance when dealing with large lists.", "pass@10": true, "passes": 9}
{"task_id": 629, "prompt": "Write a python function to find even numbers from a list of numbers. Even numbers are whole numbers that can be divided by 2 with no remainder. These numbers include 0, 2, 4, and so on. Use efficient iteration techniques to optimize the search for even numbers.", "pass@10": true, "passes": 1}
{"task_id": 63, "prompt": "Write a function to find the maximum difference. Your job is to identify the greatest variance between potential pairs within the given list of tuples.", "pass@10": true, "passes": 10}
{"task_id": 455, "prompt": "Write a function to check whether the given month number contains 31 days or not. The month number will be provided as an input to the function. Your task is to determine if the month corresponding to this number has 31 days. Consider edge cases where the input could be invalid or outside the range of typical month numbers.", "pass@10": true, "passes": 2}
{"task_id": 84, "prompt": "Create a function to determine the nth element in the Newman-Conway sequence. Ensure your solution is efficient and handles large values of n gracefully. Think carefully about the base cases and how the sequence is defined recursively. Be sure to consider the time complexity of your solution.", "pass@10": true, "passes": 3}
{"task_id": 130, "prompt": "Create a function to determine the item that appears the highest number of times in a provided list by identifying which item occurs the greatest number of times. Ensure your solution handles ties appropriately and returns the item that appears first in such cases.", "pass@10": true, "passes": 10}
{"task_id": 473, "prompt": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Ensure the function is designed in a way that it gracefully handles an empty list case. The function should not break or behave unexpectedly in such scenarios. Consider edge cases where tuples contain duplicated elements or varying data types. Ensure the solution is optimized for performance when dealing with large datasets.", "pass@10": true, "passes": 8}
{"task_id": 4, "prompt": "Write a function to find the n largest integers from a given list of numbers. You must arrange the list in order before returning the result. The sorted list should be in descending order.", "pass@10": true, "passes": 6}
{"task_id": 587, "prompt": "Write a function to convert a list to a tuple.", "pass@10": true, "passes": 10}
{"task_id": 264, "prompt": "Create a function that determines a dog's age. The objective is to translate this into an approximation of the dog's age in canine years.", "pass@10": true, "passes": 2}
{"task_id": 464, "prompt": "Write a function to check if all values are same in a dictionary. Ensure your function handles any type of dictionary values without assuming specific data types. The function should return True if all dictionary values are identical; otherwise, it should return False. Consider edge cases such as empty dictionaries in your solution.", "pass@10": true, "passes": 1}
{"task_id": 246, "prompt": "Write a function for computing square roots using an iterative approach that leverages the Babylonian method. The Babylonian method, also known as Heron's method, is an efficient way to compute square roots. Ensure your solution includes mechanisms for handling edge cases and potential inaccuracies inherent in floating-point arithmetic.", "pass@10": true, "passes": 9}
{"task_id": 247, "prompt": "Write a function to determine the length of the longest palindromic subsequence in the given string. A palindromic subsequence is a sequence that reads the same forward. It also reads the same backward.", "pass@10": true, "passes": 10}
{"task_id": 11, "prompt": "Create a Python function to delete the first and last instance of a given character. You are required to execute this action upon the string.", "pass@10": true, "passes": 6}
{"task_id": 635, "prompt": "Create a function to organize the given list in order. Ensure that the function can handle both numeric and string data types efficiently.", "pass@10": true, "passes": 9}
{"task_id": 400, "prompt": "Write a function to extract the number of unique tuples in the given list.", "pass@10": true, "passes": 9}
{"task_id": 788, "prompt": "Create a function that forms a new tuple. The tuple should use components from a specified string and list.", "pass@10": true, "passes": 10}
{"task_id": 801, "prompt": "Write a python function to count the number of equal numbers. You should check among the three given integers first. Then, count how many are the same.", "pass@10": true, "passes": 9}
{"task_id": 113, "prompt": "Create a function that determines whether a string signifies an integer.", "pass@10": true, "passes": 10}
{"task_id": 421, "prompt": "Write a function to join together each component of tuple by the delimiter, ensuring the function handles edge cases such as empty tuples or tuples with non-string elements gracefully.", "pass@10": true, "passes": 10}
{"task_id": 554, "prompt": "Create a Python function that accepts a list of integers and returns the odd numbers exclusively. Ensure the function handles empty lists and returns an empty list when no odd numbers are found.", "pass@10": true, "passes": 9}
{"task_id": 98, "prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list.", "pass@10": true, "passes": 10}
{"task_id": 596, "prompt": "Create a function to determine the byte size of a provided tuple, taking into account special cases like empty tuples and those containing intricate nested data structures. Ensure your implementation can handle various data types within the tuple seamlessly.", "pass@10": true, "passes": 3}
{"task_id": 565, "prompt": "Write a python function to decompose a string into its separate characters. Ensure the function handles empty strings gracefully without errors. The function should be optimized for readability and maintainability.", "pass@10": true, "passes": 9}
{"task_id": 390, "prompt": "Create a function that applies a specified format string to every item within a list. The function should take two arguments: a list and a format string. The function should iterate through each item in the list. It should apply the format string to each element.", "pass@10": true, "passes": 10}
{"task_id": 783, "prompt": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Ensure that your function handles edge cases such as when the RGB values are at their minimum and maximum.", "pass@10": true, "passes": 9}
{"task_id": 417, "prompt": "Write a function to identify a shared initial component in provided tuples list. Ensure the function handles empty lists gracefully and returns an appropriate message or value, considering edge cases such as lists with only one tuple or tuples that are empty.", "pass@10": true, "passes": 5}
{"task_id": 232, "prompt": "Write a function that accepts a list and an integer n and returns a list containing the n largest items from the list.", "pass@10": true, "passes": 10}
{"task_id": 389, "prompt": "Write a function to determine the n'th lucas number. The function should efficiently handle large values of n.", "pass@10": true, "passes": 5}
{"task_id": 733, "prompt": "Develop a function to find the index of the first occurrence of a given number in a sorted array. Ensure the function handles edge cases such as an empty array or the number not being present in the array. Consider optimizing the function to work efficiently with large datasets.", "pass@10": true, "passes": 8}
{"task_id": 300, "prompt": "Write a function to find the count of all binary sequences of length 2n, ensuring that the sum of the first n bits is the same as the sum of the last n bits, and make sure your solution efficiently handles larger values of n.", "pass@10": true, "passes": 5}
{"task_id": 77, "prompt": "Create a Python function to determine if 11 can evenly divide a number. You will need to evaluate whether the number in question is a multiple of 11. Check if there is any remainder when the number is divided by 11, as this will determine divisibility.", "pass@10": true, "passes": 10}
{"task_id": 567, "prompt": "Develop a function to determine if a given list is in order or not.", "pass@10": true, "passes": 10}
{"task_id": 460, "prompt": "Create a Python function to obtain the first item from each sublist. Ensure your function is efficient and handles edge cases gracefully.", "pass@10": true, "passes": 8}
{"task_id": 580, "prompt": "Write a function to remove uneven elements in the nested mixed tuple. Consider various edge cases. Ensure your function handles complex nested structures by providing detailed comments in your code. Explain your logic and approach.", "pass@10": false, "passes": 0}
{"task_id": 242, "prompt": "Write a function to count the total number of characters in a string. Ensure your function efficiently handles strings that are large in size. It should be able to process these strings without significant performance degradation.", "pass@10": true, "passes": 10}
{"task_id": 12, "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Ensure your solution is efficient and uses appropriate data structures to handle edge cases effectively. Remember to consider matrices of varying sizes, including those with empty rows. Include comments in your code to explain key sections of your logic.", "pass@10": true, "passes": 10}
{"task_id": 447, "prompt": "Write a function to find cubes of individual elements in a list. Ensure that your function handles both positive and negative numbers correctly and returns a new list with the cubes of each original element.", "pass@10": true, "passes": 10}
{"task_id": 14, "prompt": "Write a python function to find the volume of a triangular prism. The volume of a triangular prism is determined from its base area and height. You need to multiply the base area by the height of the prism. This will give you the volume of the prism. Ensure that your solution is efficient and handles various input types effectively.", "pass@10": true, "passes": 5}
{"task_id": 799, "prompt": "Create a function that moves the bits of a specified number to the left by d bits. We assume that the number is 32 bit.", "pass@10": true, "passes": 10}
{"task_id": 72, "prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not. Consider edge cases where the number may be zero or negative.", "pass@10": true, "passes": 5}
{"task_id": 58, "prompt": "Write a python function to check whether the given two integers have opposite sign. It is necessary to ascertain if one integer is positive and the other is negative, or the reverse. Consider edge cases where either or both integers are zero.", "pass@10": true, "passes": 10}
{"task_id": 79, "prompt": "Create a Python function to determine if the word's length is an odd number. A word is provided as input, and your task is to verify the length of the provided word and determine if this length is an odd number.", "pass@10": true, "passes": 10}
{"task_id": 426, "prompt": "Write a function to filter numbers that are odd. These numbers are not even and have a remainder when divided by 2. Your solution should handle edge cases like empty lists and non-integer inputs gracefully.", "pass@10": true, "passes": 10}
{"task_id": 722, "prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, alongside minimal height and minimal weight. Write a function to filter students that have height above the minimum and weight above the minimum.", "pass@10": true, "passes": 1}
{"task_id": 292, "prompt": "Create a Python function that calculates the result of dividing two numbers, rounding it down to the closest whole number.", "pass@10": true, "passes": 10}
{"task_id": 307, "prompt": "Write a function to get a colon of a tuple. Ensure that the function efficiently handles tuples of varying lengths and data types.", "pass@10": true, "passes": 3}
{"task_id": 162, "prompt": "Create a method to compute the total of (n - 2*i) starting from i=0 and going up to n // 2, such as n + (n-2) + (n-4)... (until n-x =< 0), ensuring the method correctly processes negative and zero values of n.", "pass@10": true, "passes": 10}
{"task_id": 237, "prompt": "Create a function that takes in a list of tuples and returns a dictionary showing each unique tuple and how often it appears in the list.", "pass@10": true, "passes": 3}
{"task_id": 439, "prompt": "Write a function to merge a list of several integers into one integer.", "pass@10": true, "passes": 10}
{"task_id": 69, "prompt": "Write a function to determine if a list includes the specific sublist or not.", "pass@10": true, "passes": 10}
{"task_id": 459, "prompt": "Develop a function that removes sequences of uppercase characters. The specified string will be processed. Ensure that sequences contain at least two consecutive uppercase letters to be considered for removal.", "pass@10": false, "passes": 0}
{"task_id": 129, "prompt": "Write a function to calculate whether the matrix is a magic square. A magic square is a grid where the sums of numbers in each row, each column, and the main diagonals are all the same. The numbers should usually be arranged in such a way that each row, each column, and both diagonals add up to the same total. Ensure that the function accurately checks these conditions to confirm the matrix's status as a magic square. Consider edge cases such as matrices with negative numbers or matrices with elements that are not integers.", "pass@10": true, "passes": 10}
{"task_id": 769, "prompt": "Create a Python function to find the difference between elements in a pair of lists. You should ensure that your solution operates efficiently. It's important to handle edge cases gracefully in your implementation.", "pass@10": true, "passes": 2}
{"task_id": 414, "prompt": "Write a python function to check whether any value in a sequence exists. It is necessary to find out if any item from one sequence exists in another sequence. Check the presence of any value from the first sequence in the second sequence.", "pass@10": true, "passes": 10}
{"task_id": 624, "prompt": "Write a python function to convert a given string to uppercase. You should take a string as input for this function. The function should then transform the string completely to uppercase letters.", "pass@10": true, "passes": 10}
{"task_id": 74, "prompt": "Write a function to check if it complies with the sequence outlined in the patterns array.", "pass@10": true, "passes": 9}
{"task_id": 766, "prompt": "Create a function that outputs a list containing all the pairs of successive elements in a specified list. Make sure that the function processes the lists correctly, even those with less than two elements.", "pass@10": true, "passes": 10}
{"task_id": 792, "prompt": "Write a python function to count the number of lists in a given input. The input will contain multiple lists, and your task is to determine how many lists are present. Ensure your function is efficient and can handle nested structures if necessary.", "pass@10": true, "passes": 2}
{"task_id": 397, "prompt": "Write a function to identify the median among three numbers. Ensure that your function handles both integer and floating-point numbers accurately.", "pass@10": true, "passes": 10}
{"task_id": 741, "prompt": "Develop a Python function to determine if all the characters are identical or not.", "pass@10": true, "passes": 10}
{"task_id": 65, "prompt": "Create a function to un-nest a list and add up all of its values. Ensure the function deals with nested lists of various levels effectively. Optimize the function to handle large lists efficiently without running into maximum recursion depth errors. Consider edge cases such as empty lists or lists containing non-numeric data types.", "pass@10": true, "passes": 10}
{"task_id": 132, "prompt": "Create a function that transforms a tuple into a string.", "pass@10": true, "passes": 10}
{"task_id": 625, "prompt": "Write a python function to interchange the first and last element in a given list. Ensure that the list contains at least two elements to perform the interchange.", "pass@10": true, "passes": 10}
{"task_id": 750, "prompt": "Create a function that appends the provided tuple to the list given.", "pass@10": true, "passes": 10}
{"task_id": 568, "prompt": "Write a function to create a list. The function should take an integer N as a parameter, which represents the desired size of the list. The list should contain N empty dictionaries.", "pass@10": true, "passes": 10}
{"task_id": 619, "prompt": "Create a function that moves all the numbers to the end of the specified string.", "pass@10": true, "passes": 10}
{"task_id": 562, "prompt": "Write a python function to find the length of the longest sublists. Make sure to handle edge cases properly. Consider scenarios where the list might be empty or contain non-list elements. Ensure that the function efficiently handles very large input lists without compromising performance. Test your function with diverse input sets to verify its robustness and correctness.", "pass@10": true, "passes": 9}
{"task_id": 301, "prompt": "Write a function to find the depth of a dictionary.", "pass@10": true, "passes": 5}
{"task_id": 62, "prompt": "Write a python function to determine the minimum number in a list. You are required to traverse through all the elements in the list to determine the smallest number. Ensure you handle any potential errors during the traversal process as such errors might interrupt the search for the smallest number.", "pass@10": true, "passes": 10}
{"task_id": 577, "prompt": "Write a python function. You need to find the last digit in the factorial of a given number. Consider the mathematical properties and optimizations to efficiently solve the problem.", "pass@10": true, "passes": 8}
{"task_id": 591, "prompt": "Write a python function to swap the first and last elements in a list. You need to declare a function. This function should take a list as its parameter. Ensure that the original list is not modified; instead, a new list with the swapped elements should be returned.", "pass@10": true, "passes": 10}
{"task_id": 405, "prompt": "Create a function to ascertain whether an element is in a tuple, considering edge cases such as an empty tuple or the presence of duplicate items.", "pass@10": true, "passes": 10}
{"task_id": 435, "prompt": "Create a Python function to determine the final digit of a specified number.", "pass@10": true, "passes": 10}
{"task_id": 238, "prompt": "Create a Python function that counts how many non-empty substrings exist in a specified string.", "pass@10": true, "passes": 10}
{"task_id": 257, "prompt": "Create a function that accepts a pair of numerals. The function should give back a tuple with the latter numeral first, followed by the former.", "pass@10": true, "passes": 10}
{"task_id": 297, "prompt": "Write a function to transform a specified nested list arrangement into a single-level list, ensuring that the function handles lists of varying depths efficiently.", "pass@10": true, "passes": 10}
{"task_id": 456, "prompt": "Write a function to reverse each string in a given list of string values. Make sure to ensure that the list may contain empty strings. The function should handle them appropriately without errors.", "pass@10": true, "passes": 10}
{"task_id": 272, "prompt": "Write a function that takes a list of tuples and returns a list containing the last item of each tuple, confirming that your solution efficiently processes lists with a significant number of tuples.", "pass@10": true, "passes": 10}
{"task_id": 572, "prompt": "Create a Python function to remove duplicate digits from a given number of lists.", "pass@10": true, "passes": 7}
{"task_id": 125, "prompt": "Write a function to find the maximum difference, defined as the difference between the number of 0s and number of 1s that appears in any sub-string. The sub-string is part of the given binary string.", "pass@10": false, "passes": 0}
{"task_id": 479, "prompt": "Write a python function to find the first digit of a given number, considering edge cases where the input might be negative or zero, and ensure the function handles large numbers efficiently.", "pass@10": true, "passes": 9}
{"task_id": 415, "prompt": "Write a python function to find a pair with the highest product from a given array of integers. Please make sure the function accurately determines the peak achievable product. It's important for the function to calculate the maximum potential product. Given an array of integers, this task is focused on finding such a pair.", "pass@10": true, "passes": 10}
{"task_id": 291, "prompt": "Write a function to determine the number of methods to paint the fence, ensuring that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Consider edge cases where n or k could be zero and handle them appropriately.", "pass@10": true, "passes": 10}
{"task_id": 91, "prompt": "Write a function to check if a string is present. You need to determine if this particular string is a substring found within any of the strings in the provided list. Your goal is to check each string in the list for the presence of the substring.", "pass@10": true, "passes": 10}
{"task_id": 269, "prompt": "Write a function to find the ascii value of a character. The function should handle both uppercase and lowercase letters seamlessly.", "pass@10": true, "passes": 10}
{"task_id": 600, "prompt": "Create a Python function to determine if the provided number is even.", "pass@10": true, "passes": 10}
{"task_id": 808, "prompt": "Write a function to check whether the given tuples contain the k or not. You should carefully analyze each tuple. Make sure to verify the presence of k in each one.", "pass@10": true, "passes": 10}
{"task_id": 226, "prompt": "Create a Python function to remove the characters at odd index positions from a given string, ensuring that the function handles both uppercase and lowercase characters effectively.", "pass@10": true, "passes": 10}
{"task_id": 589, "prompt": "Write a function to find perfect squares between two given numbers, ensuring your solution efficiently handles large ranges and returns results quickly.", "pass@10": true, "passes": 10}
{"task_id": 477, "prompt": "Write a python function to convert the given string to lower case. Make sure to handle any special characters or numbers appropriately.", "pass@10": true, "passes": 10}
{"task_id": 422, "prompt": "Write a python function to find the average of cubes by computing the cubes of the initial n natural numbers. Ensure that your function handles cases where n is zero or negative appropriately.", "pass@10": true, "passes": 10}
{"task_id": 728, "prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. It is important to ensure that both lists are of the same length. Make sure to check the lengths before performing the addition. Handle edge cases where the lists might be empty.", "pass@10": true, "passes": 10}
{"task_id": 598, "prompt": "Write a function to check whether the given number is armstrong or not. An armstrong number is a number that is equal to the sum of its own digits raised to the power of the number of digits. In other words, this means for a number to be an armstrong number, it must satisfy a specific condition. The sum of the digits each raised to the power of the number of digits must equal the number itself.", "pass@10": true, "passes": 10}
{"task_id": 578, "prompt": "Create a function to merge 3 lists of identical length into one single flat list. The function should alternate their elements.", "pass@10": true, "passes": 10}
{"task_id": 392, "prompt": "Write a function to determine the largest sum attainable by utilizing the specified formula f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Reflect on this scenario. Consider how your function should act when n is 0 or negative.", "pass@10": true, "passes": 10}
{"task_id": 168, "prompt": "Write a function to calculate the frequency of a number within a provided list.", "pass@10": true, "passes": 10}
{"task_id": 16, "prompt": "Construct a function that outputs true if the given string has series of lowercase characters connected by an underscore and false in all other cases.", "pass@10": false, "passes": 0}
{"task_id": 127, "prompt": "Write a function to multiply two integers. Ensure that the function handles both positive and negative integers correctly.", "pass@10": true, "passes": 10}
{"task_id": 463, "prompt": "Write a function to find the maximum product subarray of the given list of integers. The array will include both positive and negative numbers, and the objective is to determine a contiguous subarray that holds the maximum product. Make sure to handle cases with both zero and negative elements correctly. Return the product of this maximum product subarray. Ensure that the solution is optimized to run in linear time.", "pass@10": true, "passes": 10}
{"task_id": 281, "prompt": "Write a python function to check if the elements of a given list are unique. Examine each element and compare it to all other elements. Ensure no element appears more than once.", "pass@10": true, "passes": 10}
{"task_id": 240, "prompt": "Compose a function that accepts two lists and substitutes the final element of the first list with the components of the second list, ensuring that the original ordering of the elements in both lists is preserved.", "pass@10": true, "passes": 10}
{"task_id": 637, "prompt": "Construct a method to verify if the provided sum results in neither gain nor deficit. Ensure your function handles both positive and negative values. Be sure to handle positive values in your function. Handle negative values appropriately in your function.", "pass@10": true, "passes": 1}
{"task_id": 120, "prompt": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Make sure to handle these situations with care. Ensure your solution manages edge cases efficiently.", "pass@10": true, "passes": 10}
{"task_id": 96, "prompt": "Write a python function to find the number of divisors. Your task is to determine how many numbers can divide the provided integer without resulting in a remainder.", "pass@10": true, "passes": 10}
{"task_id": 737, "prompt": "Create a function to check if the provided string begins with a vowel, utilizing regex. Ensure that the function is case-insensitive.", "pass@10": true, "passes": 10}
{"task_id": 413, "prompt": "Create a function that selects the nth item from a specified list. The list should consist entirely of tuples.", "pass@10": true, "passes": 10}
{"task_id": 470, "prompt": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Make sure your implementation handles tuples of varying lengths efficiently. Include error checking to handle cases where the input is an empty tuple. Document your code with comments for better readability and maintainability.", "pass@10": true, "passes": 10}
{"task_id": 92, "prompt": "Write a function to check whether the given number is undulating or not.", "pass@10": true, "passes": 10}
{"task_id": 566, "prompt": "Create a function that computes the sum of the digits in a non-negative integer. Ensure the function handles large integers efficiently.", "pass@10": true, "passes": 10}
{"task_id": 781, "prompt": "Write a python function to check whether the count of divisors is even. You need to find the number of divisors for a given integer. You then determine whether this number is even or not. You can access the problem details at https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php.", "pass@10": true, "passes": 10}
{"task_id": 393, "prompt": "Create a function to identify the list. The function should ascertain which list possesses the greatest length. It must determine which list has the most elements. In cases where several lists share the same maximum length, you can return any single one of them.", "pass@10": true, "passes": 10}
{"task_id": 230, "prompt": "Write a function that receives a string and character. The function must substitute spaces in the string with the given character. Then, it returns the modified string.", "pass@10": true, "passes": 10}
{"task_id": 557, "prompt": "Write a function to toggle the case of every character in a string, ensuring the function correctly processes both uppercase and lowercase characters.", "pass@10": true, "passes": 10}
{"task_id": 458, "prompt": "Write a function to find the area of a rectangle. Make sure that the function accommodates both whole numbers and decimal numbers for length and breadth. Consider edge cases such as zero or negative inputs to ensure robustness.", "pass@10": true, "passes": 10}
{"task_id": 428, "prompt": "Create a function that uses shell sort to organize the provided array. Ensure that your solution is efficient and can handle arrays with varying sizes. It should be able to manage arrays with different elements effectively. Consider edge cases such as empty arrays or arrays with repeated elements.", "pass@10": true, "passes": 10}
{"task_id": 451, "prompt": "Develop a function to eliminate all spaces from the specified string, ensuring your solution handles strings with varying amounts and types of whitespace effectively.", "pass@10": true, "passes": 10}

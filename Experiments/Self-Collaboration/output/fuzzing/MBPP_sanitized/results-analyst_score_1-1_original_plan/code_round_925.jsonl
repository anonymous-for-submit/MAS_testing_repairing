{"source_file": "charlessutton@: Benchmark Questions Verification V2.ipynb", "task_id": 441, "prompt": "Write a function to find the surface area of a cube of a given size.", "code": "def surfacearea_cube(l):\n  surfacearea= 6*l*l\n  return surfacearea", "test_imports": [], "test_list": ["assert surfacearea_cube(5)==150", "assert surfacearea_cube(3)==54", "assert surfacearea_cube(10)==600", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(3) == 54", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(9) == 486", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(3) == 54", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(3) == 54", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(9) == 486", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(3) == 54", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(3) == 54", "assert surfacearea_cube(3) == 54", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(1) == 6", "assert surfacearea_cube(3) == 54", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(2) == 24", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(4) == 96", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(12) == 864", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(14) == 1176", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(11) == 726", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(11) == 726", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(11) == 726", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(14) == 1176", "assert surfacearea_cube(13) == 1014", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(7) == 294", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(10) == 600", "assert surfacearea_cube(6) == 216", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(14) == 1176", "assert surfacearea_cube(5) == 150", "assert surfacearea_cube(12) == 864", "assert surfacearea_cube(12) == 864", "assert surfacearea_cube(12) == 864", "assert surfacearea_cube(12) == 864", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(8) == 384", "assert surfacearea_cube(9) == 486"], "entry_point": "surfacearea_cube", "completion": "from typing import *\ndef surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "completions": ["from typing import *\ndef surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "from typing import *\ndef surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "from typing import *\ndef surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "from typing import *\ndef surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "from typing import *\ndef surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "from typing import *\ndef surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "from typing import *\ndef surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "from typing import *\ndef surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "from typing import *\ndef surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "from typing import *\ndef surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"], "session_history": {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"}}, "session_historys": [{"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 12)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 12)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 12)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 12)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    return 6 * size**2\n\n# Test the function with the example provided\nassert surfacearea_cube(5) == 150\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"}}, {"plan": "{\n  \"plan\": {\n    \"subproblems\": [\n      \"Define a function called surfacearea_cube that takes a parameter for the size of the cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ],\n    \"high-level steps\": [\n      \"Define the function surfacearea_cube\",\n      \"Calculate the surface area of the cube using the formula 6 * size^2\",\n      \"Return the calculated surface area\"\n    ]\n  }\n}", "Round_0": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n", "report": "The compilation output of the preceding code is: invalid syntax (<string>, line 13)"}, "Round_1": {"code": "def surfacearea_cube(size):\n    surface_area = 6 * size**2\n    return surface_area\n\n# Test the function with the example provided\nprint(surfacearea_cube(5) == 150)\n"}}], "test": ["def check(surfacearea_cube):\n\tassert surfacearea_cube(5)==150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3)==54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10)==600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3) == 54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(9) == 486", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3) == 54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3) == 54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(9) == 486", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3) == 54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3) == 54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3) == 54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(1) == 6", "def check(surfacearea_cube):\n\tassert surfacearea_cube(3) == 54", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(2) == 24", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(4) == 96", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(12) == 864", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(14) == 1176", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(11) == 726", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(11) == 726", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(11) == 726", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(14) == 1176", "def check(surfacearea_cube):\n\tassert surfacearea_cube(13) == 1014", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(7) == 294", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(10) == 600", "def check(surfacearea_cube):\n\tassert surfacearea_cube(6) == 216", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(14) == 1176", "def check(surfacearea_cube):\n\tassert surfacearea_cube(5) == 150", "def check(surfacearea_cube):\n\tassert surfacearea_cube(12) == 864", "def check(surfacearea_cube):\n\tassert surfacearea_cube(12) == 864", "def check(surfacearea_cube):\n\tassert surfacearea_cube(12) == 864", "def check(surfacearea_cube):\n\tassert surfacearea_cube(12) == 864", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(8) == 384", "def check(surfacearea_cube):\n\tassert surfacearea_cube(9) == 486"], "scores": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "pass_results": [true, true, true, true, true, true, true, true, true, true], "pass_test_cases_num": [102, 102, 102, 102, 102, 102, 102, 102, 102, 102], "passed": true, "pass": true, "pass_num": 10, "round": 925, "mutate_method": "condense_two2one", "save_node": false, "parent_index": 137}
